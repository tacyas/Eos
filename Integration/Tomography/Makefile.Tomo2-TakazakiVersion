SHELL=/bin/bash

.SUFFIXES: \
	.tif .dat .prectf .fft .ctf .ctfinfoauto .ctfinfo .mrc \
	.box .roi \
	.roiinfo-coarse .roiall-coarse .roiinforef-coarse .roiallref-coarse  .roiinfoprev-coarse \
	.roiinfo        .roiall        .roiinforef        .roiallref         .roiinfoprev \
	.box2roiinfo .roiinfo2box .corinfo .divideroiinfo \
	.roilst0 .roilst .mrc3d .ds6 .mrc3dcentremed .mrc3dcentre .mrc3dcentremedpad .orimrccentre .oricorinfo .coarroi .coarroiinfo .roi2 .pad .mul


TILTAXISNUMBER=1	# Single: 1 Double: 2 
ORIFILE1=gamma-001
TILTAXISANGLE1=97.4
ORIFILE2=b
ROTATIONANGLE=-90
STEPTILTNUM=1

RESOLUTION=11.40030

    # printf ORIFILE1/2, FILENUMBER
NAMEFORMAT="%s_%03d"
EULARANGLE=YENS
ZEROTILTNUM=27
ORIBASE=$(ORIFILE1)_0$(ZEROTILTNUM)
MINTILTNUM=1
MAXTILTNUM=58
MINTILTANGLE=-60.02
STEPTILTANGLE=2

TIFMODE=0   # for CCD
#TIFMODE=1  # for Film

SMOOTHr=5
SMOOTHm=1
SMOOTHM=1
CENTERNX=30
CENTERNY=30
CENTERNZ=30

ORINX=512
ORINY=512
ORINZ=1
CORMODE=16

ORISIZEX=1024
ORISIZEY=1024
ROISIZEX=256
ROISIZEY=256
PADSIZEX=512
PADSIZEY=512
TILTAXISANGLE=0
IMAGEPADm=15
IMAGEPADV=0
IMAGEMULTIPLYINGv=-1
MRC2MAPmul=1
SMOOTH2Dr=3

# Directories for CTF Correction
#   Subdivision images  
#
DIVIDEFILEDIR=./divide

all: DataCreate Smoothing Windowing 2ndAxisRotate CoarseAlign RoiSelection BoxCreate PadAndMul roilstCreate ds6Create

# Initialization
Init::
	@if [ ! -d $(DIVIDEFILEDIR) ] ; \
	then \
		echo "DIVIDEFILEDIR Create"; \
		mkdir $(DIVIDEFILEDIR); \
	fi

TestRoutine::
	echo "for"
	for (( i=0; i<10; i++ )) ; do \
		echo $$i; \
	done	

# Data Create 
DataCreate::
	@echo "DataCreate"
	for (( j=1; j <= $(TILTAXISNUMBER) ; j++ )) do \
		echo $$j ; \
		case "$$j" in \
			1) \
				echo "First Axis"; \
				orifile=$(ORIFILE1); \
				;; \
			2) \
				echo "Second Axis"; \
				orifile=$(ORIFILE2); \
				;; \
			*) \
				echo "Something wrong" ; \
		esac ; \
		for (( i=$(MINTILTNUM) ; i <= $(MAXTILTNUM) ; i=i+$(STEPTILTNUM) )) do \
			ori=`printf $(NAMEFORMAT) $$orifile $$i`; \
			make $$ori.prectf; \
			make $$ori.divideroiinfo; \
			make $$ori.fft; \
			make $$ori.ctfinfo; \
			make $$ori.ctf; \
			make $$ori.mrc ; \
		done ; \
	done
#
# Subroutines for DataCreate
#
.dat.prectf:
	emData2mrc -i $*.dat -o $*.prectf

.tif.prectf:
	tiff2mrc -i $*.tif -o $*.prectf -m $(TIFMODE) -r $(RESOLUTION)

# divide a image into subimages 
.prectf.divideroiinfo:
	mrcImageDivideInfoForTomography -i $*.prectf -o $*.divideroiinfo.org -m 1 -d 4 
	sed 's/roi/divideroi/' $*.divideroiinfo.org | awk -v DIR=$(DIVIDEFILEDIR) '{print DIR"/"$$0}'> $*.divideroiinfo 
	mrcImageROIs -i $*.prectf -o $*.mon -I $*.divideroiinfo -S 1

# FT of subimages
.divideroiinfo.fft:
	awk '{ printf("%s\n", $$1); }' $*.divideroiinfo 
	for i in $$( awk '{ printf("%s\n", $$1); }' $*.divideroiinfo ) ; do \
		dividefilename=`basename $$i .divideroi`; \
		dividefiledir=`dirname $$i`; \
		dividefilename=$$dividefiledir/$$dividefilename ; \
		echo $$dividefilename; \
		mrcImageAbnormalValueRemove -i $$dividefilename.divideroi -o $$dividefilename.divideab -m 1 ; \
		mrcImagePad -i $$dividefilename.divideab -o $$dividefilename.dividepad -W $(PADSIZEX) -H $(PADSIZEY) -m 3 ; \
		mrcImageFFT -i $$dividefilename.dividepad -o $$dividefilename.fft ; \
	done
	touch $*.fft

# Estimate of sumimage CTFs
.fft.ctfinfo:
	for i in $$( awk '{ printf("%s\n", $$1); }' $*.divideroiinfo ) ; do \
		dividefilename=`basename $$i .divideroi`; \
		dividefiledir=`dirname $$i`; \
		dividefilename=$$dividefiledir/$$dividefilename ; \
		echo $$dividefilename; \
		ctfDetermine -i $$dividefilename.fft -o $$dividefilename.ctfinfo -D 10000 -m 128 -CutLow 0.05 -CutHigh 0.2 -Ac 200 -d 3 -Cc 0.7 -Cs 1.7 -ratio 0.2 | grep defocus > $$dividefilename.CTFD ; \
		awk -v BASE=$$dividefilename '{ printf("%s %s\n", BASE, $$2); }' $$dividefilename.CTFD >> $$dividefilename.defocuslst ; \
	done
	touch $*.ctfinfo

# CTF Correction
.ctfinfo.ctf:
	for i in $$( awk '{ printf("%s\n", $$1); }' $*.divideroiinfo ) ; do \
		dividefilename=`basename $$i .divideroi`; \
		dividefiledir=`dirname $$i`; \
		dividefilename=$$dividefiledir/$$dividefilename ; \
		echo $$dividefilename; \
		mrcImageCTFCompensation -i $$dividefilename.fft -o $$dividefilename.ctf -info2 $$dividefilename.ctfinfo -m 1 2>  $$dividefilename.ctfinfo.error ; \
		mrcImageCenterGet -i $$dividefilename.ctf -o $$dividefilename.ctfcentre -Nx $(ROISIZEX) -Ny $(ROISIZEY) ; \
	done
	touch $*.ctf

# Merage sumimages into a single image.
.ctf.mrc:
	cat $*.divideroiinfo | sed s/divideroi/ctfcentre/g > $*.divideroiinfo2
	mrcImageCTFCompensationForTiltImage -i $*.prectf -I $*.divideroiinfo2 -o $*.prerot
	mrcImageRotation -i $*.prerot -o $*.mrc -a `awk 'BEGIN {print -1*$(TILTAXISANGLE1) }'` 

#.fft.ctfinfoauto:
#	ctfDetermine -i $*.fft -o $*.ctfinfoauto -D 50000 -m 163 -CutLow 0.04 -CutHigh 0.15 -Ac 200 -d 3 -Cc 0.7 -Cs 2.1	
##	awk '/^[^:]/ {print $$0};' $*.ctfinfoauto > $*.ctfinfo
##	Display2 -i $*.fft -H 1e7

#.ctfinfoauto.ctfinfo:
#	if [ ! -f $*.ctfinfo ] ; then \
		if [ -f default.ctfinfo ] ; then \
			cat default.ctfinfo >> $*.ctfinfo ; \
		else \
			cat $*.ctfinfoauto >> $*.ctfinfo ; \
		fi \
	fi 
#	ctfDisplay -i $*.fft
#	mv $@ $@.tmp
#	grep .: $@.tmp > $@
#	cp $@ default.ctfinfo

#.ctfinfo.mrc:
#	mv $*.ctfinfo $*.ctfinfotmp
#	awk '/^[^:]/ {print $$0};' $*.ctfinfotmp > $*.ctfinfo
#	mrcImageCTFCompensation -i $*.fft -o $*.mrc -info2 $*.ctfinfo -m 1	
#	Display2 -i $*.mrc -geometry 1024x1024+0+0 -Zoom 0.5 &

.SUFFIXES: .smth .wnd .mrcsmth

Smoothing::
	for (( j=1 ; $$j <= $(TILTAXISNUMBER) ; j=$$(($$j + 1 )))) \
		do \
			if [ $$j -eq 1 ]; then \
				orifile=$(ORIFILE1); \
			else \
				orifile=$(ORIFILE2); \
			fi ; \
			for (( i=$(MINTILTNUM) ; $$i <= $(MAXTILTNUM) ; i=$$(($$i + $(STEPTILTNUM))))) \
				do \
					ori=`printf $(NAMEFORMAT) $$orifile $$i`; \
					echo $$ori; \
					make $$ori.smth; \
				done ; \
		done

.mrc.smth:
	mrcImageSmoothing -i $*.mrc -o $*.smth -sx $(SMOOTH2Dr) -sy $(SMOOTH2Dr) -m 1 

Windowing::
	for (( j=1 ; $$j <= $(TILTAXISNUMBER) ; j=$$(($$j + 1 )))) \
		do \
			if [ $$j -eq 1 ]; then \
				orifile=$(ORIFILE1); \
			else \
				orifile=$(ORIFILE2); \
			fi ; \
			for (( i=$(MINTILTNUM) ; $$i <= $(MAXTILTNUM) ; i=$$(($$i + $(STEPTILTNUM))))) \
				do \
					ori=`printf $(NAMEFORMAT) $$orifile $$i`; \
					echo $$ori; \
					make $$ori.wnd; \
					case "$$j" in \
						1) \
							cp $$ori.wnd $$ori.mrcsmth; \
							;; \
						2) \
							mrcImageRotation -i $$ori.wnd -o $$ori.mrcsmth -a $(ROTATIONANGLE) ; \
							;; \
					esac;  \
				done ; \
		done

.smth.wnd:
	mrcImageWindowing -i $*.smth -o $*.wnd

CoarseAlign::
	for (( j=1 ; j <= $(TILTAXISNUMBER) ; j++ )) \
		do \
			if [ $$j -eq 1 ]; then \
				orifile=$(ORIFILE1); \
				oribase=$(ORIFILE1)_0$(ZEROTILTNUM); \
			else \
				orifile=$(ORIFILE2); \
			fi ; \
			ORIZEROFILE=$$oribase.mrcsmth; \
			previous=$$oribase ; \
			echo "Create the zero-tilt Image ROI (same as mrcsmth, just copy)"; \
			make $$oribase.roiinfo-coarse; echo "$$oribase.roi will be created."; \
			make $$oribase.roiall-coarse ; echo "$$oribase.roi was created." ;  \
			make $$oribase.orimrccentre  ; echo "The centre of $$oribase.roi was created." ;  \
		for delta in +$(STEPTILTNUM) -$(STEPTILTNUM) ;  do \
			echo "$$delta"; \
			previous=$$oribase; \
			TOTALX=0 ; \
			TOTALY=0 ; \
			echo "Total: $$TOTALX $$TOTALY" > $$previous.oricorinfo; \
			for (( i=$$(($(ZEROTILTNUM) + $$delta )) ; (( $(MINTILTNUM) <= $$i && $$i <= $(MAXTILTNUM)  )) ; i=$$(($$i + $$delta)) )) \
				do \
					ori=`printf $(NAMEFORMAT) $$orifile $$i`; \
					echo $$i, $(MAXTILTNUM), $(MINTILTNUM); \
					echo $$previous > $$ori.prevname ; \
					ln -sf $$previous.roiinfo-coarse $$ori.roiinfoprev-coarse ; make $$ori.roiinforef-coarse ; \
					make $$ori.roiallref-coarse ; \
					make $$ori.orimrccentre ;     \
					TOTALX=`awk '/Total:/ { print $$2 }' $$previous.oricorinfo`; \
					TOTALY=`awk '/Total:/ { print $$3 }' $$previous.oricorinfo`; \
					ln -sf $$previous.orimrccentre $$ori.oriref ; make $$ori.oricorinfo ; \
					echo "TotalPrev: $$TOTALX $$TOTALY" >> $$ori.oricorinfo; \
					make $$ori.roiinfo-coarse; \
					make $$ori.roiall-coarse; \
					make $$ori.orimrccentre ; sleep 1; \
					touch $$ori.oricorinfo   ; sleep 1; \
					touch $$ori.roiinfo-coarse; sleep 1; \
					touch $$ori.roiall-coarse; sleep 1; \
					previous=$$ori; \
				done ; \
			echo $$i; \
			done ; \
		done

CleanCOARCreate::
	rm *.roiinfo-coarse

$(ORIFILE1)_0$(ZEROTILTNUM).roiinfo-coarse:
	printf "$(NAMEFORMAT).roi Rect2 %15.6f %15.6f %15.6f %15.6f %15.6f %15.6f\n" $(ORIFILE1) $(ZEROTILTNUM) $$(($(ORISIZEX)/2)) $$(($(ORISIZEY)/2)) $(ORISIZEX) $(ORISIZEY) > $(ORIFILE1)_0$(ZEROTILTNUM).roiinfo-coarse 

$(ORIFILE2)_0$(ZEROTILTNUM).roiinfo-coarse:
	printf "$(NAMEFORMAT).roi Rect2 %15.6f %15.6f %15.6f %15.6f %15.6f %15.6f\n" $(ORIFILE2) $(ZEROTILTNUM) $$(($(ORISIZEX)/2)) $$(($(ORISIZEY)/2)) $(ORISIZEX) $(ORISIZEY) > $(ORIFILE2)_0$(ZEROTILTNUM).roiinfo-coarse 

.orimrccentre.oricorinfo:
	echo "orimrccentre -> oricorinfo: SHIFT:= current.orimrccentre for prev.oirmrccentre"
	mrcImageCorrelation -i $*.orimrccentre -r $*.oriref -c $*.oricorinfo -o $*.oricormap -m $(CORMODE) -s $*.orishift

.oricorinfo.roiinfo-coarse:
	TOTALX=`awk '/TotalPrev:/ { print $$2 }' $*.oricorinfo`; \
	TOTALY=`awk '/TotalPrev:/ { print $$3 }' $*.oricorinfo`; \
	SHIFTX=`awk '/Shift:/ { print $$2 }' $*.oricorinfo`; \
	SHIFTY=`awk '/Shift:/ { print $$3 }' $*.oricorinfo`; \
	echo "$$SHIFTX,$$SHIFTY"; \
	if [ $$(($(ORINX)/2)) -lt $$SHIFTX ]; then  \
		SHIFTX=$$(($$SHIFTX - $(ORINX))) ; \
	fi ; \
	if [ $$(($(ORINY)/2)) -lt $$SHIFTY ]; then  \
		SHIFTY=$$(($$SHIFTY - $(ORINY))) ; \
	fi ; \
	TOTALX=$$(($$TOTALX + $$SHIFTX)) ; \
	TOTALY=$$(($$TOTALY + $$SHIFTY)) ; \
	echo "Total: $$TOTALX $$TOTALY" >> $*.oricorinfo; \
	printf "%s.roi Rect2 %15.6f %15.6f %15.6f %15.6f %15.6f %15.6f\n" $* $$(($(ORISIZEX)/2+$$TOTALX)) $$(($(ORISIZEY)/2+$$TOTALY)) $(ORISIZEX) $(ORISIZEY) $$TOTALX $$TOTALY > $*.roiinfo-coarse ;

.roiinfo-coarse.roiall-coarse:
	make $*.mrcsmth
	mrcImageROIs -i $*.mrcsmth -I $*.roiinfo-coarse 
	touch $*.roiall-coarse 

.roiinforef-coarse.roiallref-coarse:
	mrcImageROIs -i $*.mrcsmth -I $*.roiinforef-coarse
	touch $*.roiallref-coarse

.roiinfoprev-coarse.roiinforef-coarse:
	previous=`cat $*.prevname`; \
	sed -s s/$$previous/$*/ $*.roiinfoprev-coarse  > $*.roiinforef-coarse

.roi.orimrccentre:
	echo "roi -> orimrccentre"
	mrcImageCenterGet -i $*.roi -o $*.orimrccentre -Nx $(ORINX) -Ny $(ORINY) -Nz $(ORINZ)
	mrcImageWindowing -i $*.orimrccentre -o $*.wnd -m 16
	mv $*.wnd $*.orimrccentre


#
# ROI Selection 
#
RoiSelection:
	Display2 -i $(ORIBASE).mrcsmth 
	if [ -f $(ORIBASE).mrcsmth.roiinfo  ]  ; then \
		cp $(ORIBASE).mrcsmth.roiinfo $(ORIBASE).roiinfo; \
	fi
#	if [ $(TILTAXISNUMBER) -eq 2 ]; then \
#		Display2 -i $(ORIFILE2)_0$(ZEROTILTNUM).mrc ;\
#	fi; \
		

BoxCreate::
	for (( j=1 ; $$j <= $(TILTAXISNUMBER) ; j=$$(($$j + 1 )))) \
		do \
			if [ $$j -eq 1 ]; then \
				orifile=$(ORIFILE1); \
				oribase=$(ORIFILE1)_0$(ZEROTILTNUM); \
			else \
				orifile=$(ORIFILE2); \
			fi ; \
			BASE=$$oribase; \
			make $$BASE.roiall ; \
			for delta in +$(STEPTILTNUM) -$(STEPTILTNUM) ; \
				do \
					echo $$delta,$$BASE ;  \
					previous=$$BASE	; \
					for (( i=$$(($(ZEROTILTNUM)+$$delta)) ; (( $(MINTILTNUM) <= $$i && $$i <= $(MAXTILTNUM) )) ; i=$$(($$i + $$delta)) )) \
						do  \
							name=`printf "$(NAMEFORMAT)" $$orifile $$i`; \
							echo ">>>> $$name $$i start: $(ZEROTILTNUM) $$(($(ZEROTILTNUM)+$$delta))"; \
							echo $$previous > $$name.prevname; \
							ln -sf $$previous.roiinfo $$name.roiinfoprev ; make $$name.roiinforef ; \
							make $$name.roiinfo ; \
							make $$name.roiall ; \
							previous=$$name ; \
						done  ; \
				done ; \
		done

CleanBoxCreate::
	rm *.roiall *.roiinfoprev *.roiinforef

.roiinfo.roiall:
	make $*.roi
	mrcImageROIs -i $*.roi -I $*.roiinfo
	touch $*.roiall

.roiinforef.roiallref:
	mrcImageROIs -i $*.roi -I $*.roiinforef
	touch $*.roiallref

.roi.corinfo:
	mrcImageCorrelation -i $*.roi -r $*.ref -c $*.corinfo 

.roiinforef.roiinfo:
	# Extract ROIs using roiinfo of previous image (roiinforef)
	previous=`cat $*.prevname`; \
	echo $$previous; \
	echo "start initial ROI"; \
	make $*.roiallref ; \
	ROINUM=`wc -l $*.roiinforef | awk '{print $$1}'` ; \
	echo $$ROINUM ; \
	rm -f $*.roiinfo ; \
	for (( j=0 ; $$j < $$ROINUM ; j=$$(($$j+1)))) \
	do  \
		input=`printf "%s-%04d" $*         $$j`; \
		refer=`printf "%s-%04d" $$previous $$j`; \
		echo $$input, $$refer ; \
		ln -sf $$refer.roi $$input.ref ; make $$input.corinfo ; \
		SHIFTX=`awk '/Shift:/ { print $$2 }' $$input.corinfo`; \
		SHIFTY=`awk '/Shift:/ { print $$3 }' $$input.corinfo`; \
		echo "$$SHIFTX,$$SHIFTY,$$input"; \
		awk -v SHIFTXAWK0=$$SHIFTX -v SHIFTYAWK0=$$SHIFTY -v NAMEAWK=$$input -v BASEAWK=$* \
		 ' /'"$$input"'/ { \
			SizeX = int(sqrt(($$5-$$3)*($$5-$$3)+( $$6-$$4)*( $$6-$$4))+0.5)+1; \
			SizeY = int(sqrt(($$9-$$3)*($$9-$$3)+($$10-$$4)*($$10-$$4))+0.5)+1; \
		 	if(SizeX/2<SHIFTXAWK0) { \
				SHIFTXAWK0 -= SizeX ; \
			} \
			if(SizeY/2<SHIFTYAWK0) { \
				SHIFTYAWK0 -= SizeY ; \
			} \
			Angle = atan2($$6-$$4, $$5-$$3) ; \
			SHIFTXAWK = +1*( SHIFTXAWK0*cos(Angle) - SHIFTYAWK0*sin(Angle)); \
			SHIFTYAWK = +1*( SHIFTXAWK0*sin(Angle) + SHIFTYAWK0*cos(Angle)); \
			printf("%s-%04d.roi Rect %15.6f %15.6f %15.6f %15.6f %15.6f %15.6f %15.6f %15.6f %15.6f %15.6f %15.6f %15.6f %15.6f\n", BASEAWK, FNR-1, $$3+SHIFTXAWK, $$4+SHIFTYAWK, $$5+SHIFTXAWK, $$6+SHIFTYAWK, $$7+SHIFTXAWK, $$8+SHIFTYAWK, $$9+SHIFTXAWK, $$10+SHIFTYAWK, SHIFTXAWK, SHIFTYAWK, Angle*180/3.141592653589793238, SizeX, SizeY);}' \
		 $*.roiinforef | tee -a $*.roiinfo ; \
	done ; 

.roiinfoprev.roiinforef:
	previous=`cat $*.prevname`; \
	sed -s s/$$previous/$*/ $*.roiinfoprev  > $*.roiinforef

PadAndMul::
	for (( k=1 ; $$k <= $(TILTAXISNUMBER) ; k=$$(($$k + 1 )))) \
		do \
			if [ $$k -eq 1 ]; then \
				orifile=$(ORIFILE1); \
				oribase=$(ORIFILE1)_0$(ZEROTILTNUM); \
			else \
				orifile=$(ORIFILE2); \
				oribase=$(ORIFILE2)_0$(ZEROTILTNUM); \
			fi ; \
			roiNum=`wc -l  $$oribase.roiinfo | awk '{print $$1}' `; \
			for ((i=$(MINTILTNUM);i<=$(MAXTILTNUM);i=$$(($$i+$(STEPTILTNUM))) )) \
				do \
					for((j=0;j<$$roiNum;j=$$(($$j+1)))) \
						do \
							name=`printf "$(NAMEFORMAT)-%04d" $$orifile $$i $$j` ; \
							echo $$(($$i-$(ZEROTILTNUM))) > $$name.tilt ; \
							ln -sf $$name.roi $$name.roi2 ; make $$name.pad ; \
							make $$name.mul ; \
						done ; \
				done ; \
		done

CleanPadAndMul::
	rm *.pad

.roi2.pad:
	tilt=`cat $*.tilt` ; \
	echo $$tilt ; \
	mrcImagePad -i $*.roi2 -o $*.pad -Tilt $(TILTAXISANGLE) $$tilt -m $(IMAGEPADm) -V $(IMAGEPADV)

.pad.mul:
	mrcImageMultiplying -i $*.pad -o $*.mul -v $(IMAGEMULTIPLYINGv)

roilstCreate::
	for (( j=1 ; $$j <= $(TILTAXISNUMBER) ; j=$$(($$j + 1 )))) \
		do \
			if [ $$j -eq 1 ]; then \
				orifile=$(ORIFILE1); \
				oribase=$(ORIFILE1)_0$(ZEROTILTNUM); \
				echo "$(ORIFILE1)" > roilstorifile.txt; \
			else \
				orifile=$(ORIFILE2); \
				oribase=$(ORIFILE2)_0$(ZEROTILTNUM); \
				echo "$(ORIFILE2)" > roilstorifile.txt; \
			fi ; \
			roiNum=`wc -l  $$oribase.roiinfo | awk '{print $$1}' `;\
			echo $$roiNum; \
			for (( i=0 ; $$i < $$roiNum ; i=$$(($$i + 1)))) \
				do \
					tiltnum=`printf "%s%04d" $$orifile $$i`; \
					echo "$$i" > $$tiltnum.roilst0; \
					make $$tiltnum.roilst ; \
				done ; \
		done ; \
		roiNum=`wc -l  $$oribase.roiinfo | awk '{print $$1}' `;\
		echo $$roiNum; \
		for (( i=0 ; $$i < $$roiNum ; i=$$(($$i + 1)))) \
			do \
				tiltnum=`printf "%04d" $$i`; \
				echo "$$i" > $$tiltnum.roilst0; \
				cat $(ORIFILE1)$$tiltnum.roilst >> $$tiltnum-d.roilst ; \
				cat $(ORIFILE2)$$tiltnum.roilst >> $$tiltnum-d.roilst ; \
			done

Cleanroilst::
	rm *.roilst

.roilst0.roilst:
		i=`cat $*.roilst0`; \
		orifile=`cat roilstorifile.txt`; \
		oribase=`printf "$(NAMEFORMAT)" $$orifile $(ZEROTILTNUM)`; \
		num=`printf "%04d" $$i`; \
		roiname=`printf "%s-%04d" $$oribase $$i`; \
		echo "$$roiname in $$oribase.roiinfo"; \
		if [ $$orifile = a ]; then \
			echo "$*.roilst creating" ; \
			ls -1 $$orifile*-$$num.mul | awk -v eularangle=$(EULARANGLE) ' BEGIN {angle=$(MINTILTANGLE)} {printf("%s %s %f %f %f\n",$$1, eularangle, 0, angle, 0); angle+=$(STEPTILTANGLE); if (angle == 0 ) { angle+=$(STEPTILTANGLE)} }' > $*.roilst ; \
		else \
			echo "$*.roilst creating" ; \
			ls -1 $$orifile*-$$num.mul | awk -v eularangle=$(EULARANGLE) ' BEGIN {angle=$(MINTILTANGLE)} {printf("%s %s %f %f %f\n",$$1, eularangle, angle, 0, 0); angle+=$(STEPTILTANGLE); if (angle == 0 ){ angle+=$(STEPTILTANGLE)} }' > $*.roilst ; \
		fi

ds6Create::
	roiNum=`ls -1 *-d.roilst | wc -l `; \
	echo $$roiNum; \
	for (( i=0 ; $$i < $$roiNum ; i=$$(($$i + 1)) )) \
	do \
		tiltnum=`printf "%04d-d" $$i`; \
		make $$tiltnum.mrc3d ; \
		make $$tiltnum.mrc3dcentre ; \
		make $$tiltnum.mrc3dcentremed ; \
		make $$tiltnum.mrc3dcentremedpad ; \
		make $$tiltnum.ds6 ; \
	done ;
	for (( j=1 ; $$j <= $(TILTAXISNUMBER) ; j=$$(($$j + 1 )))) \
		do \
			if [ $$j -eq 1 ]; then \
				orifile=$(ORIFILE1); \
			else \
				orifile=$(ORIFILE2); \
			fi ; \
	roiNum=`ls -1 $$orifile*.roilst | wc -l `; \
	echo $$roiNum; \
	for (( i=0 ; $$i < $$roiNum ; i=$$(($$i + 1)) )) \
		do \
			tiltnum=`printf "%s%04d" $$orifile $$i`; \
			make $$tiltnum.mrc3d ; \
			make $$tiltnum.mrc3dcentre ; \
			make $$tiltnum.mrc3dcentremed ; \
			make $$tiltnum.mrc3dcentremedpad ; \
			make $$tiltnum.ds6 ; \
		done ; \
	done

Cleands6::
	rm *.mrc3d

.roilst.mrc3d:
	mrc2Dto3D -I $*.roilst -o $*.mrc3d -single 0 -InterpolationMode 2 -m 1 
	
.mrc3dcentremedpad.ds6:
	mrc2map -i $*.mrc3d -o $*.ds6 -mul $(MRC2MAPmul)
	mrc2map -i $*.mrc3dcentre -o $*.centre.ds6 -mul $(MRC2MAPmul)
	mrc2map -i $*.mrc3dcentremed -o $*.centremed.ds6 -mul $(MRC2MAPmul)
	mrc2map -i $*.mrc3dcentremedpad -o $*.centremedpad.ds6 -mul $(MRC2MAPmul)

.mrc3dcentre.mrc3dcentremed:
	mrcImageSmoothing -i $*.mrc3dcentre -o $*.mrc3dcentremed -r $(SMOOTHr) -m $(SMOOTHm) -M $(SMOOTHM)

.mrc3d.mrc3dcentre:
	mrcImageCenterGet -i $*.mrc3d -o $*.mrc3dcentre -Nx $(CENTERNX) -Ny $(CENTERNY) -Nz $(CENTERNZ)

.mrc3dcentremed.mrc3dcentremedpad:
	 mrcImage3DPad -i $*.mrc3dcentremed -o $*.mrc3dcentremedpad -r 90 -m 1 -M 1 -v 0

