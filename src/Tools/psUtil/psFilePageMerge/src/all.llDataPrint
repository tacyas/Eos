%%Page:
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 37 640 303 791
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Tue Dec 19 17:15:25 2000)
%%Title: (/tmp/0.llDataPrint)
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Arrow
/Ar {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
					% b2 0 h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    neg					% -h2 b2
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

% Transform coordinate system to use X11 coordinates

% 1. Flip y-axis over by reversing the scale,
% 2. Translate the origin to the other side of the page,
%    making the origin the upper left corner
0.757382 -0.755721 scale
0 -1046 translate

% User defined page layout

% Set color level
/CL 2 def

% Set origin
50 0 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
55 31 292 138 Box Fill

gsave clip


% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

104 114 3 Ci
104 119 3 Ci
105 121 3 Ci
105 122 3 Ci
105 74 3 Ci
106 75 3 Ci
106 76 3 Ci
107 78 3 Ci
107 83 3 Ci
107 93 3 Ci
108 106 3 Ci
108 113 3 Ci
108 116 3 Ci
109 118 3 Ci
109 119 3 Ci
110 120 3 Ci
110 73 3 Ci
110 72 3 Ci
111 73 3 Ci
111 75 3 Ci
112 78 3 Ci
112 85 3 Ci
112 98 3 Ci
113 107 3 Ci
113 110 3 Ci
113 111 3 Ci
114 109 3 Ci
115 107 3 Ci
115 105 3 Ci
116 109 3 Ci
116 114 3 Ci
117 117 3 Ci
117 122 3 Ci
117 127 3 Ci
118 136 3 Ci
118 145 3 Ci
118 50 3 Ci
119 53 3 Ci
119 53 3 Ci
120 52 3 Ci
120 144 3 Ci
120 122 3 Ci
121 116 3 Ci
121 114 3 Ci
122 117 3 Ci
122 144 3 Ci
123 54 3 Ci
123 55 3 Ci
124 55 3 Ci
124 52 3 Ci
125 136 3 Ci
125 107 3 Ci
125 104 3 Ci
126 102 3 Ci
126 100 3 Ci
127 98 3 Ci
127 94 3 Ci
127 90 3 Ci
128 81 3 Ci
128 143 3 Ci
129 133 3 Ci
129 128 3 Ci
129 124 3 Ci
130 121 3 Ci
130 118 3 Ci
130 117 3 Ci
131 120 3 Ci
132 133 3 Ci
132 145 3 Ci
132 148 3 Ci
133 149 3 Ci
133 49 3 Ci
134 50 3 Ci
134 55 3 Ci
134 73 3 Ci
135 84 3 Ci
135 86 3 Ci
135 87 3 Ci
136 88 3 Ci
136 90 3 Ci
137 94 3 Ci
137 99 3 Ci
137 105 3 Ci
138 109 3 Ci
138 111 3 Ci
139 114 3 Ci
139 117 3 Ci
139 124 3 Ci
140 134 3 Ci
140 141 3 Ci
141 143 3 Ci
141 142 3 Ci
142 140 3 Ci
142 137 3 Ci
142 132 3 Ci
143 127 3 Ci
143 122 3 Ci
144 119 3 Ci
144 117 3 Ci
144 117 3 Ci
145 116 3 Ci
146 110 3 Ci
146 98 3 Ci
146 94 3 Ci
147 92 3 Ci
147 90 3 Ci
147 88 3 Ci
148 86 3 Ci
148 83 3 Ci
149 80 3 Ci
149 76 3 Ci
149 73 3 Ci
150 71 3 Ci
150 70 3 Ci
151 70 3 Ci
151 73 3 Ci
151 77 3 Ci
152 82 3 Ci
152 86 3 Ci
152 89 3 Ci
153 84 3 Ci
154 72 3 Ci
154 65 3 Ci
154 64 3 Ci
155 65 3 Ci
155 68 3 Ci
156 72 3 Ci
156 79 3 Ci
156 92 3 Ci
157 105 3 Ci
157 112 3 Ci
158 116 3 Ci
158 119 3 Ci
158 121 3 Ci
159 122 3 Ci
159 123 3 Ci
160 121 3 Ci
160 118 3 Ci
161 113 3 Ci
161 108 3 Ci
161 101 3 Ci
162 94 3 Ci
162 88 3 Ci
163 83 3 Ci
163 79 3 Ci
163 77 3 Ci
164 75 3 Ci
164 74 3 Ci
164 72 3 Ci
165 72 3 Ci
165 71 3 Ci
166 70 3 Ci
167 72 3 Ci
167 74 3 Ci
168 75 3 Ci
168 75 3 Ci
168 74 3 Ci
169 70 3 Ci
169 54 3 Ci
169 142 3 Ci
170 138 3 Ci
170 138 3 Ci
171 138 3 Ci
171 139 3 Ci
171 140 3 Ci
172 140 3 Ci
173 137 3 Ci
173 134 3 Ci
173 132 3 Ci
174 131 3 Ci
174 130 3 Ci
175 129 3 Ci
175 129 3 Ci
175 128 3 Ci
176 126 3 Ci
176 121 3 Ci
176 99 3 Ci
177 88 3 Ci
177 86 3 Ci
178 86 3 Ci
179 87 3 Ci
179 88 3 Ci
180 89 3 Ci
180 89 3 Ci
181 87 3 Ci
181 86 3 Ci
181 84 3 Ci
182 81 3 Ci
182 78 3 Ci
183 76 3 Ci
183 73 3 Ci
183 71 3 Ci
184 69 3 Ci
184 67 3 Ci
185 62 3 Ci
185 54 3 Ci
185 148 3 Ci
186 144 3 Ci
186 142 3 Ci
186 142 3 Ci
187 141 3 Ci
188 143 3 Ci
188 145 3 Ci
189 148 3 Ci
189 51 3 Ci
190 49 3 Ci
190 148 3 Ci
191 146 3 Ci
191 145 3 Ci
192 145 3 Ci
192 144 3 Ci
193 142 3 Ci
193 96 3 Ci
193 96 3 Ci
194 96 3 Ci
195 96 3 Ci
195 97 3 Ci
196 99 3 Ci
197 131 3 Ci
197 147 3 Ci
197 148 3 Ci
198 149 3 Ci
198 49 3 Ci
198 49 3 Ci
199 50 3 Ci
200 149 3 Ci
200 149 3 Ci
201 148 3 Ci
202 149 3 Ci
202 49 3 Ci
203 50 3 Ci
203 51 3 Ci
203 67 3 Ci
204 99 3 Ci
204 100 3 Ci
205 101 3 Ci
206 102 3 Ci
206 102 3 Ci
207 102 3 Ci
207 56 3 Ci
208 54 3 Ci
208 53 3 Ci
208 53 3 Ci
209 52 3 Ci
210 50 3 Ci
210 149 3 Ci
210 147 3 Ci
211 50 3 Ci
212 53 3 Ci
212 55 3 Ci
212 56 3 Ci
213 57 3 Ci
214 56 3 Ci
214 54 3 Ci
215 50 3 Ci
215 144 3 Ci
215 136 3 Ci
216 131 3 Ci
216 129 3 Ci
217 127 3 Ci
217 125 3 Ci
217 122 3 Ci
218 120 3 Ci
218 117 3 Ci
219 114 3 Ci
219 112 3 Ci
219 111 3 Ci
220 109 3 Ci
220 109 3 Ci
221 110 3 Ci
221 111 3 Ci
222 112 3 Ci
222 113 3 Ci
223 110 3 Ci
224 99 3 Ci
224 77 3 Ci
224 72 3 Ci
225 70 3 Ci
225 69 3 Ci
225 69 3 Ci
226 68 3 Ci
226 67 3 Ci
227 66 3 Ci
227 64 3 Ci
227 61 3 Ci
228 58 3 Ci
228 57 3 Ci
229 59 3 Ci
229 60 3 Ci
230 60 3 Ci
230 60 3 Ci
231 56 3 Ci
231 144 3 Ci
231 128 3 Ci
232 124 3 Ci
232 123 3 Ci
232 123 3 Ci
233 124 3 Ci
233 126 3 Ci
234 127 3 Ci
234 128 3 Ci
235 126 3 Ci
236 126 3 Ci
236 124 3 Ci
236 123 3 Ci
237 121 3 Ci
237 119 3 Ci
237 115 3 Ci
238 110 3 Ci
238 104 3 Ci
239 97 3 Ci
239 90 3 Ci
239 85 3 Ci
240 80 3 Ci
240 77 3 Ci
241 76 3 Ci
241 76 3 Ci
242 77 3 Ci
242 79 3 Ci
242 82 3 Ci
243 86 3 Ci
243 93 3 Ci
244 106 3 Ci
244 119 3 Ci
244 126 3 Ci
245 130 3 Ci
245 133 3 Ci
246 134 3 Ci
246 133 3 Ci
246 126 3 Ci
247 114 3 Ci
247 109 3 Ci
248 112 3 Ci
248 116 3 Ci
249 121 3 Ci
249 125 3 Ci
249 128 3 Ci
250 128 3 Ci
250 127 3 Ci
251 125 3 Ci
251 122 3 Ci
251 118 3 Ci
252 115 3 Ci
252 112 3 Ci
253 110 3 Ci
253 108 3 Ci
253 106 3 Ci
254 104 3 Ci
254 100 3 Ci
254 88 3 Ci
255 82 3 Ci
255 81 3 Ci
256 81 3 Ci
256 79 3 Ci
257 76 3 Ci
257 71 3 Ci
258 66 3 Ci
258 61 3 Ci
258 58 3 Ci
259 56 3 Ci
259 55 3 Ci
260 57 3 Ci
260 64 3 Ci
261 74 3 Ci
261 81 3 Ci
261 84 3 Ci
262 87 3 Ci
262 89 3 Ci
263 93 3 Ci
263 99 3 Ci
263 104 3 Ci
264 108 3 Ci
264 110 3 Ci
265 111 3 Ci
265 112 3 Ci
265 114 3 Ci
266 125 3 Ci
266 143 3 Ci
266 148 3 Ci
267 149 3 Ci
267 49 3 Ci
268 50 3 Ci
268 53 3 Ci
268 65 3 Ci
269 78 3 Ci
269 81 3 Ci
270 80 3 Ci
270 77 3 Ci
271 74 3 Ci
271 70 3 Ci
271 65 3 Ci
272 55 3 Ci
272 117 3 Ci
273 108 3 Ci
273 104 3 Ci
273 100 3 Ci
274 98 3 Ci
274 96 3 Ci
275 94 3 Ci
275 91 3 Ci
275 62 3 Ci
276 146 3 Ci
276 144 3 Ci
277 143 3 Ci
277 144 3 Ci
278 54 3 Ci
278 81 3 Ci
278 84 3 Ci
279 82 3 Ci
280 76 3 Ci
280 54 3 Ci
280 146 3 Ci
281 145 3 Ci
281 145 3 Ci
282 148 3 Ci
282 53 3 Ci
282 62 3 Ci
283 71 3 Ci
283 76 3 Ci
283 81 3 Ci
284 84 3 Ci
284 89 3 Ci
285 92 3 Ci
285 91 3 Ci
286 89 3 Ci
286 87 3 Ci
287 88 3 Ci
287 91 3 Ci
288 100 3 Ci
288 113 3 Ci
288 120 3 Ci
289 123 3 Ci
289 125 3 Ci
290 126 3 Ci
290 125 3 Ci
290 78 3 Ci
291 79 3 Ci
291 80 3 Ci
292 82 3 Ci
292 85 3 Ci
292 92 3 Ci
293 105 3 Ci
293 115 3 Ci
293 120 3 Ci
294 122 3 Ci
294 123 3 Ci
295 124 3 Ci
295 76 3 Ci
295 77 3 Ci
296 79 3 Ci
296 84 3 Ci

% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 104 157 moveto
 104 157 lineto
 105 157 lineto
 106 157 lineto
 106 157 lineto
 107 157 lineto
 108 157 lineto
 109 157 lineto
 110 157 lineto
 110 157 lineto
 111 157 lineto
 112 157 lineto
 113 157 lineto
 114 157 lineto
 115 157 lineto
 116 157 lineto
 116 157 lineto
 117 157 lineto
 118 157 lineto
 119 157 lineto
 120 157 lineto
 121 157 lineto
 121 157 lineto
 122 157 lineto
 122 157 lineto
 123 157 lineto
 123 156 lineto
 124 157 lineto
 125 157 lineto
 125 157 lineto
 126 156 lineto
 126 156 lineto
 127 156 lineto
 127 157 lineto
 128 157 lineto
 128 157 lineto
 129 157 lineto
 129 156 lineto
 130 156 lineto
 130 156 lineto
 131 156 lineto
 131 157 lineto
 132 157 lineto
 133 156 lineto
 133 156 lineto
 134 157 lineto
 135 156 lineto
 136 156 lineto
 137 156 lineto
 138 155 lineto
 139 156 lineto
 140 156 lineto
 141 155 lineto
 141 154 lineto
 142 155 lineto
 142 155 lineto
 143 155 lineto
 144 156 lineto
 145 156 lineto
 145 157 lineto
 146 156 lineto
 147 156 lineto
 147 155 lineto
 148 154 lineto
 148 154 lineto
 149 154 lineto
 150 153 lineto
 151 154 lineto
 151 155 lineto
 152 155 lineto
 152 155 lineto
 153 156 lineto
 154 156 lineto
 155 155 lineto
 156 156 lineto
 156 156 lineto
 157 156 lineto
 157 155 lineto
 158 154 lineto
 158 153 lineto
 159 152 lineto
 160 153 lineto
 160 154 lineto
 161 154 lineto
 161 155 lineto
 162 154 lineto
 163 153 lineto
 163 153 lineto
 163 152 lineto
 164 151 lineto
 165 153 lineto
 166 154 lineto
 166 154 lineto
 166 155 lineto
 167 155 lineto
 168 156 lineto
 169 156 lineto
 169 157 lineto
 169 156 lineto
 170 155 lineto
 170 154 lineto
 171 154 lineto
 171 154 lineto
 172 154 lineto
 173 152 lineto
 173 150 lineto
 174 148 lineto
 174 147 lineto
 175 146 lineto
 175 147 lineto
 176 150 lineto
 176 154 lineto
 176 155 lineto
 177 152 lineto
 177 149 lineto
 178 147 lineto
 178 146 lineto
 178 146 lineto
 179 147 lineto
 179 148 lineto
 180 149 lineto
 180 149 lineto
 180 149 lineto
 181 150 lineto
 181 150 lineto
 182 151 lineto
 183 151 lineto
 183 152 lineto
 183 152 lineto
 184 153 lineto
 185 153 lineto
 185 153 lineto
 185 151 lineto
 186 147 lineto
 186 143 lineto
 186 140 lineto
 187 137 lineto
 187 136 lineto
 188 137 lineto
 188 140 lineto
 188 143 lineto
 189 146 lineto
 189 147 lineto
 190 145 lineto
 190 140 lineto
 190 133 lineto
 191 124 lineto
 191 117 lineto
 192 114 lineto
 192 119 lineto
 192 131 lineto
 193 152 lineto
 193 136 lineto
 193 105 lineto
 194 76 lineto
 194 54 lineto
 195 42 lineto
 195 43 lineto
 195 58 lineto
 196 85 lineto
 196 121 lineto
 197 154 lineto
 197 119 lineto
 197 90 lineto
 198 70 lineto
 198 62 lineto
 198 63 lineto
 199 70 lineto
 199 79 lineto
 200 87 lineto
 200 90 lineto
 200 87 lineto
 201 79 lineto
 201 70 lineto
 202 63 lineto
 202 62 lineto
 202 70 lineto
 203 90 lineto
 203 119 lineto
 203 154 lineto
 204 121 lineto
 204 85 lineto
 205 58 lineto
 205 43 lineto
 205 42 lineto
 206 54 lineto
 206 76 lineto
 207 105 lineto
 207 136 lineto
 207 152 lineto
 208 131 lineto
 208 119 lineto
 208 114 lineto
 209 117 lineto
 209 124 lineto
 210 133 lineto
 210 140 lineto
 210 145 lineto
 211 147 lineto
 211 146 lineto
 212 143 lineto
 212 140 lineto
 212 137 lineto
 213 136 lineto
 213 137 lineto
 214 140 lineto
 214 143 lineto
 214 147 lineto
 215 151 lineto
 215 153 lineto
 215 153 lineto
 216 153 lineto
 216 152 lineto
 217 152 lineto
 217 151 lineto
 218 151 lineto
 218 150 lineto
 219 150 lineto
 219 150 lineto
 220 149 lineto
 220 149 lineto
 221 148 lineto
 221 147 lineto
 222 146 lineto
 222 146 lineto
 222 147 lineto
 223 149 lineto
 223 152 lineto
 224 155 lineto
 224 154 lineto
 224 150 lineto
 225 147 lineto
 225 146 lineto
 226 147 lineto
 226 148 lineto
 227 150 lineto
 227 152 lineto
 227 153 lineto
 228 154 lineto
 229 154 lineto
 230 154 lineto
 230 155 lineto
 231 156 lineto
 231 157 lineto
 231 156 lineto
 232 156 lineto
 232 155 lineto
 233 155 lineto
 234 154 lineto
 234 154 lineto
 235 153 lineto
 235 152 lineto
 236 151 lineto
 237 153 lineto
 237 153 lineto
 238 154 lineto
 238 155 lineto
 239 155 lineto
 240 154 lineto
 240 153 lineto
 241 153 lineto
 241 152 lineto
 242 153 lineto
 243 155 lineto
 243 156 lineto
 244 156 lineto
 244 156 lineto
 244 156 lineto
 245 155 lineto
 246 156 lineto
 247 156 lineto
 248 155 lineto
 249 155 lineto
 249 154 lineto
 249 154 lineto
 250 153 lineto
 251 154 lineto
 252 154 lineto
 253 154 lineto
 253 156 lineto
 254 156 lineto
 254 157 lineto
 255 156 lineto
 256 156 lineto
 256 156 lineto
 257 155 lineto
 258 155 lineto
 258 154 lineto
 259 154 lineto
 260 156 lineto
 260 156 lineto
 261 156 lineto
 262 156 lineto
 263 156 lineto
 264 156 lineto
 265 157 lineto
 266 157 lineto
 267 156 lineto
 268 156 lineto
 268 157 lineto
 269 156 lineto
 270 156 lineto
 270 156 lineto
 271 156 lineto
 271 156 lineto
 272 157 lineto
 272 157 lineto
 273 157 lineto
 273 156 lineto
 273 156 lineto
 274 156 lineto
 275 156 lineto
 275 157 lineto
 276 157 lineto
 276 156 lineto
 277 157 lineto
 278 157 lineto
 278 157 lineto
 278 157 lineto
 279 157 lineto
 280 157 lineto
 280 157 lineto
 281 156 lineto
 282 157 lineto
 283 157 lineto
 284 157 lineto
 285 157 lineto
 285 157 lineto
 286 157 lineto
 287 157 lineto
 288 157 lineto
 289 157 lineto
 290 157 lineto
 291 157 lineto
 291 156 lineto
 292 157 lineto
 293 157 lineto
 294 157 lineto
 295 157 lineto
 295 157 lineto
 296 157 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

104 157 1 Ci
104 157 1 Ci
105 157 1 Ci
106 157 1 Ci
106 157 1 Ci
107 157 1 Ci
108 157 1 Ci
109 157 1 Ci
110 157 1 Ci
110 157 1 Ci
111 157 1 Ci
112 157 1 Ci
113 157 1 Ci
114 157 1 Ci
115 157 1 Ci
116 157 1 Ci
116 157 1 Ci
117 157 1 Ci
118 157 1 Ci
119 157 1 Ci
120 157 1 Ci
121 157 1 Ci
121 157 1 Ci
122 157 1 Ci
122 157 1 Ci
123 157 1 Ci
123 156 1 Ci
124 157 1 Ci
125 157 1 Ci
125 157 1 Ci
126 156 1 Ci
126 156 1 Ci
127 156 1 Ci
127 157 1 Ci
128 157 1 Ci
128 157 1 Ci
129 157 1 Ci
129 156 1 Ci
130 156 1 Ci
130 156 1 Ci
131 156 1 Ci
131 157 1 Ci
132 157 1 Ci
133 156 1 Ci
133 156 1 Ci
134 157 1 Ci
135 156 1 Ci
136 156 1 Ci
137 156 1 Ci
138 155 1 Ci
139 156 1 Ci
140 156 1 Ci
141 155 1 Ci
141 154 1 Ci
142 155 1 Ci
142 155 1 Ci
143 155 1 Ci
144 156 1 Ci
145 156 1 Ci
145 157 1 Ci
146 156 1 Ci
147 156 1 Ci
147 155 1 Ci
148 154 1 Ci
148 154 1 Ci
149 154 1 Ci
150 153 1 Ci
151 154 1 Ci
151 155 1 Ci
152 155 1 Ci
152 155 1 Ci
153 156 1 Ci
154 156 1 Ci
155 155 1 Ci
156 156 1 Ci
156 156 1 Ci
157 156 1 Ci
157 155 1 Ci
158 154 1 Ci
158 153 1 Ci
159 152 1 Ci
160 153 1 Ci
160 154 1 Ci
161 154 1 Ci
161 155 1 Ci
162 154 1 Ci
163 153 1 Ci
163 153 1 Ci
163 152 1 Ci
164 151 1 Ci
165 153 1 Ci
166 154 1 Ci
166 154 1 Ci
166 155 1 Ci
167 155 1 Ci
168 156 1 Ci
169 156 1 Ci
169 157 1 Ci
169 156 1 Ci
170 155 1 Ci
170 154 1 Ci
171 154 1 Ci
171 154 1 Ci
172 154 1 Ci
173 152 1 Ci
173 150 1 Ci
174 148 1 Ci
174 147 1 Ci
175 146 1 Ci
175 147 1 Ci
176 150 1 Ci
176 154 1 Ci
176 155 1 Ci
177 152 1 Ci
177 149 1 Ci
178 147 1 Ci
178 146 1 Ci
178 146 1 Ci
179 147 1 Ci
179 148 1 Ci
180 149 1 Ci
180 149 1 Ci
180 149 1 Ci
181 150 1 Ci
181 150 1 Ci
182 151 1 Ci
183 151 1 Ci
183 152 1 Ci
183 152 1 Ci
184 153 1 Ci
185 153 1 Ci
185 153 1 Ci
185 151 1 Ci
186 147 1 Ci
186 143 1 Ci
186 140 1 Ci
187 137 1 Ci
187 136 1 Ci
188 137 1 Ci
188 140 1 Ci
188 143 1 Ci
189 146 1 Ci
189 147 1 Ci
190 145 1 Ci
190 140 1 Ci
190 133 1 Ci
191 124 1 Ci
191 117 1 Ci
192 114 1 Ci
192 119 1 Ci
192 131 1 Ci
193 152 1 Ci
193 136 1 Ci
193 105 1 Ci
194 76 1 Ci
194 54 1 Ci
195 42 1 Ci
195 43 1 Ci
195 58 1 Ci
196 85 1 Ci
196 121 1 Ci
197 154 1 Ci
197 119 1 Ci
197 90 1 Ci
198 70 1 Ci
198 62 1 Ci
198 63 1 Ci
199 70 1 Ci
199 79 1 Ci
200 87 1 Ci
200 90 1 Ci
200 87 1 Ci
201 79 1 Ci
201 70 1 Ci
202 63 1 Ci
202 62 1 Ci
202 70 1 Ci
203 90 1 Ci
203 119 1 Ci
203 154 1 Ci
204 121 1 Ci
204 85 1 Ci
205 58 1 Ci
205 43 1 Ci
205 42 1 Ci
206 54 1 Ci
206 76 1 Ci
207 105 1 Ci
207 136 1 Ci
207 152 1 Ci
208 131 1 Ci
208 119 1 Ci
208 114 1 Ci
209 117 1 Ci
209 124 1 Ci
210 133 1 Ci
210 140 1 Ci
210 145 1 Ci
211 147 1 Ci
211 146 1 Ci
212 143 1 Ci
212 140 1 Ci
212 137 1 Ci
213 136 1 Ci
213 137 1 Ci
214 140 1 Ci
214 143 1 Ci
214 147 1 Ci
215 151 1 Ci
215 153 1 Ci
215 153 1 Ci
216 153 1 Ci
216 152 1 Ci
217 152 1 Ci
217 151 1 Ci
218 151 1 Ci
218 150 1 Ci
219 150 1 Ci
219 150 1 Ci
220 149 1 Ci
220 149 1 Ci
221 148 1 Ci
221 147 1 Ci
222 146 1 Ci
222 146 1 Ci
222 147 1 Ci
223 149 1 Ci
223 152 1 Ci
224 155 1 Ci
224 154 1 Ci
224 150 1 Ci
225 147 1 Ci
225 146 1 Ci
226 147 1 Ci
226 148 1 Ci
227 150 1 Ci
227 152 1 Ci
227 153 1 Ci
228 154 1 Ci
229 154 1 Ci
230 154 1 Ci
230 155 1 Ci
231 156 1 Ci
231 157 1 Ci
231 156 1 Ci
232 156 1 Ci
232 155 1 Ci
233 155 1 Ci
234 154 1 Ci
234 154 1 Ci
235 153 1 Ci
235 152 1 Ci
236 151 1 Ci
237 153 1 Ci
237 153 1 Ci
238 154 1 Ci
238 155 1 Ci
239 155 1 Ci
240 154 1 Ci
240 153 1 Ci
241 153 1 Ci
241 152 1 Ci
242 153 1 Ci
243 155 1 Ci
243 156 1 Ci
244 156 1 Ci
244 156 1 Ci
244 156 1 Ci
245 155 1 Ci
246 156 1 Ci
247 156 1 Ci
248 155 1 Ci
249 155 1 Ci
249 154 1 Ci
249 154 1 Ci
250 153 1 Ci
251 154 1 Ci
252 154 1 Ci
253 154 1 Ci
253 156 1 Ci
254 156 1 Ci
254 157 1 Ci
255 156 1 Ci
256 156 1 Ci
256 156 1 Ci
257 155 1 Ci
258 155 1 Ci
258 154 1 Ci
259 154 1 Ci
260 156 1 Ci
260 156 1 Ci
261 156 1 Ci
262 156 1 Ci
263 156 1 Ci
264 156 1 Ci
265 157 1 Ci
266 157 1 Ci
267 156 1 Ci
268 156 1 Ci
268 157 1 Ci
269 156 1 Ci
270 156 1 Ci
270 156 1 Ci
271 156 1 Ci
271 156 1 Ci
272 157 1 Ci
272 157 1 Ci
273 157 1 Ci
273 156 1 Ci
273 156 1 Ci
274 156 1 Ci
275 156 1 Ci
275 157 1 Ci
276 157 1 Ci
276 156 1 Ci
277 157 1 Ci
278 157 1 Ci
278 157 1 Ci
278 157 1 Ci
279 157 1 Ci
280 157 1 Ci
280 157 1 Ci
281 156 1 Ci
282 157 1 Ci
283 157 1 Ci
284 157 1 Ci
285 157 1 Ci
285 157 1 Ci
286 157 1 Ci
287 157 1 Ci
288 157 1 Ci
289 157 1 Ci
290 157 1 Ci
291 157 1 Ci
291 156 1 Ci
292 157 1 Ci
293 157 1 Ci
294 157 1 Ci
295 157 1 Ci
295 157 1 Ci
296 157 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 350 33 Box Fill

0 33 57 133 Box Fill

344 33 6 133 Box Fill

0 166 350 34 Box Fill

0.898039 0.898039 0.898039 SetBgColor
55 166 291 2 Box Fill

344 31 2 137 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 55 168 moveto
55 31 lineto
346 31 lineto
344 33 lineto
57 33 lineto
57 166 lineto
55 168 lineto
55 168  lineto closepath Fill
72 17 0 200 14 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+0, +0\)) 72 0 13 DrawAdjText
EndText
40 17 0 0 80 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.1) 36 2 13 DrawAdjText
EndText
49 17 0 65 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.05) 45 2 13 DrawAdjText
EndText
13 17 0 132 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
40 17 0 200 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.05) 36 2 13 DrawAdjText
EndText
31 17 0 268 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
65 171 336 171 LS
98 171 98 176 LS
65 171 65 179 LS
166 171 166 176 LS
132 171 132 179 LS
234 171 234 176 LS
200 171 200 179 LS
302 171 302 176 LS
268 171 268 179 LS
336 171 336 179 LS
13 17 0 329 181 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
31 17 0 26 158 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(500) 27 2 13 DrawAdjText
EndText
40 17 0 22 128 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(1000) 36 2 13 DrawAdjText
EndText
40 17 0 22 99 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(1500) 36 2 13 DrawAdjText
EndText
40 17 0 22 70 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(2000) 36 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
52 158 52 41 LS
52 143 47 143 LS
52 158 44 158 LS
52 114 47 114 LS
52 128 44 128 LS
52 84 47 84 LS
52 99 44 99 LS
52 55 47 55 LS
52 70 44 70 LS
52 41 44 41 LS
showpage
%Trailer
grestore
end
%EOF
%%Page:
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 37 451 303 602
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Tue Dec 19 17:15:25 2000)
%%Title: (/tmp/1.llDataPrint)
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Arrow
/Ar {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
					% b2 0 h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    neg					% -h2 b2
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

% Transform coordinate system to use X11 coordinates

% 1. Flip y-axis over by reversing the scale,
% 2. Translate the origin to the other side of the page,
%    making the origin the upper left corner
0.757382 -0.755721 scale
0 -1046 translate

% User defined page layout

% Set color level
/CL 2 def

% Set origin
50 250 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
46 31 301 138 Box Fill

gsave clip


% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

96 104 3 Ci
97 139 3 Ci
97 146 3 Ci
97 147 3 Ci
98 145 3 Ci
99 143 3 Ci
99 139 3 Ci
99 124 3 Ci
100 109 3 Ci
100 104 3 Ci
100 102 3 Ci
101 100 3 Ci
101 99 3 Ci
102 96 3 Ci
102 53 3 Ci
102 149 3 Ci
103 147 3 Ci
103 146 3 Ci
104 146 3 Ci
104 146 3 Ci
104 147 3 Ci
105 54 3 Ci
105 65 3 Ci
106 70 3 Ci
106 71 3 Ci
107 72 3 Ci
107 74 3 Ci
108 78 3 Ci
108 83 3 Ci
108 86 3 Ci
109 87 3 Ci
109 86 3 Ci
110 81 3 Ci
110 73 3 Ci
110 65 3 Ci
111 60 3 Ci
111 58 3 Ci
112 57 3 Ci
112 58 3 Ci
112 60 3 Ci
113 62 3 Ci
113 64 3 Ci
114 61 3 Ci
114 54 3 Ci
115 143 3 Ci
115 134 3 Ci
116 129 3 Ci
116 126 3 Ci
116 123 3 Ci
117 121 3 Ci
117 120 3 Ci
118 119 3 Ci
118 118 3 Ci
118 67 3 Ci
119 66 3 Ci
120 66 3 Ci
120 68 3 Ci
121 73 3 Ci
121 91 3 Ci
122 103 3 Ci
122 106 3 Ci
122 108 3 Ci
123 109 3 Ci
123 111 3 Ci
124 112 3 Ci
124 113 3 Ci
125 113 3 Ci
125 111 3 Ci
126 109 3 Ci
126 107 3 Ci
126 105 3 Ci
127 103 3 Ci
127 100 3 Ci
128 95 3 Ci
128 88 3 Ci
128 79 3 Ci
129 72 3 Ci
129 69 3 Ci
130 67 3 Ci
130 66 3 Ci
130 66 3 Ci
131 64 3 Ci
132 61 3 Ci
132 53 3 Ci
132 141 3 Ci
133 134 3 Ci
133 130 3 Ci
134 129 3 Ci
134 128 3 Ci
134 130 3 Ci
135 50 3 Ci
135 67 3 Ci
136 70 3 Ci
136 70 3 Ci
137 71 3 Ci
137 72 3 Ci
138 74 3 Ci
138 76 3 Ci
138 78 3 Ci
139 77 3 Ci
140 72 3 Ci
140 66 3 Ci
140 61 3 Ci
141 57 3 Ci
141 52 3 Ci
142 147 3 Ci
142 141 3 Ci
142 135 3 Ci
143 129 3 Ci
143 124 3 Ci
144 119 3 Ci
144 112 3 Ci
144 93 3 Ci
145 80 3 Ci
145 77 3 Ci
146 75 3 Ci
146 75 3 Ci
146 76 3 Ci
147 79 3 Ci
147 84 3 Ci
148 90 3 Ci
148 96 3 Ci
148 101 3 Ci
149 105 3 Ci
149 110 3 Ci
150 120 3 Ci
150 132 3 Ci
150 137 3 Ci
151 139 3 Ci
151 139 3 Ci
152 138 3 Ci
152 137 3 Ci
152 134 3 Ci
153 127 3 Ci
153 113 3 Ci
154 100 3 Ci
154 94 3 Ci
154 94 3 Ci
155 132 3 Ci
155 135 3 Ci
156 135 3 Ci
156 134 3 Ci
157 135 3 Ci
157 137 3 Ci
158 146 3 Ci
158 63 3 Ci
158 71 3 Ci
159 73 3 Ci
159 75 3 Ci
160 76 3 Ci
160 77 3 Ci
160 78 3 Ci
161 80 3 Ci
161 83 3 Ci
162 85 3 Ci
162 85 3 Ci
162 85 3 Ci
163 84 3 Ci
163 85 3 Ci
164 89 3 Ci
164 102 3 Ci
164 113 3 Ci
165 118 3 Ci
165 120 3 Ci
166 122 3 Ci
166 124 3 Ci
166 126 3 Ci
167 130 3 Ci
167 136 3 Ci
168 144 3 Ci
168 52 3 Ci
168 57 3 Ci
169 61 3 Ci
169 66 3 Ci
170 84 3 Ci
170 105 3 Ci
170 111 3 Ci
171 116 3 Ci
171 128 3 Ci
172 147 3 Ci
172 53 3 Ci
172 56 3 Ci
173 57 3 Ci
173 57 3 Ci
174 56 3 Ci
174 52 3 Ci
175 123 3 Ci
175 113 3 Ci
176 111 3 Ci
176 109 3 Ci
176 107 3 Ci
177 104 3 Ci
177 102 3 Ci
178 99 3 Ci
178 97 3 Ci
178 95 3 Ci
179 94 3 Ci
179 93 3 Ci
180 92 3 Ci
180 92 3 Ci
180 91 3 Ci
181 90 3 Ci
181 88 3 Ci
182 86 3 Ci
182 80 3 Ci
182 68 3 Ci
183 62 3 Ci
183 61 3 Ci
184 63 3 Ci
184 66 3 Ci
184 68 3 Ci
185 69 3 Ci
185 70 3 Ci
186 71 3 Ci
186 72 3 Ci
186 74 3 Ci
187 75 3 Ci
187 75 3 Ci
188 70 3 Ci
188 61 3 Ci
188 60 3 Ci
189 61 3 Ci
189 62 3 Ci
190 63 3 Ci
190 64 3 Ci
190 65 3 Ci
191 66 3 Ci
191 69 3 Ci
192 74 3 Ci
192 82 3 Ci
192 88 3 Ci
193 90 3 Ci
193 88 3 Ci
194 84 3 Ci
194 77 3 Ci
194 62 3 Ci
195 145 3 Ci
195 136 3 Ci
196 132 3 Ci
196 129 3 Ci
196 127 3 Ci
197 125 3 Ci
197 123 3 Ci
197 121 3 Ci
198 119 3 Ci
198 114 3 Ci
199 105 3 Ci
199 95 3 Ci
199 90 3 Ci
200 87 3 Ci
200 87 3 Ci
201 89 3 Ci
201 95 3 Ci
202 111 3 Ci
202 121 3 Ci
203 123 3 Ci
203 120 3 Ci
203 107 3 Ci
204 95 3 Ci
204 90 3 Ci
205 87 3 Ci
205 85 3 Ci
205 82 3 Ci
206 80 3 Ci
206 77 3 Ci
207 75 3 Ci
207 73 3 Ci
207 70 3 Ci
208 68 3 Ci
208 65 3 Ci
209 61 3 Ci
209 54 3 Ci
209 146 3 Ci
210 137 3 Ci
210 131 3 Ci
211 126 3 Ci
211 121 3 Ci
211 112 3 Ci
212 102 3 Ci
212 94 3 Ci
213 91 3 Ci
213 90 3 Ci
214 91 3 Ci
214 93 3 Ci
215 97 3 Ci
215 112 3 Ci
215 131 3 Ci
216 138 3 Ci
216 141 3 Ci
217 144 3 Ci
217 147 3 Ci
217 149 3 Ci
218 50 3 Ci
218 53 3 Ci
219 55 3 Ci
219 59 3 Ci
219 64 3 Ci
220 68 3 Ci
220 71 3 Ci
221 74 3 Ci
221 76 3 Ci
221 78 3 Ci
222 80 3 Ci
222 83 3 Ci
223 85 3 Ci
223 86 3 Ci
223 87 3 Ci
224 88 3 Ci
224 89 3 Ci
225 92 3 Ci
225 101 3 Ci
225 114 3 Ci
226 119 3 Ci
226 121 3 Ci
227 122 3 Ci
227 123 3 Ci
227 124 3 Ci
228 128 3 Ci
228 139 3 Ci
229 56 3 Ci
229 62 3 Ci
229 64 3 Ci
230 65 3 Ci
230 66 3 Ci
231 67 3 Ci
231 68 3 Ci
231 66 3 Ci
232 123 3 Ci
232 125 3 Ci
233 128 3 Ci
233 134 3 Ci
233 140 3 Ci
234 146 3 Ci
234 49 3 Ci
235 52 3 Ci
235 54 3 Ci
235 57 3 Ci
236 60 3 Ci
236 70 3 Ci
237 93 3 Ci
237 99 3 Ci
237 100 3 Ci
238 100 3 Ci
238 98 3 Ci
239 94 3 Ci
239 85 3 Ci
239 76 3 Ci
240 71 3 Ci
240 71 3 Ci
241 71 3 Ci
241 74 3 Ci
241 78 3 Ci
242 83 3 Ci
242 88 3 Ci
243 93 3 Ci
243 97 3 Ci
243 101 3 Ci
244 104 3 Ci
244 106 3 Ci
245 108 3 Ci
245 106 3 Ci
245 93 3 Ci
246 81 3 Ci
246 79 3 Ci
247 81 3 Ci
247 84 3 Ci
247 89 3 Ci
248 98 3 Ci
248 107 3 Ci
249 112 3 Ci
249 115 3 Ci
249 117 3 Ci
250 118 3 Ci
250 119 3 Ci
251 126 3 Ci
251 67 3 Ci
251 69 3 Ci
252 69 3 Ci
252 69 3 Ci
253 70 3 Ci
253 71 3 Ci
254 73 3 Ci
254 73 3 Ci
255 148 3 Ci
255 49 3 Ci
255 53 3 Ci
256 54 3 Ci
256 55 3 Ci
257 54 3 Ci
258 53 3 Ci
258 52 3 Ci
259 49 3 Ci
259 142 3 Ci
259 110 3 Ci
260 104 3 Ci
260 102 3 Ci
261 101 3 Ci
261 102 3 Ci
262 106 3 Ci
262 116 3 Ci
263 125 3 Ci
263 128 3 Ci
263 129 3 Ci
264 129 3 Ci
265 128 3 Ci
265 128 3 Ci
266 128 3 Ci
267 129 3 Ci
267 130 3 Ci
267 130 3 Ci
268 130 3 Ci
268 130 3 Ci
269 131 3 Ci
269 133 3 Ci
269 136 3 Ci
270 140 3 Ci
270 143 3 Ci
271 138 3 Ci
271 117 3 Ci
271 109 3 Ci
272 107 3 Ci
272 106 3 Ci
273 104 3 Ci
273 103 3 Ci
274 101 3 Ci
274 98 3 Ci
275 92 3 Ci
275 78 3 Ci
275 66 3 Ci
276 61 3 Ci
276 59 3 Ci
277 55 3 Ci
277 126 3 Ci
277 113 3 Ci
278 116 3 Ci
279 121 3 Ci
279 129 3 Ci
279 134 3 Ci
280 137 3 Ci
280 139 3 Ci
281 139 3 Ci
281 138 3 Ci
281 136 3 Ci
282 91 3 Ci
282 88 3 Ci
283 86 3 Ci
283 84 3 Ci
283 82 3 Ci
284 80 3 Ci
284 78 3 Ci
285 73 3 Ci
285 135 3 Ci
285 128 3 Ci
286 126 3 Ci
286 126 3 Ci
287 128 3 Ci
287 135 3 Ci
287 148 3 Ci
288 54 3 Ci
288 56 3 Ci
289 57 3 Ci
289 58 3 Ci
289 61 3 Ci
290 81 3 Ci
290 96 3 Ci
291 97 3 Ci
291 95 3 Ci
291 92 3 Ci
292 86 3 Ci
292 78 3 Ci
292 74 3 Ci
293 72 3 Ci
293 74 3 Ci
294 80 3 Ci
294 89 3 Ci
294 95 3 Ci
295 98 3 Ci

% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 96 154 moveto
 97 155 lineto
 97 149 lineto
 97 144 lineto
 98 140 lineto
 98 140 lineto
 99 143 lineto
 99 148 lineto
 99 151 lineto
 100 148 lineto
 100 144 lineto
 100 142 lineto
 101 143 lineto
 101 148 lineto
 102 154 lineto
 102 155 lineto
 102 149 lineto
 103 146 lineto
 103 144 lineto
 104 145 lineto
 104 148 lineto
 104 151 lineto
 105 153 lineto
 105 153 lineto
 106 152 lineto
 106 150 lineto
 106 149 lineto
 107 150 lineto
 108 151 lineto
 108 150 lineto
 108 150 lineto
 109 150 lineto
 110 151 lineto
 110 152 lineto
 110 151 lineto
 111 149 lineto
 111 147 lineto
 112 147 lineto
 112 147 lineto
 113 148 lineto
 113 148 lineto
 114 150 lineto
 114 151 lineto
 115 147 lineto
 116 142 lineto
 116 138 lineto
 116 136 lineto
 117 136 lineto
 117 140 lineto
 118 146 lineto
 118 156 lineto
 118 150 lineto
 119 140 lineto
 119 134 lineto
 120 132 lineto
 120 133 lineto
 120 139 lineto
 121 147 lineto
 121 150 lineto
 122 144 lineto
 122 137 lineto
 122 133 lineto
 123 132 lineto
 123 133 lineto
 124 134 lineto
 124 135 lineto
 125 133 lineto
 125 131 lineto
 126 128 lineto
 126 126 lineto
 127 128 lineto
 127 132 lineto
 128 137 lineto
 128 141 lineto
 129 138 lineto
 129 134 lineto
 130 132 lineto
 130 131 lineto
 130 133 lineto
 131 135 lineto
 131 140 lineto
 132 144 lineto
 132 148 lineto
 133 145 lineto
 133 142 lineto
 134 141 lineto
 134 143 lineto
 134 149 lineto
 135 154 lineto
 135 146 lineto
 136 136 lineto
 136 128 lineto
 136 123 lineto
 137 121 lineto
 137 123 lineto
 138 127 lineto
 138 131 lineto
 138 134 lineto
 139 137 lineto
 139 138 lineto
 140 136 lineto
 140 132 lineto
 141 128 lineto
 141 126 lineto
 142 127 lineto
 143 128 lineto
 144 133 lineto
 144 142 lineto
 144 145 lineto
 145 133 lineto
 145 119 lineto
 146 109 lineto
 146 104 lineto
 146 106 lineto
 147 113 lineto
 147 119 lineto
 148 123 lineto
 148 122 lineto
 149 126 lineto
 149 133 lineto
 150 139 lineto
 150 135 lineto
 150 125 lineto
 151 117 lineto
 151 113 lineto
 152 116 lineto
 152 123 lineto
 152 133 lineto
 153 144 lineto
 153 149 lineto
 154 148 lineto
 154 152 lineto
 155 154 lineto
 155 142 lineto
 156 130 lineto
 156 121 lineto
 156 117 lineto
 157 120 lineto
 157 129 lineto
 158 140 lineto
 158 138 lineto
 158 124 lineto
 159 110 lineto
 159 101 lineto
 160 99 lineto
 160 103 lineto
 160 111 lineto
 161 120 lineto
 161 128 lineto
 162 133 lineto
 162 136 lineto
 162 138 lineto
 163 139 lineto
 163 140 lineto
 164 144 lineto
 164 146 lineto
 164 137 lineto
 165 125 lineto
 165 112 lineto
 166 105 lineto
 166 103 lineto
 166 107 lineto
 167 116 lineto
 167 125 lineto
 168 130 lineto
 168 132 lineto
 169 137 lineto
 169 145 lineto
 170 153 lineto
 170 148 lineto
 170 144 lineto
 171 149 lineto
 172 145 lineto
 172 132 lineto
 172 121 lineto
 173 113 lineto
 173 113 lineto
 174 118 lineto
 174 130 lineto
 174 145 lineto
 175 151 lineto
 175 138 lineto
 176 127 lineto
 176 119 lineto
 176 114 lineto
 177 111 lineto
 177 106 lineto
 178 101 lineto
 178 94 lineto
 178 87 lineto
 179 80 lineto
 179 77 lineto
 180 77 lineto
 180 82 lineto
 180 91 lineto
 181 103 lineto
 181 117 lineto
 182 131 lineto
 182 142 lineto
 182 145 lineto
 183 139 lineto
 183 132 lineto
 184 124 lineto
 184 115 lineto
 184 106 lineto
 185 99 lineto
 185 98 lineto
 186 101 lineto
 186 109 lineto
 186 121 lineto
 187 133 lineto
 187 144 lineto
 188 149 lineto
 188 146 lineto
 188 137 lineto
 189 124 lineto
 189 111 lineto
 190 101 lineto
 190 96 lineto
 190 99 lineto
 191 107 lineto
 191 118 lineto
 192 129 lineto
 192 134 lineto
 192 133 lineto
 193 132 lineto
 193 133 lineto
 194 137 lineto
 194 143 lineto
 194 147 lineto
 195 140 lineto
 195 126 lineto
 196 108 lineto
 196 89 lineto
 196 74 lineto
 197 66 lineto
 197 67 lineto
 197 77 lineto
 198 93 lineto
 198 111 lineto
 199 122 lineto
 199 122 lineto
 199 116 lineto
 200 113 lineto
 200 117 lineto
 201 125 lineto
 201 136 lineto
 201 146 lineto
 202 150 lineto
 202 147 lineto
 203 146 lineto
 203 148 lineto
 203 149 lineto
 204 143 lineto
 204 132 lineto
 205 119 lineto
 205 106 lineto
 205 94 lineto
 206 82 lineto
 206 72 lineto
 207 64 lineto
 207 59 lineto
 208 67 lineto
 208 80 lineto
 209 96 lineto
 209 111 lineto
 209 118 lineto
 210 117 lineto
 211 119 lineto
 211 125 lineto
 211 131 lineto
 212 130 lineto
 212 123 lineto
 213 115 lineto
 213 111 lineto
 213 113 lineto
 214 120 lineto
 214 131 lineto
 215 142 lineto
 215 150 lineto
 215 146 lineto
 216 139 lineto
 216 134 lineto
 217 131 lineto
 217 131 lineto
 217 132 lineto
 218 136 lineto
 218 139 lineto
 219 143 lineto
 219 145 lineto
 220 145 lineto
 220 142 lineto
 221 140 lineto
 221 138 lineto
 221 136 lineto
 222 135 lineto
 222 135 lineto
 223 135 lineto
 223 137 lineto
 224 139 lineto
 224 143 lineto
 225 147 lineto
 225 150 lineto
 225 148 lineto
 226 141 lineto
 226 135 lineto
 227 130 lineto
 227 129 lineto
 227 132 lineto
 228 139 lineto
 228 146 lineto
 229 142 lineto
 229 131 lineto
 229 122 lineto
 230 118 lineto
 230 120 lineto
 231 128 lineto
 231 140 lineto
 231 154 lineto
 232 149 lineto
 232 140 lineto
 233 135 lineto
 233 132 lineto
 233 128 lineto
 234 123 lineto
 234 117 lineto
 235 113 lineto
 235 115 lineto
 235 123 lineto
 236 135 lineto
 236 147 lineto
 237 144 lineto
 237 133 lineto
 237 126 lineto
 238 124 lineto
 238 128 lineto
 239 135 lineto
 239 139 lineto
 239 135 lineto
 240 128 lineto
 240 123 lineto
 241 121 lineto
 241 122 lineto
 241 124 lineto
 242 126 lineto
 242 127 lineto
 243 127 lineto
 243 127 lineto
 243 129 lineto
 244 132 lineto
 244 136 lineto
 245 142 lineto
 245 148 lineto
 245 152 lineto
 246 148 lineto
 246 144 lineto
 247 141 lineto
 247 142 lineto
 248 142 lineto
 248 139 lineto
 249 134 lineto
 249 130 lineto
 249 130 lineto
 250 135 lineto
 250 144 lineto
 251 155 lineto
 251 147 lineto
 251 135 lineto
 252 128 lineto
 252 125 lineto
 253 127 lineto
 253 133 lineto
 253 141 lineto
 254 149 lineto
 254 155 lineto
 255 155 lineto
 255 150 lineto
 255 142 lineto
 256 132 lineto
 256 121 lineto
 257 112 lineto
 257 107 lineto
 257 107 lineto
 258 112 lineto
 258 122 lineto
 259 135 lineto
 259 149 lineto
 259 149 lineto
 260 138 lineto
 260 130 lineto
 261 127 lineto
 261 129 lineto
 261 134 lineto
 262 141 lineto
 262 144 lineto
 263 140 lineto
 263 134 lineto
 263 129 lineto
 264 127 lineto
 264 127 lineto
 265 131 lineto
 265 135 lineto
 265 141 lineto
 266 145 lineto
 266 148 lineto
 267 150 lineto
 267 150 lineto
 268 150 lineto
 268 150 lineto
 269 151 lineto
 269 152 lineto
 270 153 lineto
 270 154 lineto
 271 155 lineto
 271 155 lineto
 271 151 lineto
 272 146 lineto
 272 141 lineto
 273 138 lineto
 273 136 lineto
 273 137 lineto
 274 141 lineto
 274 145 lineto
 275 150 lineto
 275 153 lineto
 275 152 lineto
 276 151 lineto
 276 152 lineto
 277 155 lineto
 277 156 lineto
 277 154 lineto
 278 152 lineto
 278 151 lineto
 279 151 lineto
 279 149 lineto
 280 147 lineto
 280 147 lineto
 281 148 lineto
 281 151 lineto
 281 155 lineto
 282 156 lineto
 282 151 lineto
 283 149 lineto
 283 147 lineto
 283 147 lineto
 284 149 lineto
 284 152 lineto
 285 155 lineto
 285 156 lineto
 285 154 lineto
 286 152 lineto
 286 152 lineto
 287 153 lineto
 287 154 lineto
 287 153 lineto
 288 151 lineto
 288 150 lineto
 289 151 lineto
 289 154 lineto
 290 156 lineto
 290 153 lineto
 291 151 lineto
 291 150 lineto
 291 150 lineto
 292 151 lineto
 292 150 lineto
 293 151 lineto
 294 152 lineto
 294 151 lineto
 294 150 lineto
 295 149 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

96 154 1 Ci
97 155 1 Ci
97 149 1 Ci
97 144 1 Ci
98 140 1 Ci
98 140 1 Ci
99 143 1 Ci
99 148 1 Ci
99 151 1 Ci
100 148 1 Ci
100 144 1 Ci
100 142 1 Ci
101 143 1 Ci
101 148 1 Ci
102 154 1 Ci
102 155 1 Ci
102 149 1 Ci
103 146 1 Ci
103 144 1 Ci
104 145 1 Ci
104 148 1 Ci
104 151 1 Ci
105 153 1 Ci
105 153 1 Ci
106 152 1 Ci
106 150 1 Ci
106 149 1 Ci
107 150 1 Ci
108 151 1 Ci
108 150 1 Ci
108 150 1 Ci
109 150 1 Ci
110 151 1 Ci
110 152 1 Ci
110 151 1 Ci
111 149 1 Ci
111 147 1 Ci
112 147 1 Ci
112 147 1 Ci
113 148 1 Ci
113 148 1 Ci
114 150 1 Ci
114 151 1 Ci
115 147 1 Ci
116 142 1 Ci
116 138 1 Ci
116 136 1 Ci
117 136 1 Ci
117 140 1 Ci
118 146 1 Ci
118 156 1 Ci
118 150 1 Ci
119 140 1 Ci
119 134 1 Ci
120 132 1 Ci
120 133 1 Ci
120 139 1 Ci
121 147 1 Ci
121 150 1 Ci
122 144 1 Ci
122 137 1 Ci
122 133 1 Ci
123 132 1 Ci
123 133 1 Ci
124 134 1 Ci
124 135 1 Ci
125 133 1 Ci
125 131 1 Ci
126 128 1 Ci
126 126 1 Ci
127 128 1 Ci
127 132 1 Ci
128 137 1 Ci
128 141 1 Ci
129 138 1 Ci
129 134 1 Ci
130 132 1 Ci
130 131 1 Ci
130 133 1 Ci
131 135 1 Ci
131 140 1 Ci
132 144 1 Ci
132 148 1 Ci
133 145 1 Ci
133 142 1 Ci
134 141 1 Ci
134 143 1 Ci
134 149 1 Ci
135 154 1 Ci
135 146 1 Ci
136 136 1 Ci
136 128 1 Ci
136 123 1 Ci
137 121 1 Ci
137 123 1 Ci
138 127 1 Ci
138 131 1 Ci
138 134 1 Ci
139 137 1 Ci
139 138 1 Ci
140 136 1 Ci
140 132 1 Ci
141 128 1 Ci
141 126 1 Ci
142 127 1 Ci
143 128 1 Ci
144 133 1 Ci
144 142 1 Ci
144 145 1 Ci
145 133 1 Ci
145 119 1 Ci
146 109 1 Ci
146 104 1 Ci
146 106 1 Ci
147 113 1 Ci
147 119 1 Ci
148 123 1 Ci
148 122 1 Ci
149 126 1 Ci
149 133 1 Ci
150 139 1 Ci
150 135 1 Ci
150 125 1 Ci
151 117 1 Ci
151 113 1 Ci
152 116 1 Ci
152 123 1 Ci
152 133 1 Ci
153 144 1 Ci
153 149 1 Ci
154 148 1 Ci
154 152 1 Ci
155 154 1 Ci
155 142 1 Ci
156 130 1 Ci
156 121 1 Ci
156 117 1 Ci
157 120 1 Ci
157 129 1 Ci
158 140 1 Ci
158 138 1 Ci
158 124 1 Ci
159 110 1 Ci
159 101 1 Ci
160 99 1 Ci
160 103 1 Ci
160 111 1 Ci
161 120 1 Ci
161 128 1 Ci
162 133 1 Ci
162 136 1 Ci
162 138 1 Ci
163 139 1 Ci
163 140 1 Ci
164 144 1 Ci
164 146 1 Ci
164 137 1 Ci
165 125 1 Ci
165 112 1 Ci
166 105 1 Ci
166 103 1 Ci
166 107 1 Ci
167 116 1 Ci
167 125 1 Ci
168 130 1 Ci
168 132 1 Ci
169 137 1 Ci
169 145 1 Ci
170 153 1 Ci
170 148 1 Ci
170 144 1 Ci
171 149 1 Ci
172 145 1 Ci
172 132 1 Ci
172 121 1 Ci
173 113 1 Ci
173 113 1 Ci
174 118 1 Ci
174 130 1 Ci
174 145 1 Ci
175 151 1 Ci
175 138 1 Ci
176 127 1 Ci
176 119 1 Ci
176 114 1 Ci
177 111 1 Ci
177 106 1 Ci
178 101 1 Ci
178 94 1 Ci
178 87 1 Ci
179 80 1 Ci
179 77 1 Ci
180 77 1 Ci
180 82 1 Ci
180 91 1 Ci
181 103 1 Ci
181 117 1 Ci
182 131 1 Ci
182 142 1 Ci
182 145 1 Ci
183 139 1 Ci
183 132 1 Ci
184 124 1 Ci
184 115 1 Ci
184 106 1 Ci
185 99 1 Ci
185 98 1 Ci
186 101 1 Ci
186 109 1 Ci
186 121 1 Ci
187 133 1 Ci
187 144 1 Ci
188 149 1 Ci
188 146 1 Ci
188 137 1 Ci
189 124 1 Ci
189 111 1 Ci
190 101 1 Ci
190 96 1 Ci
190 99 1 Ci
191 107 1 Ci
191 118 1 Ci
192 129 1 Ci
192 134 1 Ci
192 133 1 Ci
193 132 1 Ci
193 133 1 Ci
194 137 1 Ci
194 143 1 Ci
194 147 1 Ci
195 140 1 Ci
195 126 1 Ci
196 108 1 Ci
196 89 1 Ci
196 74 1 Ci
197 66 1 Ci
197 67 1 Ci
197 77 1 Ci
198 93 1 Ci
198 111 1 Ci
199 122 1 Ci
199 122 1 Ci
199 116 1 Ci
200 113 1 Ci
200 117 1 Ci
201 125 1 Ci
201 136 1 Ci
201 146 1 Ci
202 150 1 Ci
202 147 1 Ci
203 146 1 Ci
203 148 1 Ci
203 149 1 Ci
204 143 1 Ci
204 132 1 Ci
205 119 1 Ci
205 106 1 Ci
205 94 1 Ci
206 82 1 Ci
206 72 1 Ci
207 64 1 Ci
207 59 1 Ci
208 67 1 Ci
208 80 1 Ci
209 96 1 Ci
209 111 1 Ci
209 118 1 Ci
210 117 1 Ci
211 119 1 Ci
211 125 1 Ci
211 131 1 Ci
212 130 1 Ci
212 123 1 Ci
213 115 1 Ci
213 111 1 Ci
213 113 1 Ci
214 120 1 Ci
214 131 1 Ci
215 142 1 Ci
215 150 1 Ci
215 146 1 Ci
216 139 1 Ci
216 134 1 Ci
217 131 1 Ci
217 131 1 Ci
217 132 1 Ci
218 136 1 Ci
218 139 1 Ci
219 143 1 Ci
219 145 1 Ci
220 145 1 Ci
220 142 1 Ci
221 140 1 Ci
221 138 1 Ci
221 136 1 Ci
222 135 1 Ci
222 135 1 Ci
223 135 1 Ci
223 137 1 Ci
224 139 1 Ci
224 143 1 Ci
225 147 1 Ci
225 150 1 Ci
225 148 1 Ci
226 141 1 Ci
226 135 1 Ci
227 130 1 Ci
227 129 1 Ci
227 132 1 Ci
228 139 1 Ci
228 146 1 Ci
229 142 1 Ci
229 131 1 Ci
229 122 1 Ci
230 118 1 Ci
230 120 1 Ci
231 128 1 Ci
231 140 1 Ci
231 154 1 Ci
232 149 1 Ci
232 140 1 Ci
233 135 1 Ci
233 132 1 Ci
233 128 1 Ci
234 123 1 Ci
234 117 1 Ci
235 113 1 Ci
235 115 1 Ci
235 123 1 Ci
236 135 1 Ci
236 147 1 Ci
237 144 1 Ci
237 133 1 Ci
237 126 1 Ci
238 124 1 Ci
238 128 1 Ci
239 135 1 Ci
239 139 1 Ci
239 135 1 Ci
240 128 1 Ci
240 123 1 Ci
241 121 1 Ci
241 122 1 Ci
241 124 1 Ci
242 126 1 Ci
242 127 1 Ci
243 127 1 Ci
243 127 1 Ci
243 129 1 Ci
244 132 1 Ci
244 136 1 Ci
245 142 1 Ci
245 148 1 Ci
245 152 1 Ci
246 148 1 Ci
246 144 1 Ci
247 141 1 Ci
247 142 1 Ci
248 142 1 Ci
248 139 1 Ci
249 134 1 Ci
249 130 1 Ci
249 130 1 Ci
250 135 1 Ci
250 144 1 Ci
251 155 1 Ci
251 147 1 Ci
251 135 1 Ci
252 128 1 Ci
252 125 1 Ci
253 127 1 Ci
253 133 1 Ci
253 141 1 Ci
254 149 1 Ci
254 155 1 Ci
255 155 1 Ci
255 150 1 Ci
255 142 1 Ci
256 132 1 Ci
256 121 1 Ci
257 112 1 Ci
257 107 1 Ci
257 107 1 Ci
258 112 1 Ci
258 122 1 Ci
259 135 1 Ci
259 149 1 Ci
259 149 1 Ci
260 138 1 Ci
260 130 1 Ci
261 127 1 Ci
261 129 1 Ci
261 134 1 Ci
262 141 1 Ci
262 144 1 Ci
263 140 1 Ci
263 134 1 Ci
263 129 1 Ci
264 127 1 Ci
264 127 1 Ci
265 131 1 Ci
265 135 1 Ci
265 141 1 Ci
266 145 1 Ci
266 148 1 Ci
267 150 1 Ci
267 150 1 Ci
268 150 1 Ci
268 150 1 Ci
269 151 1 Ci
269 152 1 Ci
270 153 1 Ci
270 154 1 Ci
271 155 1 Ci
271 155 1 Ci
271 151 1 Ci
272 146 1 Ci
272 141 1 Ci
273 138 1 Ci
273 136 1 Ci
273 137 1 Ci
274 141 1 Ci
274 145 1 Ci
275 150 1 Ci
275 153 1 Ci
275 152 1 Ci
276 151 1 Ci
276 152 1 Ci
277 155 1 Ci
277 156 1 Ci
277 154 1 Ci
278 152 1 Ci
278 151 1 Ci
279 151 1 Ci
279 149 1 Ci
280 147 1 Ci
280 147 1 Ci
281 148 1 Ci
281 151 1 Ci
281 155 1 Ci
282 156 1 Ci
282 151 1 Ci
283 149 1 Ci
283 147 1 Ci
283 147 1 Ci
284 149 1 Ci
284 152 1 Ci
285 155 1 Ci
285 156 1 Ci
285 154 1 Ci
286 152 1 Ci
286 152 1 Ci
287 153 1 Ci
287 154 1 Ci
287 153 1 Ci
288 151 1 Ci
288 150 1 Ci
289 151 1 Ci
289 154 1 Ci
290 156 1 Ci
290 153 1 Ci
291 151 1 Ci
291 150 1 Ci
291 150 1 Ci
292 151 1 Ci
292 150 1 Ci
293 151 1 Ci
294 152 1 Ci
294 151 1 Ci
294 150 1 Ci
295 149 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 350 33 Box Fill

0 33 48 133 Box Fill

344 33 6 133 Box Fill

0 166 350 34 Box Fill

0.898039 0.898039 0.898039 SetBgColor
46 166 300 2 Box Fill

344 31 2 137 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 46 168 moveto
46 31 lineto
346 31 lineto
344 33 lineto
48 33 lineto
48 166 lineto
46 168 lineto
46 168  lineto closepath Fill
90 17 0 196 14 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+14, +11\)) 90 0 13 DrawAdjText
EndText
40 17 0 0 98 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.1) 36 2 13 DrawAdjText
EndText
49 17 0 56 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.05) 45 2 13 DrawAdjText
EndText
13 17 0 126 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
40 17 0 196 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.05) 36 2 13 DrawAdjText
EndText
31 17 0 266 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
56 171 336 171 LS
91 171 91 176 LS
56 171 56 179 LS
161 171 161 176 LS
126 171 126 179 LS
231 171 231 176 LS
196 171 196 179 LS
301 171 301 176 LS
266 171 266 179 LS
336 171 336 179 LS
13 17 0 329 181 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
22 17 0 22 158 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(20) 18 2 13 DrawAdjText
EndText
22 17 0 22 138 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(40) 18 2 13 DrawAdjText
EndText
22 17 0 22 119 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(60) 18 2 13 DrawAdjText
EndText
22 17 0 22 99 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(80) 18 2 13 DrawAdjText
EndText
31 17 0 17 80 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(100) 27 2 13 DrawAdjText
EndText
31 17 0 17 60 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(120) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
43 158 43 41 LS
43 148 38 148 LS
43 158 35 158 LS
43 128 38 128 LS
43 138 35 138 LS
43 109 38 109 LS
43 119 35 119 LS
43 89 38 89 LS
43 99 35 99 LS
43 70 38 70 LS
43 80 35 80 LS
43 50 38 50 LS
43 60 35 60 LS
43 41 35 41 LS
showpage
%Trailer
grestore
end
%EOF
%%Page:
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 37 378 99 413
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Tue Dec 19 17:15:25 2000)
%%Title: (/tmp/2.llDataPrint)
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Arrow
/Ar {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
					% b2 0 h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    neg					% -h2 b2
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

% Transform coordinate system to use X11 coordinates

% 1. Flip y-axis over by reversing the scale,
% 2. Translate the origin to the other side of the page,
%    making the origin the upper left corner
0.757382 -0.755721 scale
0 -1046 translate

% User defined page layout

% Set color level
/CL 2 def

% Set origin
50 500 translate


% Setting graph scale factor
 0.23 0.23 scale

%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
46 31 301 138 Box Fill

gsave clip


% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

96 148 3 Ci
97 146 3 Ci
97 144 3 Ci
97 143 3 Ci
98 142 3 Ci
98 140 3 Ci
99 135 3 Ci
99 124 3 Ci
99 114 3 Ci
100 111 3 Ci
100 109 3 Ci
101 111 3 Ci
102 113 3 Ci
102 116 3 Ci
102 119 3 Ci
103 126 3 Ci
103 140 3 Ci
104 80 3 Ci
104 90 3 Ci
104 96 3 Ci
105 100 3 Ci
105 105 3 Ci
106 110 3 Ci
106 116 3 Ci
106 124 3 Ci
107 133 3 Ci
107 141 3 Ci
108 147 3 Ci
108 53 3 Ci
108 60 3 Ci
109 67 3 Ci
109 74 3 Ci
110 80 3 Ci
110 85 3 Ci
110 88 3 Ci
111 90 3 Ci
111 87 3 Ci
112 77 3 Ci
112 73 3 Ci
113 76 3 Ci
113 79 3 Ci
114 81 3 Ci
114 85 3 Ci
114 93 3 Ci
115 109 3 Ci
115 121 3 Ci
116 125 3 Ci
116 127 3 Ci
116 128 3 Ci
117 129 3 Ci
117 129 3 Ci
118 129 3 Ci
118 80 3 Ci
118 78 3 Ci
119 76 3 Ci
119 74 3 Ci
120 72 3 Ci
120 69 3 Ci
120 65 3 Ci
121 63 3 Ci
121 61 3 Ci
122 60 3 Ci
122 58 3 Ci
122 55 3 Ci
123 145 3 Ci
123 132 3 Ci
124 129 3 Ci
124 129 3 Ci
124 130 3 Ci
125 130 3 Ci
125 131 3 Ci
126 130 3 Ci
126 115 3 Ci
126 90 3 Ci
127 87 3 Ci
127 87 3 Ci
128 86 3 Ci
129 85 3 Ci
129 83 3 Ci
130 144 3 Ci
130 140 3 Ci
130 140 3 Ci
131 141 3 Ci
131 143 3 Ci
132 149 3 Ci
132 57 3 Ci
132 63 3 Ci
133 66 3 Ci
133 67 3 Ci
134 65 3 Ci
134 61 3 Ci
134 52 3 Ci
135 142 3 Ci
135 137 3 Ci
136 135 3 Ci
136 134 3 Ci
136 136 3 Ci
137 140 3 Ci
137 146 3 Ci
138 54 3 Ci
138 60 3 Ci
138 63 3 Ci
139 66 3 Ci
139 67 3 Ci
140 68 3 Ci
141 67 3 Ci
141 66 3 Ci
142 66 3 Ci
142 68 3 Ci
143 71 3 Ci
143 79 3 Ci
144 88 3 Ci
144 94 3 Ci
144 96 3 Ci
145 97 3 Ci
145 97 3 Ci
146 96 3 Ci
146 82 3 Ci
146 56 3 Ci
147 52 3 Ci
147 49 3 Ci
148 144 3 Ci
148 131 3 Ci
148 119 3 Ci
149 115 3 Ci
149 114 3 Ci
150 115 3 Ci
150 118 3 Ci
151 126 3 Ci
151 49 3 Ci
152 61 3 Ci
152 65 3 Ci
152 69 3 Ci
153 72 3 Ci
153 74 3 Ci
154 76 3 Ci
154 74 3 Ci
155 71 3 Ci
155 65 3 Ci
156 59 3 Ci
156 96 3 Ci
157 97 3 Ci
157 97 3 Ci
158 96 3 Ci
159 96 3 Ci
159 96 3 Ci
160 98 3 Ci
160 101 3 Ci
160 107 3 Ci
161 112 3 Ci
161 115 3 Ci
162 115 3 Ci
162 115 3 Ci
162 114 3 Ci
163 113 3 Ci
163 112 3 Ci
164 112 3 Ci
164 112 3 Ci
164 113 3 Ci
165 115 3 Ci
165 121 3 Ci
166 131 3 Ci
166 141 3 Ci
166 49 3 Ci
167 57 3 Ci
167 60 3 Ci
168 59 3 Ci
168 58 3 Ci
169 56 3 Ci
169 54 3 Ci
170 51 3 Ci
170 145 3 Ci
170 134 3 Ci
171 125 3 Ci
171 121 3 Ci
172 119 3 Ci
172 118 3 Ci
172 117 3 Ci
173 117 3 Ci
173 115 3 Ci
174 112 3 Ci
174 108 3 Ci
174 105 3 Ci
175 104 3 Ci
175 104 3 Ci
176 103 3 Ci
176 101 3 Ci
177 95 3 Ci
177 66 3 Ci
178 60 3 Ci
178 58 3 Ci
178 58 3 Ci
179 58 3 Ci
180 59 3 Ci
180 61 3 Ci
180 78 3 Ci
181 96 3 Ci
181 99 3 Ci
182 98 3 Ci
183 95 3 Ci
183 89 3 Ci
184 80 3 Ci
184 71 3 Ci
184 67 3 Ci
185 66 3 Ci
185 66 3 Ci
186 66 3 Ci
186 67 3 Ci
186 69 3 Ci
187 70 3 Ci
187 72 3 Ci
188 74 3 Ci
188 75 3 Ci
188 74 3 Ci
189 73 3 Ci
189 70 3 Ci
190 68 3 Ci
190 66 3 Ci
190 66 3 Ci
191 65 3 Ci
192 65 3 Ci
192 63 3 Ci
192 59 3 Ci
193 147 3 Ci
193 133 3 Ci
194 128 3 Ci
194 125 3 Ci
194 122 3 Ci
195 118 3 Ci
195 114 3 Ci
196 110 3 Ci
196 107 3 Ci
196 104 3 Ci
197 102 3 Ci
197 101 3 Ci
197 99 3 Ci
198 98 3 Ci
198 95 3 Ci
199 90 3 Ci
199 83 3 Ci
199 75 3 Ci
200 71 3 Ci
200 68 3 Ci
201 70 3 Ci
201 73 3 Ci
202 78 3 Ci
202 83 3 Ci
203 87 3 Ci
203 89 3 Ci
203 90 3 Ci
204 91 3 Ci
204 92 3 Ci
205 93 3 Ci
205 95 3 Ci
205 98 3 Ci
206 102 3 Ci
206 105 3 Ci
207 105 3 Ci
207 103 3 Ci
207 98 3 Ci
208 93 3 Ci
208 90 3 Ci
209 90 3 Ci
209 91 3 Ci
209 95 3 Ci
210 100 3 Ci
210 107 3 Ci
211 115 3 Ci
211 122 3 Ci
211 127 3 Ci
212 131 3 Ci
212 135 3 Ci
213 138 3 Ci
213 141 3 Ci
213 143 3 Ci
214 145 3 Ci
214 146 3 Ci
215 148 3 Ci
215 52 3 Ci
215 91 3 Ci
216 92 3 Ci
216 89 3 Ci
217 80 3 Ci
217 69 3 Ci
217 63 3 Ci
218 60 3 Ci
218 59 3 Ci
219 57 3 Ci
219 56 3 Ci
219 54 3 Ci
220 50 3 Ci
220 114 3 Ci
221 108 3 Ci
221 106 3 Ci
221 105 3 Ci
222 104 3 Ci
222 103 3 Ci
223 103 3 Ci
223 105 3 Ci
224 108 3 Ci
224 111 3 Ci
225 115 3 Ci
225 119 3 Ci
225 123 3 Ci
226 136 3 Ci
226 55 3 Ci
227 59 3 Ci
227 59 3 Ci
228 57 3 Ci
228 57 3 Ci
229 56 3 Ci
229 56 3 Ci
230 58 3 Ci
231 60 3 Ci
231 62 3 Ci
231 66 3 Ci
232 73 3 Ci
232 90 3 Ci
233 103 3 Ci
233 109 3 Ci
233 113 3 Ci
234 115 3 Ci
234 118 3 Ci
235 119 3 Ci
235 121 3 Ci
235 123 3 Ci
236 124 3 Ci
236 126 3 Ci
237 126 3 Ci
237 127 3 Ci
238 126 3 Ci
239 126 3 Ci
239 125 3 Ci
239 123 3 Ci
240 116 3 Ci
240 80 3 Ci
241 74 3 Ci
241 71 3 Ci
241 68 3 Ci
242 64 3 Ci
242 59 3 Ci
243 56 3 Ci
243 52 3 Ci
243 50 3 Ci
244 148 3 Ci
244 148 3 Ci
245 148 3 Ci
245 54 3 Ci
245 74 3 Ci
246 82 3 Ci
246 83 3 Ci
247 84 3 Ci
247 85 3 Ci
248 87 3 Ci
248 97 3 Ci
249 121 3 Ci
249 126 3 Ci
249 127 3 Ci
250 127 3 Ci
251 126 3 Ci
251 125 3 Ci
252 124 3 Ci
252 123 3 Ci
253 123 3 Ci
253 127 3 Ci
254 132 3 Ci
254 138 3 Ci
255 145 3 Ci
255 52 3 Ci
255 57 3 Ci
256 61 3 Ci
256 63 3 Ci
257 64 3 Ci
257 65 3 Ci
258 64 3 Ci
259 63 3 Ci
259 62 3 Ci
259 60 3 Ci
260 57 3 Ci
260 51 3 Ci
261 142 3 Ci
261 134 3 Ci
261 133 3 Ci
262 135 3 Ci
262 138 3 Ci
263 140 3 Ci
263 141 3 Ci
263 141 3 Ci
264 142 3 Ci
264 143 3 Ci
265 145 3 Ci
265 149 3 Ci
265 56 3 Ci
266 67 3 Ci
266 74 3 Ci
267 78 3 Ci
267 80 3 Ci
267 81 3 Ci
268 83 3 Ci
268 87 3 Ci
269 129 3 Ci
269 137 3 Ci
269 143 3 Ci
270 51 3 Ci
270 57 3 Ci
271 61 3 Ci
271 63 3 Ci
271 64 3 Ci
272 65 3 Ci
273 67 3 Ci
273 73 3 Ci
274 100 3 Ci
274 109 3 Ci
275 112 3 Ci
275 115 3 Ci
275 127 3 Ci
276 148 3 Ci
276 54 3 Ci
277 56 3 Ci
277 57 3 Ci
277 59 3 Ci
278 60 3 Ci
278 64 3 Ci
279 70 3 Ci
279 78 3 Ci
279 85 3 Ci
280 87 3 Ci
280 86 3 Ci
281 79 3 Ci
281 71 3 Ci
281 66 3 Ci
282 64 3 Ci
282 63 3 Ci
283 66 3 Ci
284 97 3 Ci
284 114 3 Ci
285 116 3 Ci
285 118 3 Ci
285 119 3 Ci
286 120 3 Ci
286 119 3 Ci
287 118 3 Ci
287 114 3 Ci
287 110 3 Ci
288 107 3 Ci
288 107 3 Ci
289 109 3 Ci
289 113 3 Ci
289 120 3 Ci
290 126 3 Ci
290 131 3 Ci
291 134 3 Ci
291 138 3 Ci
291 71 3 Ci
292 83 3 Ci
292 84 3 Ci
293 83 3 Ci
293 80 3 Ci
294 76 3 Ci
294 68 3 Ci
294 59 3 Ci
295 53 3 Ci

% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 96 151 moveto
 97 151 lineto
 97 152 lineto
 98 152 lineto
 98 153 lineto
 99 154 lineto
 99 153 lineto
 100 150 lineto
 100 147 lineto
 100 145 lineto
 101 144 lineto
 101 144 lineto
 102 146 lineto
 102 149 lineto
 102 152 lineto
 103 155 lineto
 103 157 lineto
 104 154 lineto
 104 151 lineto
 105 149 lineto
 105 147 lineto
 106 148 lineto
 106 148 lineto
 107 148 lineto
 107 147 lineto
 108 146 lineto
 108 146 lineto
 108 146 lineto
 109 147 lineto
 110 148 lineto
 110 149 lineto
 111 151 lineto
 111 153 lineto
 112 151 lineto
 112 147 lineto
 113 144 lineto
 113 142 lineto
 114 144 lineto
 114 148 lineto
 115 150 lineto
 115 144 lineto
 116 137 lineto
 116 132 lineto
 116 131 lineto
 117 135 lineto
 117 142 lineto
 118 151 lineto
 118 153 lineto
 118 144 lineto
 119 137 lineto
 119 133 lineto
 120 131 lineto
 120 130 lineto
 121 130 lineto
 121 133 lineto
 122 136 lineto
 122 142 lineto
 122 148 lineto
 123 152 lineto
 123 149 lineto
 124 144 lineto
 124 140 lineto
 124 137 lineto
 125 139 lineto
 126 146 lineto
 126 154 lineto
 126 146 lineto
 127 135 lineto
 127 127 lineto
 128 122 lineto
 128 123 lineto
 128 129 lineto
 129 139 lineto
 129 150 lineto
 130 153 lineto
 130 144 lineto
 130 139 lineto
 131 139 lineto
 131 141 lineto
 132 144 lineto
 132 145 lineto
 132 143 lineto
 133 140 lineto
 133 139 lineto
 134 141 lineto
 134 144 lineto
 134 147 lineto
 135 146 lineto
 135 141 lineto
 136 138 lineto
 136 136 lineto
 137 138 lineto
 137 139 lineto
 138 137 lineto
 138 132 lineto
 138 124 lineto
 139 116 lineto
 139 108 lineto
 140 101 lineto
 140 96 lineto
 140 92 lineto
 141 90 lineto
 141 91 lineto
 142 95 lineto
 142 102 lineto
 142 112 lineto
 143 123 lineto
 143 131 lineto
 144 130 lineto
 144 125 lineto
 144 122 lineto
 145 123 lineto
 145 131 lineto
 146 142 lineto
 146 153 lineto
 146 147 lineto
 147 141 lineto
 147 140 lineto
 148 143 lineto
 148 146 lineto
 148 139 lineto
 149 130 lineto
 149 123 lineto
 150 122 lineto
 150 126 lineto
 150 136 lineto
 151 146 lineto
 151 149 lineto
 152 140 lineto
 152 131 lineto
 152 125 lineto
 153 121 lineto
 153 120 lineto
 154 121 lineto
 154 126 lineto
 154 133 lineto
 155 140 lineto
 155 144 lineto
 156 148 lineto
 156 154 lineto
 156 150 lineto
 157 135 lineto
 157 118 lineto
 158 102 lineto
 158 90 lineto
 158 84 lineto
 159 86 lineto
 159 94 lineto
 160 106 lineto
 160 117 lineto
 160 123 lineto
 161 120 lineto
 161 111 lineto
 162 101 lineto
 162 92 lineto
 162 87 lineto
 163 87 lineto
 163 92 lineto
 164 101 lineto
 164 114 lineto
 164 127 lineto
 165 139 lineto
 165 147 lineto
 166 151 lineto
 166 152 lineto
 166 153 lineto
 167 151 lineto
 167 148 lineto
 168 143 lineto
 168 137 lineto
 168 132 lineto
 169 129 lineto
 169 129 lineto
 170 132 lineto
 170 138 lineto
 170 139 lineto
 171 134 lineto
 171 127 lineto
 172 122 lineto
 172 124 lineto
 173 129 lineto
 173 134 lineto
 174 137 lineto
 174 134 lineto
 174 127 lineto
 175 118 lineto
 175 110 lineto
 176 107 lineto
 176 111 lineto
 176 123 lineto
 177 142 lineto
 177 141 lineto
 178 117 lineto
 178 95 lineto
 178 81 lineto
 179 77 lineto
 179 85 lineto
 180 103 lineto
 180 126 lineto
 180 145 lineto
 181 131 lineto
 181 114 lineto
 182 103 lineto
 182 102 lineto
 182 107 lineto
 183 118 lineto
 183 128 lineto
 184 132 lineto
 184 127 lineto
 184 119 lineto
 185 112 lineto
 185 109 lineto
 186 108 lineto
 186 109 lineto
 186 112 lineto
 187 116 lineto
 187 121 lineto
 188 125 lineto
 188 129 lineto
 188 132 lineto
 189 133 lineto
 189 132 lineto
 190 128 lineto
 190 122 lineto
 190 117 lineto
 191 114 lineto
 191 114 lineto
 192 119 lineto
 192 127 lineto
 192 137 lineto
 193 144 lineto
 193 138 lineto
 194 127 lineto
 194 118 lineto
 194 111 lineto
 195 106 lineto
 195 99 lineto
 196 90 lineto
 196 77 lineto
 196 64 lineto
 197 53 lineto
 197 47 lineto
 197 50 lineto
 198 61 lineto
 198 77 lineto
 199 95 lineto
 199 106 lineto
 199 106 lineto
 200 98 lineto
 200 93 lineto
 201 97 lineto
 201 103 lineto
 202 106 lineto
 202 103 lineto
 203 98 lineto
 203 93 lineto
 203 92 lineto
 204 95 lineto
 204 101 lineto
 205 108 lineto
 205 117 lineto
 205 124 lineto
 206 128 lineto
 206 131 lineto
 207 133 lineto
 207 135 lineto
 208 132 lineto
 208 126 lineto
 209 121 lineto
 209 119 lineto
 210 122 lineto
 210 122 lineto
 211 118 lineto
 211 110 lineto
 211 101 lineto
 212 93 lineto
 212 86 lineto
 213 83 lineto
 213 84 lineto
 213 91 lineto
 214 102 lineto
 214 118 lineto
 215 135 lineto
 215 152 lineto
 215 150 lineto
 216 143 lineto
 216 141 lineto
 217 137 lineto
 217 126 lineto
 218 116 lineto
 218 110 lineto
 219 117 lineto
 219 130 lineto
 220 146 lineto
 220 149 lineto
 221 133 lineto
 221 120 lineto
 221 111 lineto
 222 108 lineto
 222 110 lineto
 223 115 lineto
 223 122 lineto
 223 130 lineto
 224 136 lineto
 224 141 lineto
 225 143 lineto
 225 146 lineto
 225 150 lineto
 226 154 lineto
 226 149 lineto
 227 141 lineto
 227 131 lineto
 227 120 lineto
 228 110 lineto
 228 101 lineto
 229 94 lineto
 229 91 lineto
 230 95 lineto
 230 102 lineto
 231 112 lineto
 231 123 lineto
 231 135 lineto
 232 144 lineto
 232 149 lineto
 233 144 lineto
 233 138 lineto
 233 134 lineto
 234 131 lineto
 234 130 lineto
 235 130 lineto
 235 130 lineto
 236 128 lineto
 236 124 lineto
 237 120 lineto
 237 114 lineto
 237 110 lineto
 238 108 lineto
 238 109 lineto
 239 115 lineto
 239 124 lineto
 239 137 lineto
 240 151 lineto
 240 149 lineto
 241 137 lineto
 241 127 lineto
 241 121 lineto
 242 116 lineto
 242 112 lineto
 243 108 lineto
 243 105 lineto
 243 104 lineto
 244 107 lineto
 244 115 lineto
 245 128 lineto
 245 141 lineto
 245 142 lineto
 246 129 lineto
 246 116 lineto
 247 108 lineto
 247 115 lineto
 248 129 lineto
 248 145 lineto
 249 139 lineto
 249 119 lineto
 249 101 lineto
 250 88 lineto
 250 83 lineto
 251 84 lineto
 251 90 lineto
 251 100 lineto
 252 111 lineto
 252 121 lineto
 253 129 lineto
 253 135 lineto
 253 138 lineto
 254 139 lineto
 254 138 lineto
 255 135 lineto
 255 129 lineto
 255 119 lineto
 256 106 lineto
 256 92 lineto
 257 79 lineto
 257 70 lineto
 257 66 lineto
 258 68 lineto
 258 77 lineto
 259 89 lineto
 259 104 lineto
 259 119 lineto
 260 133 lineto
 260 143 lineto
 261 147 lineto
 261 145 lineto
 262 142 lineto
 262 137 lineto
 263 130 lineto
 263 123 lineto
 263 119 lineto
 264 117 lineto
 264 120 lineto
 265 126 lineto
 265 134 lineto
 265 141 lineto
 266 141 lineto
 266 138 lineto
 267 135 lineto
 267 140 lineto
 268 146 lineto
 268 153 lineto
 269 155 lineto
 269 152 lineto
 269 149 lineto
 270 146 lineto
 270 141 lineto
 271 135 lineto
 271 129 lineto
 271 125 lineto
 272 127 lineto
 273 134 lineto
 273 142 lineto
 273 151 lineto
 274 153 lineto
 274 148 lineto
 275 147 lineto
 275 149 lineto
 275 153 lineto
 276 150 lineto
 276 142 lineto
 277 136 lineto
 277 132 lineto
 277 131 lineto
 278 135 lineto
 278 140 lineto
 279 145 lineto
 279 147 lineto
 279 146 lineto
 280 147 lineto
 281 148 lineto
 281 147 lineto
 281 144 lineto
 282 142 lineto
 282 141 lineto
 283 143 lineto
 283 147 lineto
 283 152 lineto
 284 157 lineto
 284 152 lineto
 285 148 lineto
 285 146 lineto
 285 145 lineto
 286 145 lineto
 286 147 lineto
 287 148 lineto
 287 150 lineto
 287 150 lineto
 288 150 lineto
 289 151 lineto
 289 152 lineto
 290 152 lineto
 291 153 lineto
 291 155 lineto
 291 157 lineto
 292 154 lineto
 292 151 lineto
 292 150 lineto
 293 151 lineto
 294 152 lineto
 294 153 lineto
 295 152 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

96 151 1 Ci
97 151 1 Ci
97 152 1 Ci
98 152 1 Ci
98 153 1 Ci
99 154 1 Ci
99 153 1 Ci
100 150 1 Ci
100 147 1 Ci
100 145 1 Ci
101 144 1 Ci
101 144 1 Ci
102 146 1 Ci
102 149 1 Ci
102 152 1 Ci
103 155 1 Ci
103 157 1 Ci
104 154 1 Ci
104 151 1 Ci
105 149 1 Ci
105 147 1 Ci
106 148 1 Ci
106 148 1 Ci
107 148 1 Ci
107 147 1 Ci
108 146 1 Ci
108 146 1 Ci
108 146 1 Ci
109 147 1 Ci
110 148 1 Ci
110 149 1 Ci
111 151 1 Ci
111 153 1 Ci
112 151 1 Ci
112 147 1 Ci
113 144 1 Ci
113 142 1 Ci
114 144 1 Ci
114 148 1 Ci
115 150 1 Ci
115 144 1 Ci
116 137 1 Ci
116 132 1 Ci
116 131 1 Ci
117 135 1 Ci
117 142 1 Ci
118 151 1 Ci
118 153 1 Ci
118 144 1 Ci
119 137 1 Ci
119 133 1 Ci
120 131 1 Ci
120 130 1 Ci
121 130 1 Ci
121 133 1 Ci
122 136 1 Ci
122 142 1 Ci
122 148 1 Ci
123 152 1 Ci
123 149 1 Ci
124 144 1 Ci
124 140 1 Ci
124 137 1 Ci
125 139 1 Ci
126 146 1 Ci
126 154 1 Ci
126 146 1 Ci
127 135 1 Ci
127 127 1 Ci
128 122 1 Ci
128 123 1 Ci
128 129 1 Ci
129 139 1 Ci
129 150 1 Ci
130 153 1 Ci
130 144 1 Ci
130 139 1 Ci
131 139 1 Ci
131 141 1 Ci
132 144 1 Ci
132 145 1 Ci
132 143 1 Ci
133 140 1 Ci
133 139 1 Ci
134 141 1 Ci
134 144 1 Ci
134 147 1 Ci
135 146 1 Ci
135 141 1 Ci
136 138 1 Ci
136 136 1 Ci
137 138 1 Ci
137 139 1 Ci
138 137 1 Ci
138 132 1 Ci
138 124 1 Ci
139 116 1 Ci
139 108 1 Ci
140 101 1 Ci
140 96 1 Ci
140 92 1 Ci
141 90 1 Ci
141 91 1 Ci
142 95 1 Ci
142 102 1 Ci
142 112 1 Ci
143 123 1 Ci
143 131 1 Ci
144 130 1 Ci
144 125 1 Ci
144 122 1 Ci
145 123 1 Ci
145 131 1 Ci
146 142 1 Ci
146 153 1 Ci
146 147 1 Ci
147 141 1 Ci
147 140 1 Ci
148 143 1 Ci
148 146 1 Ci
148 139 1 Ci
149 130 1 Ci
149 123 1 Ci
150 122 1 Ci
150 126 1 Ci
150 136 1 Ci
151 146 1 Ci
151 149 1 Ci
152 140 1 Ci
152 131 1 Ci
152 125 1 Ci
153 121 1 Ci
153 120 1 Ci
154 121 1 Ci
154 126 1 Ci
154 133 1 Ci
155 140 1 Ci
155 144 1 Ci
156 148 1 Ci
156 154 1 Ci
156 150 1 Ci
157 135 1 Ci
157 118 1 Ci
158 102 1 Ci
158 90 1 Ci
158 84 1 Ci
159 86 1 Ci
159 94 1 Ci
160 106 1 Ci
160 117 1 Ci
160 123 1 Ci
161 120 1 Ci
161 111 1 Ci
162 101 1 Ci
162 92 1 Ci
162 87 1 Ci
163 87 1 Ci
163 92 1 Ci
164 101 1 Ci
164 114 1 Ci
164 127 1 Ci
165 139 1 Ci
165 147 1 Ci
166 151 1 Ci
166 152 1 Ci
166 153 1 Ci
167 151 1 Ci
167 148 1 Ci
168 143 1 Ci
168 137 1 Ci
168 132 1 Ci
169 129 1 Ci
169 129 1 Ci
170 132 1 Ci
170 138 1 Ci
170 139 1 Ci
171 134 1 Ci
171 127 1 Ci
172 122 1 Ci
172 124 1 Ci
173 129 1 Ci
173 134 1 Ci
174 137 1 Ci
174 134 1 Ci
174 127 1 Ci
175 118 1 Ci
175 110 1 Ci
176 107 1 Ci
176 111 1 Ci
176 123 1 Ci
177 142 1 Ci
177 141 1 Ci
178 117 1 Ci
178 95 1 Ci
178 81 1 Ci
179 77 1 Ci
179 85 1 Ci
180 103 1 Ci
180 126 1 Ci
180 145 1 Ci
181 131 1 Ci
181 114 1 Ci
182 103 1 Ci
182 102 1 Ci
182 107 1 Ci
183 118 1 Ci
183 128 1 Ci
184 132 1 Ci
184 127 1 Ci
184 119 1 Ci
185 112 1 Ci
185 109 1 Ci
186 108 1 Ci
186 109 1 Ci
186 112 1 Ci
187 116 1 Ci
187 121 1 Ci
188 125 1 Ci
188 129 1 Ci
188 132 1 Ci
189 133 1 Ci
189 132 1 Ci
190 128 1 Ci
190 122 1 Ci
190 117 1 Ci
191 114 1 Ci
191 114 1 Ci
192 119 1 Ci
192 127 1 Ci
192 137 1 Ci
193 144 1 Ci
193 138 1 Ci
194 127 1 Ci
194 118 1 Ci
194 111 1 Ci
195 106 1 Ci
195 99 1 Ci
196 90 1 Ci
196 77 1 Ci
196 64 1 Ci
197 53 1 Ci
197 47 1 Ci
197 50 1 Ci
198 61 1 Ci
198 77 1 Ci
199 95 1 Ci
199 106 1 Ci
199 106 1 Ci
200 98 1 Ci
200 93 1 Ci
201 97 1 Ci
201 103 1 Ci
202 106 1 Ci
202 103 1 Ci
203 98 1 Ci
203 93 1 Ci
203 92 1 Ci
204 95 1 Ci
204 101 1 Ci
205 108 1 Ci
205 117 1 Ci
205 124 1 Ci
206 128 1 Ci
206 131 1 Ci
207 133 1 Ci
207 135 1 Ci
208 132 1 Ci
208 126 1 Ci
209 121 1 Ci
209 119 1 Ci
210 122 1 Ci
210 122 1 Ci
211 118 1 Ci
211 110 1 Ci
211 101 1 Ci
212 93 1 Ci
212 86 1 Ci
213 83 1 Ci
213 84 1 Ci
213 91 1 Ci
214 102 1 Ci
214 118 1 Ci
215 135 1 Ci
215 152 1 Ci
215 150 1 Ci
216 143 1 Ci
216 141 1 Ci
217 137 1 Ci
217 126 1 Ci
218 116 1 Ci
218 110 1 Ci
219 117 1 Ci
219 130 1 Ci
220 146 1 Ci
220 149 1 Ci
221 133 1 Ci
221 120 1 Ci
221 111 1 Ci
222 108 1 Ci
222 110 1 Ci
223 115 1 Ci
223 122 1 Ci
223 130 1 Ci
224 136 1 Ci
224 141 1 Ci
225 143 1 Ci
225 146 1 Ci
225 150 1 Ci
226 154 1 Ci
226 149 1 Ci
227 141 1 Ci
227 131 1 Ci
227 120 1 Ci
228 110 1 Ci
228 101 1 Ci
229 94 1 Ci
229 91 1 Ci
230 95 1 Ci
230 102 1 Ci
231 112 1 Ci
231 123 1 Ci
231 135 1 Ci
232 144 1 Ci
232 149 1 Ci
233 144 1 Ci
233 138 1 Ci
233 134 1 Ci
234 131 1 Ci
234 130 1 Ci
235 130 1 Ci
235 130 1 Ci
236 128 1 Ci
236 124 1 Ci
237 120 1 Ci
237 114 1 Ci
237 110 1 Ci
238 108 1 Ci
238 109 1 Ci
239 115 1 Ci
239 124 1 Ci
239 137 1 Ci
240 151 1 Ci
240 149 1 Ci
241 137 1 Ci
241 127 1 Ci
241 121 1 Ci
242 116 1 Ci
242 112 1 Ci
243 108 1 Ci
243 105 1 Ci
243 104 1 Ci
244 107 1 Ci
244 115 1 Ci
245 128 1 Ci
245 141 1 Ci
245 142 1 Ci
246 129 1 Ci
246 116 1 Ci
247 108 1 Ci
247 115 1 Ci
248 129 1 Ci
248 145 1 Ci
249 139 1 Ci
249 119 1 Ci
249 101 1 Ci
250 88 1 Ci
250 83 1 Ci
251 84 1 Ci
251 90 1 Ci
251 100 1 Ci
252 111 1 Ci
252 121 1 Ci
253 129 1 Ci
253 135 1 Ci
253 138 1 Ci
254 139 1 Ci
254 138 1 Ci
255 135 1 Ci
255 129 1 Ci
255 119 1 Ci
256 106 1 Ci
256 92 1 Ci
257 79 1 Ci
257 70 1 Ci
257 66 1 Ci
258 68 1 Ci
258 77 1 Ci
259 89 1 Ci
259 104 1 Ci
259 119 1 Ci
260 133 1 Ci
260 143 1 Ci
261 147 1 Ci
261 145 1 Ci
262 142 1 Ci
262 137 1 Ci
263 130 1 Ci
263 123 1 Ci
263 119 1 Ci
264 117 1 Ci
264 120 1 Ci
265 126 1 Ci
265 134 1 Ci
265 141 1 Ci
266 141 1 Ci
266 138 1 Ci
267 135 1 Ci
267 140 1 Ci
268 146 1 Ci
268 153 1 Ci
269 155 1 Ci
269 152 1 Ci
269 149 1 Ci
270 146 1 Ci
270 141 1 Ci
271 135 1 Ci
271 129 1 Ci
271 125 1 Ci
272 127 1 Ci
273 134 1 Ci
273 142 1 Ci
273 151 1 Ci
274 153 1 Ci
274 148 1 Ci
275 147 1 Ci
275 149 1 Ci
275 153 1 Ci
276 150 1 Ci
276 142 1 Ci
277 136 1 Ci
277 132 1 Ci
277 131 1 Ci
278 135 1 Ci
278 140 1 Ci
279 145 1 Ci
279 147 1 Ci
279 146 1 Ci
280 147 1 Ci
281 148 1 Ci
281 147 1 Ci
281 144 1 Ci
282 142 1 Ci
282 141 1 Ci
283 143 1 Ci
283 147 1 Ci
283 152 1 Ci
284 157 1 Ci
284 152 1 Ci
285 148 1 Ci
285 146 1 Ci
285 145 1 Ci
286 145 1 Ci
286 147 1 Ci
287 148 1 Ci
287 150 1 Ci
287 150 1 Ci
288 150 1 Ci
289 151 1 Ci
289 152 1 Ci
290 152 1 Ci
291 153 1 Ci
291 155 1 Ci
291 157 1 Ci
292 154 1 Ci
292 151 1 Ci
292 150 1 Ci
293 151 1 Ci
294 152 1 Ci
294 153 1 Ci
295 152 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 350 33 Box Fill

0 33 48 133 Box Fill

344 33 6 133 Box Fill

0 166 350 34 Box Fill

0.898039 0.898039 0.898039 SetBgColor
46 166 300 2 Box Fill

344 31 2 137 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 46 168 moveto
46 31 lineto
346 31 lineto
344 33 lineto
48 33 lineto
48 166 lineto
46 168 lineto
46 168  lineto closepath Fill
90 17 0 196 14 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+14, +12\)) 90 0 13 DrawAdjText
EndText
40 17 0 0 98 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.1) 36 2 13 DrawAdjText
EndText
49 17 0 56 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.05) 45 2 13 DrawAdjText
EndText
13 17 0 126 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
40 17 0 196 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.05) 36 2 13 DrawAdjText
EndText
31 17 0 266 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
56 171 336 171 LS
91 171 91 176 LS
56 171 56 179 LS
161 171 161 176 LS
126 171 126 179 LS
231 171 231 176 LS
196 171 196 179 LS
301 171 301 176 LS
266 171 266 179 LS
336 171 336 179 LS
13 17 0 329 181 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
22 17 0 22 158 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(20) 18 2 13 DrawAdjText
EndText
22 17 0 22 134 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(40) 18 2 13 DrawAdjText
EndText
22 17 0 22 111 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(60) 18 2 13 DrawAdjText
EndText
22 17 0 22 87 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(80) 18 2 13 DrawAdjText
EndText
31 17 0 17 64 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(100) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
43 158 43 41 LS
43 146 38 146 LS
43 158 35 158 LS
43 122 38 122 LS
43 134 35 134 LS
43 99 38 99 LS
43 111 35 111 LS
43 76 38 76 LS
43 87 35 87 LS
43 52 38 52 LS
43 64 35 64 LS
43 41 35 41 LS
showpage
%Trailer
grestore
end
%EOF
%%Page:
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 37 566 -564 224
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Tue Dec 19 17:15:26 2000)
%%Title: (/tmp/3.llDataPrint)
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Arrow
/Ar {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
					% b2 0 h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    neg					% -h2 b2
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

% Transform coordinate system to use X11 coordinates

% 1. Flip y-axis over by reversing the scale,
% 2. Translate the origin to the other side of the page,
%    making the origin the upper left corner
0.757382 -0.755721 scale
0 -1046 translate

% User defined page layout

% Set color level
/CL 2 def

% Set origin
50 750 translate


% Setting graph scale factor
 -2.27 -2.27 scale

%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
46 31 301 138 Box Fill

gsave clip


% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

96 103 3 Ci
97 109 3 Ci
97 113 3 Ci
97 117 3 Ci
98 118 3 Ci
98 118 3 Ci
99 102 3 Ci
99 83 3 Ci
99 82 3 Ci
100 82 3 Ci
100 83 3 Ci
100 85 3 Ci
101 89 3 Ci
101 132 3 Ci
102 138 3 Ci
102 141 3 Ci
102 144 3 Ci
103 148 3 Ci
103 51 3 Ci
104 54 3 Ci
104 56 3 Ci
104 58 3 Ci
105 59 3 Ci
105 60 3 Ci
106 60 3 Ci
106 59 3 Ci
106 57 3 Ci
107 57 3 Ci
108 57 3 Ci
108 56 3 Ci
109 54 3 Ci
109 51 3 Ci
110 148 3 Ci
110 143 3 Ci
110 137 3 Ci
111 132 3 Ci
111 127 3 Ci
112 123 3 Ci
112 120 3 Ci
112 116 3 Ci
113 112 3 Ci
113 108 3 Ci
114 110 3 Ci
114 118 3 Ci
114 119 3 Ci
115 119 3 Ci
115 118 3 Ci
116 118 3 Ci
116 117 3 Ci
117 121 3 Ci
117 147 3 Ci
118 62 3 Ci
118 66 3 Ci
118 73 3 Ci
119 85 3 Ci
119 93 3 Ci
120 97 3 Ci
120 98 3 Ci
121 98 3 Ci
122 96 3 Ci
122 89 3 Ci
122 75 3 Ci
123 66 3 Ci
123 63 3 Ci
124 63 3 Ci
124 64 3 Ci
124 67 3 Ci
125 70 3 Ci
125 74 3 Ci
126 78 3 Ci
126 81 3 Ci
126 85 3 Ci
127 90 3 Ci
127 101 3 Ci
128 110 3 Ci
128 112 3 Ci
128 109 3 Ci
129 106 3 Ci
129 103 3 Ci
130 100 3 Ci
130 97 3 Ci
130 94 3 Ci
131 85 3 Ci
131 63 3 Ci
132 55 3 Ci
132 52 3 Ci
132 50 3 Ci
133 50 3 Ci
133 49 3 Ci
134 149 3 Ci
134 148 3 Ci
134 145 3 Ci
135 139 3 Ci
135 134 3 Ci
136 134 3 Ci
137 132 3 Ci
138 128 3 Ci
138 120 3 Ci
138 111 3 Ci
139 106 3 Ci
139 105 3 Ci
140 107 3 Ci
140 111 3 Ci
141 116 3 Ci
141 120 3 Ci
142 122 3 Ci
142 122 3 Ci
143 120 3 Ci
143 119 3 Ci
144 124 3 Ci
144 137 3 Ci
144 145 3 Ci
145 146 3 Ci
145 146 3 Ci
146 146 3 Ci
146 145 3 Ci
146 142 3 Ci
147 127 3 Ci
147 100 3 Ci
148 97 3 Ci
148 95 3 Ci
148 93 3 Ci
149 90 3 Ci
149 81 3 Ci
150 64 3 Ci
150 56 3 Ci
150 54 3 Ci
151 54 3 Ci
151 57 3 Ci
152 64 3 Ci
152 77 3 Ci
152 84 3 Ci
153 87 3 Ci
153 88 3 Ci
154 87 3 Ci
155 84 3 Ci
155 75 3 Ci
156 50 3 Ci
156 145 3 Ci
156 143 3 Ci
157 145 3 Ci
158 50 3 Ci
158 61 3 Ci
158 69 3 Ci
159 71 3 Ci
159 72 3 Ci
160 72 3 Ci
160 73 3 Ci
161 81 3 Ci
161 109 3 Ci
162 113 3 Ci
162 112 3 Ci
163 110 3 Ci
163 107 3 Ci
164 101 3 Ci
164 93 3 Ci
164 89 3 Ci
165 87 3 Ci
165 87 3 Ci
166 90 3 Ci
166 95 3 Ci
166 104 3 Ci
167 116 3 Ci
167 125 3 Ci
168 131 3 Ci
168 137 3 Ci
168 143 3 Ci
169 49 3 Ci
169 54 3 Ci
170 58 3 Ci
170 61 3 Ci
170 64 3 Ci
171 68 3 Ci
171 80 3 Ci
172 102 3 Ci
172 108 3 Ci
172 110 3 Ci
173 111 3 Ci
174 111 3 Ci
174 109 3 Ci
175 106 3 Ci
175 71 3 Ci
176 60 3 Ci
176 57 3 Ci
176 54 3 Ci
177 147 3 Ci
177 127 3 Ci
178 115 3 Ci
178 110 3 Ci
178 107 3 Ci
179 105 3 Ci
179 103 3 Ci
180 101 3 Ci
180 99 3 Ci
180 97 3 Ci
181 96 3 Ci
181 95 3 Ci
182 96 3 Ci
182 98 3 Ci
182 101 3 Ci
183 106 3 Ci
183 113 3 Ci
184 123 3 Ci
184 136 3 Ci
184 144 3 Ci
185 149 3 Ci
185 51 3 Ci
186 53 3 Ci
186 55 3 Ci
186 58 3 Ci
187 63 3 Ci
187 72 3 Ci
188 87 3 Ci
188 99 3 Ci
188 108 3 Ci
189 116 3 Ci
189 121 3 Ci
190 124 3 Ci
190 125 3 Ci
190 124 3 Ci
191 122 3 Ci
191 119 3 Ci
192 116 3 Ci
192 114 3 Ci
192 114 3 Ci
193 116 3 Ci
193 121 3 Ci
194 126 3 Ci
194 131 3 Ci
194 133 3 Ci
195 135 3 Ci
195 136 3 Ci
196 132 3 Ci
196 96 3 Ci
197 93 3 Ci
197 94 3 Ci
197 100 3 Ci
198 114 3 Ci
198 124 3 Ci
199 128 3 Ci
199 130 3 Ci
199 130 3 Ci
200 131 3 Ci
201 127 3 Ci
201 110 3 Ci
202 107 3 Ci
202 116 3 Ci
203 120 3 Ci
203 122 3 Ci
204 122 3 Ci
205 121 3 Ci
205 118 3 Ci
205 111 3 Ci
206 97 3 Ci
206 85 3 Ci
207 80 3 Ci
207 76 3 Ci
207 71 3 Ci
208 66 3 Ci
208 61 3 Ci
209 58 3 Ci
209 57 3 Ci
210 59 3 Ci
210 60 3 Ci
211 61 3 Ci
211 59 3 Ci
212 54 3 Ci
212 142 3 Ci
213 133 3 Ci
213 130 3 Ci
214 132 3 Ci
214 135 3 Ci
215 141 3 Ci
215 49 3 Ci
215 57 3 Ci
216 62 3 Ci
216 65 3 Ci
217 68 3 Ci
217 69 3 Ci
217 70 3 Ci
218 66 3 Ci
218 130 3 Ci
219 131 3 Ci
219 133 3 Ci
220 135 3 Ci
220 138 3 Ci
221 141 3 Ci
221 144 3 Ci
221 147 3 Ci
222 50 3 Ci
222 53 3 Ci
223 54 3 Ci
223 53 3 Ci
223 49 3 Ci
224 146 3 Ci
224 143 3 Ci
225 140 3 Ci
225 137 3 Ci
225 135 3 Ci
226 131 3 Ci
226 128 3 Ci
227 123 3 Ci
227 119 3 Ci
227 115 3 Ci
228 113 3 Ci
228 116 3 Ci
229 122 3 Ci
229 127 3 Ci
229 128 3 Ci
230 127 3 Ci
231 126 3 Ci
231 125 3 Ci
231 123 3 Ci
232 122 3 Ci
232 122 3 Ci
233 125 3 Ci
233 132 3 Ci
233 141 3 Ci
234 145 3 Ci
234 145 3 Ci
235 145 3 Ci
235 144 3 Ci
236 145 3 Ci
236 148 3 Ci
237 53 3 Ci
237 58 3 Ci
237 60 3 Ci
238 60 3 Ci
239 58 3 Ci
239 57 3 Ci
239 56 3 Ci
240 55 3 Ci
240 55 3 Ci
241 57 3 Ci
241 62 3 Ci
241 68 3 Ci
242 72 3 Ci
242 74 3 Ci
243 71 3 Ci
243 66 3 Ci
244 55 3 Ci
244 144 3 Ci
245 138 3 Ci
245 135 3 Ci
245 133 3 Ci
246 132 3 Ci
246 130 3 Ci
247 129 3 Ci
247 73 3 Ci
247 75 3 Ci
248 74 3 Ci
248 73 3 Ci
249 73 3 Ci
249 73 3 Ci
250 73 3 Ci
250 73 3 Ci
251 72 3 Ci
251 70 3 Ci
252 66 3 Ci
252 59 3 Ci
253 52 3 Ci
253 148 3 Ci
253 146 3 Ci
254 146 3 Ci
255 50 3 Ci
255 57 3 Ci
255 66 3 Ci
256 72 3 Ci
256 75 3 Ci
257 76 3 Ci
257 73 3 Ci
258 139 3 Ci
258 131 3 Ci
259 130 3 Ci
259 128 3 Ci
259 122 3 Ci
260 96 3 Ci
260 86 3 Ci
261 83 3 Ci
261 82 3 Ci
261 81 3 Ci
262 80 3 Ci
262 79 3 Ci
263 77 3 Ci
263 72 3 Ci
263 57 3 Ci
264 144 3 Ci
264 143 3 Ci
265 84 3 Ci
265 85 3 Ci
266 85 3 Ci
266 87 3 Ci
267 91 3 Ci
267 99 3 Ci
267 106 3 Ci
268 109 3 Ci
268 109 3 Ci
269 107 3 Ci
269 103 3 Ci
269 98 3 Ci
270 92 3 Ci
270 87 3 Ci
271 82 3 Ci
271 79 3 Ci
271 77 3 Ci
272 76 3 Ci
272 79 3 Ci
273 85 3 Ci
273 90 3 Ci
273 91 3 Ci
274 89 3 Ci
275 87 3 Ci
275 85 3 Ci
275 83 3 Ci
276 83 3 Ci
277 85 3 Ci
277 87 3 Ci
277 89 3 Ci
278 90 3 Ci
278 90 3 Ci
279 89 3 Ci
279 86 3 Ci
279 80 3 Ci
280 72 3 Ci
280 65 3 Ci
281 60 3 Ci
281 56 3 Ci
281 53 3 Ci
282 149 3 Ci
282 145 3 Ci
283 142 3 Ci
283 142 3 Ci
283 143 3 Ci
284 146 3 Ci
284 51 3 Ci
285 58 3 Ci
285 63 3 Ci
285 66 3 Ci
286 69 3 Ci
286 71 3 Ci
287 74 3 Ci
287 76 3 Ci
287 81 3 Ci
288 96 3 Ci
288 110 3 Ci
289 112 3 Ci
289 107 3 Ci
289 99 3 Ci
290 92 3 Ci
290 89 3 Ci
291 87 3 Ci
291 84 3 Ci
291 81 3 Ci
292 74 3 Ci
292 65 3 Ci
292 62 3 Ci
293 62 3 Ci
293 66 3 Ci
294 72 3 Ci
294 78 3 Ci
294 85 3 Ci
295 91 3 Ci

% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 96 148 moveto
 97 148 lineto
 97 148 lineto
 98 150 lineto
 98 153 lineto
 99 156 lineto
 99 153 lineto
 99 150 lineto
 100 148 lineto
 100 148 lineto
 100 151 lineto
 101 155 lineto
 101 155 lineto
 102 151 lineto
 102 146 lineto
 102 143 lineto
 103 141 lineto
 103 139 lineto
 104 138 lineto
 104 138 lineto
 104 139 lineto
 105 142 lineto
 105 146 lineto
 106 149 lineto
 106 152 lineto
 106 153 lineto
 107 152 lineto
 107 149 lineto
 108 145 lineto
 108 141 lineto
 108 138 lineto
 109 136 lineto
 109 136 lineto
 110 138 lineto
 110 139 lineto
 111 140 lineto
 111 141 lineto
 112 143 lineto
 112 146 lineto
 112 149 lineto
 113 152 lineto
 113 154 lineto
 114 155 lineto
 114 154 lineto
 114 151 lineto
 115 147 lineto
 115 144 lineto
 116 142 lineto
 116 143 lineto
 116 147 lineto
 117 152 lineto
 117 156 lineto
 118 152 lineto
 118 149 lineto
 118 149 lineto
 119 147 lineto
 119 139 lineto
 120 129 lineto
 120 119 lineto
 120 112 lineto
 121 111 lineto
 121 116 lineto
 122 125 lineto
 122 137 lineto
 122 140 lineto
 123 132 lineto
 123 122 lineto
 124 116 lineto
 124 115 lineto
 124 117 lineto
 125 121 lineto
 125 124 lineto
 126 128 lineto
 126 133 lineto
 126 139 lineto
 127 145 lineto
 127 149 lineto
 128 147 lineto
 128 143 lineto
 128 138 lineto
 129 133 lineto
 129 128 lineto
 130 126 lineto
 130 128 lineto
 130 135 lineto
 131 145 lineto
 131 144 lineto
 132 131 lineto
 132 118 lineto
 132 110 lineto
 133 109 lineto
 133 114 lineto
 134 123 lineto
 134 134 lineto
 134 143 lineto
 135 147 lineto
 135 146 lineto
 136 141 lineto
 136 135 lineto
 136 129 lineto
 137 127 lineto
 137 129 lineto
 138 133 lineto
 138 136 lineto
 138 133 lineto
 139 127 lineto
 139 122 lineto
 140 121 lineto
 140 123 lineto
 140 126 lineto
 141 127 lineto
 141 125 lineto
 142 123 lineto
 142 124 lineto
 142 126 lineto
 143 131 lineto
 143 138 lineto
 144 144 lineto
 144 145 lineto
 144 136 lineto
 145 124 lineto
 145 116 lineto
 146 114 lineto
 146 120 lineto
 146 134 lineto
 147 150 lineto
 147 138 lineto
 148 121 lineto
 148 111 lineto
 148 111 lineto
 149 121 lineto
 149 135 lineto
 150 134 lineto
 150 118 lineto
 150 105 lineto
 151 103 lineto
 151 111 lineto
 152 122 lineto
 152 118 lineto
 152 97 lineto
 153 75 lineto
 153 62 lineto
 154 61 lineto
 154 72 lineto
 154 93 lineto
 155 118 lineto
 155 142 lineto
 156 140 lineto
 156 126 lineto
 156 120 lineto
 157 122 lineto
 157 129 lineto
 158 138 lineto
 158 140 lineto
 158 134 lineto
 159 127 lineto
 159 124 lineto
 160 126 lineto
 160 132 lineto
 160 141 lineto
 161 151 lineto
 161 149 lineto
 162 139 lineto
 162 132 lineto
 162 130 lineto
 163 131 lineto
 163 135 lineto
 164 138 lineto
 164 134 lineto
 165 131 lineto
 165 131 lineto
 166 134 lineto
 166 139 lineto
 166 143 lineto
 167 142 lineto
 167 137 lineto
 168 133 lineto
 168 130 lineto
 168 127 lineto
 169 123 lineto
 169 119 lineto
 170 115 lineto
 170 121 lineto
 171 132 lineto
 171 145 lineto
 172 139 lineto
 172 121 lineto
 172 105 lineto
 173 94 lineto
 173 91 lineto
 174 96 lineto
 174 108 lineto
 174 125 lineto
 175 144 lineto
 175 153 lineto
 176 142 lineto
 176 137 lineto
 176 138 lineto
 177 145 lineto
 177 146 lineto
 178 135 lineto
 178 120 lineto
 178 107 lineto
 179 98 lineto
 179 93 lineto
 180 92 lineto
 180 95 lineto
 180 100 lineto
 181 106 lineto
 181 114 lineto
 182 122 lineto
 182 129 lineto
 182 135 lineto
 183 140 lineto
 183 145 lineto
 184 147 lineto
 184 146 lineto
 184 141 lineto
 185 135 lineto
 185 132 lineto
 186 131 lineto
 186 133 lineto
 186 138 lineto
 187 145 lineto
 187 150 lineto
 188 151 lineto
 188 150 lineto
 188 148 lineto
 189 146 lineto
 189 142 lineto
 190 138 lineto
 190 136 lineto
 190 134 lineto
 191 134 lineto
 192 136 lineto
 193 138 lineto
 193 139 lineto
 194 139 lineto
 194 136 lineto
 194 135 lineto
 195 136 lineto
 195 139 lineto
 196 146 lineto
 196 153 lineto
 196 154 lineto
 197 149 lineto
 197 148 lineto
 197 150 lineto
 198 145 lineto
 199 138 lineto
 199 133 lineto
 199 132 lineto
 200 134 lineto
 200 140 lineto
 201 147 lineto
 201 153 lineto
 201 155 lineto
 202 154 lineto
 202 151 lineto
 203 144 lineto
 203 136 lineto
 203 128 lineto
 204 123 lineto
 204 123 lineto
 205 127 lineto
 205 135 lineto
 205 143 lineto
 206 147 lineto
 206 143 lineto
 207 138 lineto
 207 137 lineto
 207 137 lineto
 208 135 lineto
 209 130 lineto
 209 125 lineto
 209 119 lineto
 210 114 lineto
 210 111 lineto
 211 116 lineto
 211 125 lineto
 212 135 lineto
 212 138 lineto
 213 129 lineto
 213 118 lineto
 213 112 lineto
 214 116 lineto
 215 123 lineto
 215 125 lineto
 215 120 lineto
 216 114 lineto
 216 111 lineto
 217 114 lineto
 217 123 lineto
 217 136 lineto
 218 152 lineto
 218 146 lineto
 219 132 lineto
 219 121 lineto
 219 114 lineto
 220 111 lineto
 220 111 lineto
 221 114 lineto
 221 119 lineto
 221 125 lineto
 222 129 lineto
 222 131 lineto
 223 132 lineto
 223 132 lineto
 223 130 lineto
 224 126 lineto
 224 121 lineto
 225 116 lineto
 225 113 lineto
 225 113 lineto
 226 116 lineto
 226 121 lineto
 227 126 lineto
 227 131 lineto
 227 134 lineto
 228 138 lineto
 228 140 lineto
 229 139 lineto
 229 131 lineto
 229 121 lineto
 230 110 lineto
 230 101 lineto
 231 96 lineto
 231 95 lineto
 231 100 lineto
 232 108 lineto
 232 120 lineto
 233 131 lineto
 233 138 lineto
 233 135 lineto
 234 126 lineto
 234 118 lineto
 235 112 lineto
 235 109 lineto
 235 111 lineto
 236 116 lineto
 236 122 lineto
 237 124 lineto
 237 120 lineto
 237 112 lineto
 238 104 lineto
 238 97 lineto
 239 94 lineto
 239 93 lineto
 239 96 lineto
 240 101 lineto
 240 110 lineto
 241 119 lineto
 241 125 lineto
 242 121 lineto
 242 118 lineto
 243 120 lineto
 243 125 lineto
 243 134 lineto
 244 138 lineto
 244 134 lineto
 245 127 lineto
 245 122 lineto
 245 122 lineto
 246 128 lineto
 246 137 lineto
 247 148 lineto
 247 156 lineto
 247 145 lineto
 248 136 lineto
 248 128 lineto
 249 122 lineto
 249 116 lineto
 249 111 lineto
 250 108 lineto
 250 105 lineto
 251 109 lineto
 251 115 lineto
 252 122 lineto
 252 126 lineto
 253 123 lineto
 253 118 lineto
 253 114 lineto
 254 114 lineto
 254 119 lineto
 255 128 lineto
 255 134 lineto
 255 133 lineto
 256 129 lineto
 256 127 lineto
 257 131 lineto
 257 139 lineto
 257 149 lineto
 258 153 lineto
 258 146 lineto
 259 142 lineto
 259 144 lineto
 259 150 lineto
 260 152 lineto
 260 143 lineto
 261 134 lineto
 261 129 lineto
 261 128 lineto
 262 132 lineto
 262 138 lineto
 263 145 lineto
 263 152 lineto
 263 155 lineto
 264 155 lineto
 264 157 lineto
 265 155 lineto
 265 152 lineto
 265 149 lineto
 266 148 lineto
 266 149 lineto
 267 150 lineto
 267 152 lineto
 267 151 lineto
 268 149 lineto
 268 148 lineto
 269 148 lineto
 269 148 lineto
 269 149 lineto
 270 149 lineto
 271 150 lineto
 271 151 lineto
 272 152 lineto
 272 153 lineto
 273 152 lineto
 273 151 lineto
 274 149 lineto
 274 148 lineto
 275 148 lineto
 275 148 lineto
 276 148 lineto
 277 148 lineto
 277 147 lineto
 278 147 lineto
 278 147 lineto
 279 148 lineto
 279 150 lineto
 279 151 lineto
 280 151 lineto
 280 150 lineto
 281 150 lineto
 281 149 lineto
 282 150 lineto
 283 149 lineto
 284 150 lineto
 285 148 lineto
 285 147 lineto
 286 147 lineto
 287 149 lineto
 287 152 lineto
 287 154 lineto
 288 156 lineto
 288 155 lineto
 289 155 lineto
 289 154 lineto
 290 153 lineto
 290 152 lineto
 291 152 lineto
 291 152 lineto
 291 153 lineto
 292 154 lineto
 292 154 lineto
 293 152 lineto
 293 152 lineto
 294 151 lineto
 295 149 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

96 148 1 Ci
97 148 1 Ci
97 148 1 Ci
98 150 1 Ci
98 153 1 Ci
99 156 1 Ci
99 153 1 Ci
99 150 1 Ci
100 148 1 Ci
100 148 1 Ci
100 151 1 Ci
101 155 1 Ci
101 155 1 Ci
102 151 1 Ci
102 146 1 Ci
102 143 1 Ci
103 141 1 Ci
103 139 1 Ci
104 138 1 Ci
104 138 1 Ci
104 139 1 Ci
105 142 1 Ci
105 146 1 Ci
106 149 1 Ci
106 152 1 Ci
106 153 1 Ci
107 152 1 Ci
107 149 1 Ci
108 145 1 Ci
108 141 1 Ci
108 138 1 Ci
109 136 1 Ci
109 136 1 Ci
110 138 1 Ci
110 139 1 Ci
111 140 1 Ci
111 141 1 Ci
112 143 1 Ci
112 146 1 Ci
112 149 1 Ci
113 152 1 Ci
113 154 1 Ci
114 155 1 Ci
114 154 1 Ci
114 151 1 Ci
115 147 1 Ci
115 144 1 Ci
116 142 1 Ci
116 143 1 Ci
116 147 1 Ci
117 152 1 Ci
117 156 1 Ci
118 152 1 Ci
118 149 1 Ci
118 149 1 Ci
119 147 1 Ci
119 139 1 Ci
120 129 1 Ci
120 119 1 Ci
120 112 1 Ci
121 111 1 Ci
121 116 1 Ci
122 125 1 Ci
122 137 1 Ci
122 140 1 Ci
123 132 1 Ci
123 122 1 Ci
124 116 1 Ci
124 115 1 Ci
124 117 1 Ci
125 121 1 Ci
125 124 1 Ci
126 128 1 Ci
126 133 1 Ci
126 139 1 Ci
127 145 1 Ci
127 149 1 Ci
128 147 1 Ci
128 143 1 Ci
128 138 1 Ci
129 133 1 Ci
129 128 1 Ci
130 126 1 Ci
130 128 1 Ci
130 135 1 Ci
131 145 1 Ci
131 144 1 Ci
132 131 1 Ci
132 118 1 Ci
132 110 1 Ci
133 109 1 Ci
133 114 1 Ci
134 123 1 Ci
134 134 1 Ci
134 143 1 Ci
135 147 1 Ci
135 146 1 Ci
136 141 1 Ci
136 135 1 Ci
136 129 1 Ci
137 127 1 Ci
137 129 1 Ci
138 133 1 Ci
138 136 1 Ci
138 133 1 Ci
139 127 1 Ci
139 122 1 Ci
140 121 1 Ci
140 123 1 Ci
140 126 1 Ci
141 127 1 Ci
141 125 1 Ci
142 123 1 Ci
142 124 1 Ci
142 126 1 Ci
143 131 1 Ci
143 138 1 Ci
144 144 1 Ci
144 145 1 Ci
144 136 1 Ci
145 124 1 Ci
145 116 1 Ci
146 114 1 Ci
146 120 1 Ci
146 134 1 Ci
147 150 1 Ci
147 138 1 Ci
148 121 1 Ci
148 111 1 Ci
148 111 1 Ci
149 121 1 Ci
149 135 1 Ci
150 134 1 Ci
150 118 1 Ci
150 105 1 Ci
151 103 1 Ci
151 111 1 Ci
152 122 1 Ci
152 118 1 Ci
152 97 1 Ci
153 75 1 Ci
153 62 1 Ci
154 61 1 Ci
154 72 1 Ci
154 93 1 Ci
155 118 1 Ci
155 142 1 Ci
156 140 1 Ci
156 126 1 Ci
156 120 1 Ci
157 122 1 Ci
157 129 1 Ci
158 138 1 Ci
158 140 1 Ci
158 134 1 Ci
159 127 1 Ci
159 124 1 Ci
160 126 1 Ci
160 132 1 Ci
160 141 1 Ci
161 151 1 Ci
161 149 1 Ci
162 139 1 Ci
162 132 1 Ci
162 130 1 Ci
163 131 1 Ci
163 135 1 Ci
164 138 1 Ci
164 134 1 Ci
165 131 1 Ci
165 131 1 Ci
166 134 1 Ci
166 139 1 Ci
166 143 1 Ci
167 142 1 Ci
167 137 1 Ci
168 133 1 Ci
168 130 1 Ci
168 127 1 Ci
169 123 1 Ci
169 119 1 Ci
170 115 1 Ci
170 121 1 Ci
171 132 1 Ci
171 145 1 Ci
172 139 1 Ci
172 121 1 Ci
172 105 1 Ci
173 94 1 Ci
173 91 1 Ci
174 96 1 Ci
174 108 1 Ci
174 125 1 Ci
175 144 1 Ci
175 153 1 Ci
176 142 1 Ci
176 137 1 Ci
176 138 1 Ci
177 145 1 Ci
177 146 1 Ci
178 135 1 Ci
178 120 1 Ci
178 107 1 Ci
179 98 1 Ci
179 93 1 Ci
180 92 1 Ci
180 95 1 Ci
180 100 1 Ci
181 106 1 Ci
181 114 1 Ci
182 122 1 Ci
182 129 1 Ci
182 135 1 Ci
183 140 1 Ci
183 145 1 Ci
184 147 1 Ci
184 146 1 Ci
184 141 1 Ci
185 135 1 Ci
185 132 1 Ci
186 131 1 Ci
186 133 1 Ci
186 138 1 Ci
187 145 1 Ci
187 150 1 Ci
188 151 1 Ci
188 150 1 Ci
188 148 1 Ci
189 146 1 Ci
189 142 1 Ci
190 138 1 Ci
190 136 1 Ci
190 134 1 Ci
191 134 1 Ci
192 136 1 Ci
193 138 1 Ci
193 139 1 Ci
194 139 1 Ci
194 136 1 Ci
194 135 1 Ci
195 136 1 Ci
195 139 1 Ci
196 146 1 Ci
196 153 1 Ci
196 154 1 Ci
197 149 1 Ci
197 148 1 Ci
197 150 1 Ci
198 145 1 Ci
199 138 1 Ci
199 133 1 Ci
199 132 1 Ci
200 134 1 Ci
200 140 1 Ci
201 147 1 Ci
201 153 1 Ci
201 155 1 Ci
202 154 1 Ci
202 151 1 Ci
203 144 1 Ci
203 136 1 Ci
203 128 1 Ci
204 123 1 Ci
204 123 1 Ci
205 127 1 Ci
205 135 1 Ci
205 143 1 Ci
206 147 1 Ci
206 143 1 Ci
207 138 1 Ci
207 137 1 Ci
207 137 1 Ci
208 135 1 Ci
209 130 1 Ci
209 125 1 Ci
209 119 1 Ci
210 114 1 Ci
210 111 1 Ci
211 116 1 Ci
211 125 1 Ci
212 135 1 Ci
212 138 1 Ci
213 129 1 Ci
213 118 1 Ci
213 112 1 Ci
214 116 1 Ci
215 123 1 Ci
215 125 1 Ci
215 120 1 Ci
216 114 1 Ci
216 111 1 Ci
217 114 1 Ci
217 123 1 Ci
217 136 1 Ci
218 152 1 Ci
218 146 1 Ci
219 132 1 Ci
219 121 1 Ci
219 114 1 Ci
220 111 1 Ci
220 111 1 Ci
221 114 1 Ci
221 119 1 Ci
221 125 1 Ci
222 129 1 Ci
222 131 1 Ci
223 132 1 Ci
223 132 1 Ci
223 130 1 Ci
224 126 1 Ci
224 121 1 Ci
225 116 1 Ci
225 113 1 Ci
225 113 1 Ci
226 116 1 Ci
226 121 1 Ci
227 126 1 Ci
227 131 1 Ci
227 134 1 Ci
228 138 1 Ci
228 140 1 Ci
229 139 1 Ci
229 131 1 Ci
229 121 1 Ci
230 110 1 Ci
230 101 1 Ci
231 96 1 Ci
231 95 1 Ci
231 100 1 Ci
232 108 1 Ci
232 120 1 Ci
233 131 1 Ci
233 138 1 Ci
233 135 1 Ci
234 126 1 Ci
234 118 1 Ci
235 112 1 Ci
235 109 1 Ci
235 111 1 Ci
236 116 1 Ci
236 122 1 Ci
237 124 1 Ci
237 120 1 Ci
237 112 1 Ci
238 104 1 Ci
238 97 1 Ci
239 94 1 Ci
239 93 1 Ci
239 96 1 Ci
240 101 1 Ci
240 110 1 Ci
241 119 1 Ci
241 125 1 Ci
242 121 1 Ci
242 118 1 Ci
243 120 1 Ci
243 125 1 Ci
243 134 1 Ci
244 138 1 Ci
244 134 1 Ci
245 127 1 Ci
245 122 1 Ci
245 122 1 Ci
246 128 1 Ci
246 137 1 Ci
247 148 1 Ci
247 156 1 Ci
247 145 1 Ci
248 136 1 Ci
248 128 1 Ci
249 122 1 Ci
249 116 1 Ci
249 111 1 Ci
250 108 1 Ci
250 105 1 Ci
251 109 1 Ci
251 115 1 Ci
252 122 1 Ci
252 126 1 Ci
253 123 1 Ci
253 118 1 Ci
253 114 1 Ci
254 114 1 Ci
254 119 1 Ci
255 128 1 Ci
255 134 1 Ci
255 133 1 Ci
256 129 1 Ci
256 127 1 Ci
257 131 1 Ci
257 139 1 Ci
257 149 1 Ci
258 153 1 Ci
258 146 1 Ci
259 142 1 Ci
259 144 1 Ci
259 150 1 Ci
260 152 1 Ci
260 143 1 Ci
261 134 1 Ci
261 129 1 Ci
261 128 1 Ci
262 132 1 Ci
262 138 1 Ci
263 145 1 Ci
263 152 1 Ci
263 155 1 Ci
264 155 1 Ci
264 157 1 Ci
265 155 1 Ci
265 152 1 Ci
265 149 1 Ci
266 148 1 Ci
266 149 1 Ci
267 150 1 Ci
267 152 1 Ci
267 151 1 Ci
268 149 1 Ci
268 148 1 Ci
269 148 1 Ci
269 148 1 Ci
269 149 1 Ci
270 149 1 Ci
271 150 1 Ci
271 151 1 Ci
272 152 1 Ci
272 153 1 Ci
273 152 1 Ci
273 151 1 Ci
274 149 1 Ci
274 148 1 Ci
275 148 1 Ci
275 148 1 Ci
276 148 1 Ci
277 148 1 Ci
277 147 1 Ci
278 147 1 Ci
278 147 1 Ci
279 148 1 Ci
279 150 1 Ci
279 151 1 Ci
280 151 1 Ci
280 150 1 Ci
281 150 1 Ci
281 149 1 Ci
282 150 1 Ci
283 149 1 Ci
284 150 1 Ci
285 148 1 Ci
285 147 1 Ci
286 147 1 Ci
287 149 1 Ci
287 152 1 Ci
287 154 1 Ci
288 156 1 Ci
288 155 1 Ci
289 155 1 Ci
289 154 1 Ci
290 153 1 Ci
290 152 1 Ci
291 152 1 Ci
291 152 1 Ci
291 153 1 Ci
292 154 1 Ci
292 154 1 Ci
293 152 1 Ci
293 152 1 Ci
294 151 1 Ci
295 149 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 350 33 Box Fill

0 33 48 133 Box Fill

344 33 6 133 Box Fill

0 166 350 34 Box Fill

0.898039 0.898039 0.898039 SetBgColor
46 166 300 2 Box Fill

344 31 2 137 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 46 168 moveto
46 31 lineto
346 31 lineto
344 33 lineto
48 33 lineto
48 166 lineto
46 168 lineto
46 168  lineto closepath Fill
90 17 0 196 14 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+35, +72\)) 90 0 13 DrawAdjText
EndText
40 17 0 0 98 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.1) 36 2 13 DrawAdjText
EndText
49 17 0 56 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.05) 45 2 13 DrawAdjText
EndText
13 17 0 126 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
40 17 0 196 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.05) 36 2 13 DrawAdjText
EndText
31 17 0 266 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
56 171 336 171 LS
91 171 91 176 LS
56 171 56 179 LS
161 171 161 176 LS
126 171 126 179 LS
231 171 231 176 LS
196 171 196 179 LS
301 171 301 176 LS
266 171 266 179 LS
336 171 336 179 LS
13 17 0 329 181 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
22 17 0 22 158 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(20) 18 2 13 DrawAdjText
EndText
22 17 0 22 134 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(40) 18 2 13 DrawAdjText
EndText
22 17 0 22 111 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(60) 18 2 13 DrawAdjText
EndText
22 17 0 22 87 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(80) 18 2 13 DrawAdjText
EndText
31 17 0 17 64 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(100) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
43 158 43 41 LS
43 146 38 146 LS
43 158 35 158 LS
43 122 38 122 LS
43 134 35 134 LS
43 99 38 99 LS
43 111 35 111 LS
43 76 38 76 LS
43 87 35 87 LS
43 52 38 52 LS
43 64 35 64 LS
43 41 35 41 LS
showpage
%Trailer
grestore
end
%EOF
%%Page:
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 302 787 309 791
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Tue Dec 19 17:15:26 2000)
%%Title: (/tmp/4.llDataPrint)
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Arrow
/Ar {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
					% b2 0 h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    neg					% -h2 b2
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

% Transform coordinate system to use X11 coordinates

% 1. Flip y-axis over by reversing the scale,
% 2. Translate the origin to the other side of the page,
%    making the origin the upper left corner
0.757382 -0.755721 scale
0 -1046 translate

% User defined page layout

% Set color level
/CL 2 def

% Set origin
400 0 translate


% Setting graph scale factor
 0.0228571 0.0228571 scale

%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
46 31 301 138 Box Fill

gsave clip


% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

96 127 3 Ci
97 129 3 Ci
97 134 3 Ci
97 144 3 Ci
98 56 3 Ci
98 63 3 Ci
99 67 3 Ci
99 70 3 Ci
99 74 3 Ci
100 78 3 Ci
100 84 3 Ci
100 91 3 Ci
101 97 3 Ci
101 100 3 Ci
102 94 3 Ci
102 74 3 Ci
102 69 3 Ci
103 68 3 Ci
103 68 3 Ci
104 68 3 Ci
104 68 3 Ci
105 129 3 Ci
106 120 3 Ci
106 119 3 Ci
107 117 3 Ci
107 117 3 Ci
108 116 3 Ci
108 63 3 Ci
108 62 3 Ci
109 60 3 Ci
109 57 3 Ci
110 55 3 Ci
110 51 3 Ci
110 147 3 Ci
111 142 3 Ci
111 136 3 Ci
112 133 3 Ci
112 134 3 Ci
112 137 3 Ci
113 143 3 Ci
113 147 3 Ci
114 50 3 Ci
114 53 3 Ci
114 56 3 Ci
115 59 3 Ci
115 63 3 Ci
116 70 3 Ci
116 80 3 Ci
116 88 3 Ci
117 94 3 Ci
117 98 3 Ci
118 103 3 Ci
118 108 3 Ci
118 114 3 Ci
119 119 3 Ci
119 122 3 Ci
120 122 3 Ci
120 120 3 Ci
121 119 3 Ci
121 117 3 Ci
122 116 3 Ci
122 115 3 Ci
122 114 3 Ci
123 112 3 Ci
123 108 3 Ci
124 99 3 Ci
124 89 3 Ci
124 85 3 Ci
125 84 3 Ci
125 84 3 Ci
126 83 3 Ci
126 82 3 Ci
127 79 3 Ci
127 73 3 Ci
128 66 3 Ci
128 62 3 Ci
128 60 3 Ci
129 61 3 Ci
129 63 3 Ci
130 64 3 Ci
130 65 3 Ci
130 65 3 Ci
131 63 3 Ci
131 60 3 Ci
132 58 3 Ci
132 56 3 Ci
132 55 3 Ci
133 54 3 Ci
134 55 3 Ci
134 95 3 Ci
134 97 3 Ci
135 95 3 Ci
135 87 3 Ci
136 68 3 Ci
136 59 3 Ci
136 55 3 Ci
137 52 3 Ci
137 147 3 Ci
138 140 3 Ci
138 130 3 Ci
138 123 3 Ci
139 120 3 Ci
139 118 3 Ci
140 117 3 Ci
140 116 3 Ci
140 115 3 Ci
141 113 3 Ci
141 88 3 Ci
142 70 3 Ci
142 67 3 Ci
142 62 3 Ci
143 55 3 Ci
143 49 3 Ci
144 147 3 Ci
144 147 3 Ci
144 149 3 Ci
145 51 3 Ci
145 55 3 Ci
146 62 3 Ci
146 71 3 Ci
146 82 3 Ci
147 89 3 Ci
147 94 3 Ci
148 98 3 Ci
148 102 3 Ci
148 105 3 Ci
149 108 3 Ci
149 111 3 Ci
150 114 3 Ci
150 109 3 Ci
150 84 3 Ci
151 83 3 Ci
151 84 3 Ci
152 86 3 Ci
152 87 3 Ci
152 88 3 Ci
153 76 3 Ci
154 49 3 Ci
154 149 3 Ci
154 49 3 Ci
155 51 3 Ci
155 53 3 Ci
156 58 3 Ci
156 68 3 Ci
156 79 3 Ci
157 84 3 Ci
157 86 3 Ci
158 85 3 Ci
158 81 3 Ci
158 76 3 Ci
159 70 3 Ci
159 67 3 Ci
160 66 3 Ci
160 67 3 Ci
160 77 3 Ci
161 111 3 Ci
161 117 3 Ci
162 124 3 Ci
162 135 3 Ci
162 145 3 Ci
163 51 3 Ci
163 55 3 Ci
164 58 3 Ci
164 62 3 Ci
164 70 3 Ci
165 86 3 Ci
165 96 3 Ci
166 100 3 Ci
166 102 3 Ci
166 102 3 Ci
167 102 3 Ci
167 100 3 Ci
168 97 3 Ci
168 90 3 Ci
168 55 3 Ci
169 136 3 Ci
169 132 3 Ci
170 130 3 Ci
170 130 3 Ci
170 130 3 Ci
171 131 3 Ci
171 133 3 Ci
172 137 3 Ci
172 147 3 Ci
172 57 3 Ci
173 62 3 Ci
173 64 3 Ci
174 60 3 Ci
174 56 3 Ci
175 51 3 Ci
175 147 3 Ci
176 145 3 Ci
176 144 3 Ci
176 143 3 Ci
177 143 3 Ci
177 52 3 Ci
178 89 3 Ci
178 90 3 Ci
178 90 3 Ci
179 90 3 Ci
180 89 3 Ci
180 87 3 Ci
180 85 3 Ci
181 83 3 Ci
181 81 3 Ci
182 80 3 Ci
182 79 3 Ci
182 75 3 Ci
183 62 3 Ci
183 54 3 Ci
184 53 3 Ci
184 54 3 Ci
184 56 3 Ci
185 59 3 Ci
185 63 3 Ci
186 68 3 Ci
186 73 3 Ci
186 79 3 Ci
187 86 3 Ci
187 95 3 Ci
188 104 3 Ci
188 111 3 Ci
188 115 3 Ci
189 118 3 Ci
189 120 3 Ci
190 121 3 Ci
190 122 3 Ci
191 121 3 Ci
192 67 3 Ci
192 65 3 Ci
192 63 3 Ci
193 60 3 Ci
193 57 3 Ci
194 53 3 Ci
194 118 3 Ci
194 109 3 Ci
195 107 3 Ci
195 107 3 Ci
196 109 3 Ci
196 110 3 Ci
197 113 3 Ci
197 117 3 Ci
197 123 3 Ci
198 132 3 Ci
198 143 3 Ci
199 55 3 Ci
199 64 3 Ci
199 70 3 Ci
200 73 3 Ci
200 75 3 Ci
201 72 3 Ci
201 66 3 Ci
202 56 3 Ci
202 50 3 Ci
203 148 3 Ci
203 147 3 Ci
203 148 3 Ci
204 50 3 Ci
204 53 3 Ci
205 57 3 Ci
205 61 3 Ci
205 62 3 Ci
206 59 3 Ci
206 51 3 Ci
207 142 3 Ci
207 134 3 Ci
207 127 3 Ci
208 119 3 Ci
208 112 3 Ci
209 107 3 Ci
209 104 3 Ci
209 103 3 Ci
210 102 3 Ci
210 101 3 Ci
211 99 3 Ci
211 97 3 Ci
212 93 3 Ci
212 88 3 Ci
213 82 3 Ci
213 76 3 Ci
213 70 3 Ci
214 65 3 Ci
214 60 3 Ci
215 56 3 Ci
215 53 3 Ci
215 51 3 Ci
216 49 3 Ci
216 148 3 Ci
217 147 3 Ci
217 147 3 Ci
217 52 3 Ci
218 74 3 Ci
218 78 3 Ci
219 75 3 Ci
219 70 3 Ci
219 65 3 Ci
220 61 3 Ci
220 57 3 Ci
221 54 3 Ci
221 50 3 Ci
221 143 3 Ci
222 132 3 Ci
222 123 3 Ci
223 119 3 Ci
223 119 3 Ci
223 122 3 Ci
224 130 3 Ci
224 139 3 Ci
225 145 3 Ci
225 148 3 Ci
225 50 3 Ci
226 53 3 Ci
226 55 3 Ci
227 58 3 Ci
227 60 3 Ci
227 60 3 Ci
228 59 3 Ci
228 58 3 Ci
229 58 3 Ci
229 57 3 Ci
229 58 3 Ci
230 60 3 Ci
230 65 3 Ci
231 75 3 Ci
231 84 3 Ci
231 87 3 Ci
232 86 3 Ci
232 82 3 Ci
233 78 3 Ci
233 76 3 Ci
233 75 3 Ci
234 75 3 Ci
235 75 3 Ci
235 76 3 Ci
236 77 3 Ci
237 79 3 Ci
237 84 3 Ci
237 114 3 Ci
238 121 3 Ci
238 122 3 Ci
239 121 3 Ci
239 118 3 Ci
240 112 3 Ci
240 101 3 Ci
241 92 3 Ci
241 88 3 Ci
241 87 3 Ci
242 90 3 Ci
243 95 3 Ci
243 104 3 Ci
243 115 3 Ci
244 121 3 Ci
244 125 3 Ci
245 128 3 Ci
245 131 3 Ci
245 134 3 Ci
246 138 3 Ci
246 143 3 Ci
247 50 3 Ci
247 60 3 Ci
247 67 3 Ci
248 71 3 Ci
248 73 3 Ci
249 72 3 Ci
249 71 3 Ci
250 71 3 Ci
250 70 3 Ci
251 69 3 Ci
252 67 3 Ci
252 62 3 Ci
253 56 3 Ci
253 53 3 Ci
253 50 3 Ci
254 148 3 Ci
254 147 3 Ci
255 142 3 Ci
255 118 3 Ci
255 105 3 Ci
256 102 3 Ci
256 101 3 Ci
257 100 3 Ci
257 99 3 Ci
257 97 3 Ci
258 66 3 Ci
258 51 3 Ci
259 149 3 Ci
259 148 3 Ci
259 146 3 Ci
260 144 3 Ci
260 141 3 Ci
261 136 3 Ci
261 127 3 Ci
261 115 3 Ci
262 106 3 Ci
262 99 3 Ci
263 93 3 Ci
263 89 3 Ci
263 86 3 Ci
264 84 3 Ci
264 84 3 Ci
265 84 3 Ci
265 85 3 Ci
265 86 3 Ci
266 81 3 Ci
267 73 3 Ci
267 65 3 Ci
267 62 3 Ci
268 60 3 Ci
268 58 3 Ci
269 120 3 Ci
269 112 3 Ci
269 112 3 Ci
270 113 3 Ci
271 114 3 Ci
271 117 3 Ci
271 122 3 Ci
272 132 3 Ci
272 140 3 Ci
273 142 3 Ci
273 138 3 Ci
273 125 3 Ci
274 115 3 Ci
274 111 3 Ci
275 108 3 Ci
275 106 3 Ci
275 103 3 Ci
276 97 3 Ci
276 90 3 Ci
277 85 3 Ci
277 82 3 Ci
277 81 3 Ci
278 82 3 Ci
279 83 3 Ci
279 78 3 Ci
280 58 3 Ci
280 52 3 Ci
281 52 3 Ci
281 52 3 Ci
281 52 3 Ci
282 147 3 Ci
283 110 3 Ci
283 108 3 Ci
283 108 3 Ci
284 56 3 Ci
285 57 3 Ci
285 57 3 Ci
286 55 3 Ci
287 53 3 Ci
287 51 3 Ci
287 49 3 Ci
288 148 3 Ci
288 149 3 Ci
289 50 3 Ci
289 53 3 Ci
289 56 3 Ci
290 60 3 Ci
290 68 3 Ci
291 82 3 Ci
291 92 3 Ci
291 96 3 Ci
292 98 3 Ci
292 98 3 Ci
292 97 3 Ci
293 95 3 Ci
293 93 3 Ci
294 91 3 Ci
294 106 3 Ci
294 123 3 Ci
295 125 3 Ci

% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 96 148 moveto
 97 150 lineto
 97 151 lineto
 98 150 lineto
 98 146 lineto
 99 143 lineto
 99 142 lineto
 99 143 lineto
 100 145 lineto
 100 148 lineto
 100 149 lineto
 101 150 lineto
 101 152 lineto
 102 154 lineto
 102 153 lineto
 102 148 lineto
 103 144 lineto
 103 140 lineto
 104 140 lineto
 104 142 lineto
 104 146 lineto
 105 152 lineto
 105 157 lineto
 106 151 lineto
 106 148 lineto
 106 147 lineto
 107 148 lineto
 107 151 lineto
 108 155 lineto
 108 156 lineto
 108 151 lineto
 109 148 lineto
 109 146 lineto
 110 145 lineto
 110 146 lineto
 110 147 lineto
 111 148 lineto
 111 148 lineto
 112 148 lineto
 112 147 lineto
 113 144 lineto
 113 140 lineto
 114 135 lineto
 114 131 lineto
 114 130 lineto
 115 131 lineto
 115 135 lineto
 116 139 lineto
 116 140 lineto
 116 137 lineto
 117 134 lineto
 117 133 lineto
 118 133 lineto
 118 135 lineto
 119 132 lineto
 119 128 lineto
 120 124 lineto
 120 121 lineto
 120 118 lineto
 121 115 lineto
 121 113 lineto
 122 115 lineto
 122 121 lineto
 123 130 lineto
 123 139 lineto
 124 143 lineto
 124 140 lineto
 124 132 lineto
 125 126 lineto
 125 122 lineto
 126 122 lineto
 126 124 lineto
 126 130 lineto
 127 136 lineto
 127 141 lineto
 128 141 lineto
 128 139 lineto
 128 137 lineto
 129 137 lineto
 129 137 lineto
 130 137 lineto
 130 136 lineto
 131 134 lineto
 131 132 lineto
 132 131 lineto
 132 130 lineto
 132 132 lineto
 133 137 lineto
 133 144 lineto
 134 153 lineto
 134 155 lineto
 134 151 lineto
 135 150 lineto
 135 152 lineto
 136 151 lineto
 136 146 lineto
 136 141 lineto
 137 138 lineto
 137 139 lineto
 138 141 lineto
 138 138 lineto
 138 132 lineto
 139 125 lineto
 139 121 lineto
 140 122 lineto
 140 128 lineto
 140 138 lineto
 141 148 lineto
 141 155 lineto
 142 150 lineto
 142 146 lineto
 142 146 lineto
 143 144 lineto
 143 140 lineto
 144 134 lineto
 144 128 lineto
 144 124 lineto
 145 123 lineto
 145 125 lineto
 146 130 lineto
 146 132 lineto
 146 128 lineto
 147 120 lineto
 147 112 lineto
 148 106 lineto
 148 106 lineto
 148 110 lineto
 149 117 lineto
 149 128 lineto
 150 139 lineto
 150 151 lineto
 150 148 lineto
 151 137 lineto
 151 128 lineto
 152 122 lineto
 152 122 lineto
 152 128 lineto
 153 140 lineto
 153 153 lineto
 154 143 lineto
 154 130 lineto
 154 123 lineto
 155 121 lineto
 155 126 lineto
 156 135 lineto
 156 140 lineto
 156 139 lineto
 157 134 lineto
 157 132 lineto
 158 134 lineto
 158 137 lineto
 158 139 lineto
 159 141 lineto
 160 144 lineto
 160 149 lineto
 160 155 lineto
 161 153 lineto
 161 150 lineto
 162 149 lineto
 162 148 lineto
 162 144 lineto
 163 138 lineto
 163 134 lineto
 164 137 lineto
 164 144 lineto
 165 145 lineto
 165 137 lineto
 166 129 lineto
 166 124 lineto
 166 125 lineto
 167 130 lineto
 167 137 lineto
 168 145 lineto
 168 152 lineto
 168 156 lineto
 169 149 lineto
 169 139 lineto
 170 128 lineto
 170 117 lineto
 170 111 lineto
 171 116 lineto
 172 125 lineto
 172 132 lineto
 172 129 lineto
 173 119 lineto
 173 111 lineto
 174 108 lineto
 174 108 lineto
 174 108 lineto
 175 105 lineto
 175 101 lineto
 176 99 lineto
 176 103 lineto
 176 114 lineto
 177 132 lineto
 177 153 lineto
 178 139 lineto
 178 121 lineto
 178 109 lineto
 179 105 lineto
 179 107 lineto
 180 113 lineto
 180 122 lineto
 180 129 lineto
 181 135 lineto
 181 138 lineto
 182 141 lineto
 182 145 lineto
 182 148 lineto
 183 142 lineto
 184 132 lineto
 184 122 lineto
 184 114 lineto
 185 108 lineto
 185 106 lineto
 186 108 lineto
 186 111 lineto
 187 114 lineto
 187 115 lineto
 188 110 lineto
 188 99 lineto
 188 86 lineto
 189 77 lineto
 189 74 lineto
 190 80 lineto
 190 93 lineto
 190 111 lineto
 191 132 lineto
 191 151 lineto
 192 149 lineto
 192 138 lineto
 192 132 lineto
 193 131 lineto
 193 135 lineto
 194 145 lineto
 194 151 lineto
 194 131 lineto
 195 108 lineto
 195 88 lineto
 196 74 lineto
 196 68 lineto
 196 72 lineto
 197 83 lineto
 197 98 lineto
 197 112 lineto
 198 124 lineto
 198 129 lineto
 199 127 lineto
 199 118 lineto
 199 106 lineto
 200 98 lineto
 200 95 lineto
 201 101 lineto
 201 112 lineto
 201 123 lineto
 202 123 lineto
 202 113 lineto
 203 103 lineto
 203 100 lineto
 203 104 lineto
 204 112 lineto
 204 121 lineto
 205 128 lineto
 205 133 lineto
 205 137 lineto
 206 141 lineto
 206 143 lineto
 207 143 lineto
 207 141 lineto
 207 139 lineto
 208 136 lineto
 208 131 lineto
 209 123 lineto
 209 115 lineto
 209 111 lineto
 210 110 lineto
 210 112 lineto
 211 117 lineto
 211 122 lineto
 211 128 lineto
 212 131 lineto
 212 132 lineto
 213 130 lineto
 213 126 lineto
 213 121 lineto
 214 114 lineto
 214 105 lineto
 215 96 lineto
 215 88 lineto
 215 85 lineto
 216 88 lineto
 216 98 lineto
 217 113 lineto
 217 131 lineto
 217 146 lineto
 218 148 lineto
 218 140 lineto
 219 135 lineto
 219 131 lineto
 219 127 lineto
 220 124 lineto
 220 123 lineto
 221 126 lineto
 221 132 lineto
 221 140 lineto
 222 144 lineto
 222 141 lineto
 223 139 lineto
 223 139 lineto
 223 142 lineto
 224 144 lineto
 224 142 lineto
 225 138 lineto
 225 135 lineto
 225 135 lineto
 226 136 lineto
 226 139 lineto
 227 141 lineto
 227 141 lineto
 227 140 lineto
 228 138 lineto
 228 136 lineto
 229 134 lineto
 229 134 lineto
 229 136 lineto
 230 140 lineto
 230 145 lineto
 231 148 lineto
 231 146 lineto
 231 143 lineto
 232 141 lineto
 232 137 lineto
 233 131 lineto
 233 120 lineto
 233 106 lineto
 234 91 lineto
 234 76 lineto
 235 64 lineto
 235 58 lineto
 235 59 lineto
 236 68 lineto
 236 86 lineto
 237 111 lineto
 237 138 lineto
 237 141 lineto
 238 119 lineto
 238 102 lineto
 239 95 lineto
 239 98 lineto
 239 109 lineto
 240 123 lineto
 240 128 lineto
 241 119 lineto
 241 107 lineto
 241 100 lineto
 242 101 lineto
 242 109 lineto
 243 120 lineto
 243 127 lineto
 243 124 lineto
 244 115 lineto
 244 108 lineto
 245 105 lineto
 245 108 lineto
 245 114 lineto
 246 123 lineto
 246 132 lineto
 247 138 lineto
 247 140 lineto
 247 139 lineto
 248 136 lineto
 248 135 lineto
 249 134 lineto
 249 132 lineto
 250 132 lineto
 250 132 lineto
 251 132 lineto
 251 134 lineto
 251 136 lineto
 252 138 lineto
 252 139 lineto
 253 137 lineto
 253 134 lineto
 253 131 lineto
 254 137 lineto
 255 146 lineto
 255 151 lineto
 255 140 lineto
 256 128 lineto
 256 121 lineto
 257 128 lineto
 257 141 lineto
 258 154 lineto
 258 137 lineto
 259 121 lineto
 259 111 lineto
 259 108 lineto
 260 112 lineto
 260 120 lineto
 261 130 lineto
 261 138 lineto
 261 140 lineto
 262 137 lineto
 262 134 lineto
 263 131 lineto
 263 129 lineto
 263 128 lineto
 264 130 lineto
 265 133 lineto
 265 137 lineto
 265 141 lineto
 266 145 lineto
 266 148 lineto
 267 150 lineto
 267 148 lineto
 267 147 lineto
 268 148 lineto
 268 152 lineto
 269 156 lineto
 269 148 lineto
 269 141 lineto
 270 136 lineto
 270 135 lineto
 271 137 lineto
 271 142 lineto
 271 147 lineto
 272 149 lineto
 272 149 lineto
 273 149 lineto
 273 151 lineto
 273 151 lineto
 274 147 lineto
 274 143 lineto
 275 140 lineto
 275 141 lineto
 276 143 lineto
 276 143 lineto
 277 142 lineto
 277 140 lineto
 277 140 lineto
 278 141 lineto
 278 144 lineto
 279 147 lineto
 279 151 lineto
 279 154 lineto
 280 152 lineto
 281 150 lineto
 281 150 lineto
 282 153 lineto
 282 156 lineto
 283 155 lineto
 283 153 lineto
 283 153 lineto
 284 155 lineto
 284 157 lineto
 285 153 lineto
 285 150 lineto
 285 147 lineto
 286 145 lineto
 286 145 lineto
 287 146 lineto
 287 147 lineto
 288 148 lineto
 289 148 lineto
 289 149 lineto
 290 151 lineto
 290 153 lineto
 291 153 lineto
 291 152 lineto
 291 149 lineto
 292 148 lineto
 292 148 lineto
 292 150 lineto
 293 152 lineto
 293 153 lineto
 294 155 lineto
 294 157 lineto
 294 155 lineto
 295 152 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

96 148 1 Ci
97 150 1 Ci
97 151 1 Ci
98 150 1 Ci
98 146 1 Ci
99 143 1 Ci
99 142 1 Ci
99 143 1 Ci
100 145 1 Ci
100 148 1 Ci
100 149 1 Ci
101 150 1 Ci
101 152 1 Ci
102 154 1 Ci
102 153 1 Ci
102 148 1 Ci
103 144 1 Ci
103 140 1 Ci
104 140 1 Ci
104 142 1 Ci
104 146 1 Ci
105 152 1 Ci
105 157 1 Ci
106 151 1 Ci
106 148 1 Ci
106 147 1 Ci
107 148 1 Ci
107 151 1 Ci
108 155 1 Ci
108 156 1 Ci
108 151 1 Ci
109 148 1 Ci
109 146 1 Ci
110 145 1 Ci
110 146 1 Ci
110 147 1 Ci
111 148 1 Ci
111 148 1 Ci
112 148 1 Ci
112 147 1 Ci
113 144 1 Ci
113 140 1 Ci
114 135 1 Ci
114 131 1 Ci
114 130 1 Ci
115 131 1 Ci
115 135 1 Ci
116 139 1 Ci
116 140 1 Ci
116 137 1 Ci
117 134 1 Ci
117 133 1 Ci
118 133 1 Ci
118 135 1 Ci
119 132 1 Ci
119 128 1 Ci
120 124 1 Ci
120 121 1 Ci
120 118 1 Ci
121 115 1 Ci
121 113 1 Ci
122 115 1 Ci
122 121 1 Ci
123 130 1 Ci
123 139 1 Ci
124 143 1 Ci
124 140 1 Ci
124 132 1 Ci
125 126 1 Ci
125 122 1 Ci
126 122 1 Ci
126 124 1 Ci
126 130 1 Ci
127 136 1 Ci
127 141 1 Ci
128 141 1 Ci
128 139 1 Ci
128 137 1 Ci
129 137 1 Ci
129 137 1 Ci
130 137 1 Ci
130 136 1 Ci
131 134 1 Ci
131 132 1 Ci
132 131 1 Ci
132 130 1 Ci
132 132 1 Ci
133 137 1 Ci
133 144 1 Ci
134 153 1 Ci
134 155 1 Ci
134 151 1 Ci
135 150 1 Ci
135 152 1 Ci
136 151 1 Ci
136 146 1 Ci
136 141 1 Ci
137 138 1 Ci
137 139 1 Ci
138 141 1 Ci
138 138 1 Ci
138 132 1 Ci
139 125 1 Ci
139 121 1 Ci
140 122 1 Ci
140 128 1 Ci
140 138 1 Ci
141 148 1 Ci
141 155 1 Ci
142 150 1 Ci
142 146 1 Ci
142 146 1 Ci
143 144 1 Ci
143 140 1 Ci
144 134 1 Ci
144 128 1 Ci
144 124 1 Ci
145 123 1 Ci
145 125 1 Ci
146 130 1 Ci
146 132 1 Ci
146 128 1 Ci
147 120 1 Ci
147 112 1 Ci
148 106 1 Ci
148 106 1 Ci
148 110 1 Ci
149 117 1 Ci
149 128 1 Ci
150 139 1 Ci
150 151 1 Ci
150 148 1 Ci
151 137 1 Ci
151 128 1 Ci
152 122 1 Ci
152 122 1 Ci
152 128 1 Ci
153 140 1 Ci
153 153 1 Ci
154 143 1 Ci
154 130 1 Ci
154 123 1 Ci
155 121 1 Ci
155 126 1 Ci
156 135 1 Ci
156 140 1 Ci
156 139 1 Ci
157 134 1 Ci
157 132 1 Ci
158 134 1 Ci
158 137 1 Ci
158 139 1 Ci
159 141 1 Ci
160 144 1 Ci
160 149 1 Ci
160 155 1 Ci
161 153 1 Ci
161 150 1 Ci
162 149 1 Ci
162 148 1 Ci
162 144 1 Ci
163 138 1 Ci
163 134 1 Ci
164 137 1 Ci
164 144 1 Ci
165 145 1 Ci
165 137 1 Ci
166 129 1 Ci
166 124 1 Ci
166 125 1 Ci
167 130 1 Ci
167 137 1 Ci
168 145 1 Ci
168 152 1 Ci
168 156 1 Ci
169 149 1 Ci
169 139 1 Ci
170 128 1 Ci
170 117 1 Ci
170 111 1 Ci
171 116 1 Ci
172 125 1 Ci
172 132 1 Ci
172 129 1 Ci
173 119 1 Ci
173 111 1 Ci
174 108 1 Ci
174 108 1 Ci
174 108 1 Ci
175 105 1 Ci
175 101 1 Ci
176 99 1 Ci
176 103 1 Ci
176 114 1 Ci
177 132 1 Ci
177 153 1 Ci
178 139 1 Ci
178 121 1 Ci
178 109 1 Ci
179 105 1 Ci
179 107 1 Ci
180 113 1 Ci
180 122 1 Ci
180 129 1 Ci
181 135 1 Ci
181 138 1 Ci
182 141 1 Ci
182 145 1 Ci
182 148 1 Ci
183 142 1 Ci
184 132 1 Ci
184 122 1 Ci
184 114 1 Ci
185 108 1 Ci
185 106 1 Ci
186 108 1 Ci
186 111 1 Ci
187 114 1 Ci
187 115 1 Ci
188 110 1 Ci
188 99 1 Ci
188 86 1 Ci
189 77 1 Ci
189 74 1 Ci
190 80 1 Ci
190 93 1 Ci
190 111 1 Ci
191 132 1 Ci
191 151 1 Ci
192 149 1 Ci
192 138 1 Ci
192 132 1 Ci
193 131 1 Ci
193 135 1 Ci
194 145 1 Ci
194 151 1 Ci
194 131 1 Ci
195 108 1 Ci
195 88 1 Ci
196 74 1 Ci
196 68 1 Ci
196 72 1 Ci
197 83 1 Ci
197 98 1 Ci
197 112 1 Ci
198 124 1 Ci
198 129 1 Ci
199 127 1 Ci
199 118 1 Ci
199 106 1 Ci
200 98 1 Ci
200 95 1 Ci
201 101 1 Ci
201 112 1 Ci
201 123 1 Ci
202 123 1 Ci
202 113 1 Ci
203 103 1 Ci
203 100 1 Ci
203 104 1 Ci
204 112 1 Ci
204 121 1 Ci
205 128 1 Ci
205 133 1 Ci
205 137 1 Ci
206 141 1 Ci
206 143 1 Ci
207 143 1 Ci
207 141 1 Ci
207 139 1 Ci
208 136 1 Ci
208 131 1 Ci
209 123 1 Ci
209 115 1 Ci
209 111 1 Ci
210 110 1 Ci
210 112 1 Ci
211 117 1 Ci
211 122 1 Ci
211 128 1 Ci
212 131 1 Ci
212 132 1 Ci
213 130 1 Ci
213 126 1 Ci
213 121 1 Ci
214 114 1 Ci
214 105 1 Ci
215 96 1 Ci
215 88 1 Ci
215 85 1 Ci
216 88 1 Ci
216 98 1 Ci
217 113 1 Ci
217 131 1 Ci
217 146 1 Ci
218 148 1 Ci
218 140 1 Ci
219 135 1 Ci
219 131 1 Ci
219 127 1 Ci
220 124 1 Ci
220 123 1 Ci
221 126 1 Ci
221 132 1 Ci
221 140 1 Ci
222 144 1 Ci
222 141 1 Ci
223 139 1 Ci
223 139 1 Ci
223 142 1 Ci
224 144 1 Ci
224 142 1 Ci
225 138 1 Ci
225 135 1 Ci
225 135 1 Ci
226 136 1 Ci
226 139 1 Ci
227 141 1 Ci
227 141 1 Ci
227 140 1 Ci
228 138 1 Ci
228 136 1 Ci
229 134 1 Ci
229 134 1 Ci
229 136 1 Ci
230 140 1 Ci
230 145 1 Ci
231 148 1 Ci
231 146 1 Ci
231 143 1 Ci
232 141 1 Ci
232 137 1 Ci
233 131 1 Ci
233 120 1 Ci
233 106 1 Ci
234 91 1 Ci
234 76 1 Ci
235 64 1 Ci
235 58 1 Ci
235 59 1 Ci
236 68 1 Ci
236 86 1 Ci
237 111 1 Ci
237 138 1 Ci
237 141 1 Ci
238 119 1 Ci
238 102 1 Ci
239 95 1 Ci
239 98 1 Ci
239 109 1 Ci
240 123 1 Ci
240 128 1 Ci
241 119 1 Ci
241 107 1 Ci
241 100 1 Ci
242 101 1 Ci
242 109 1 Ci
243 120 1 Ci
243 127 1 Ci
243 124 1 Ci
244 115 1 Ci
244 108 1 Ci
245 105 1 Ci
245 108 1 Ci
245 114 1 Ci
246 123 1 Ci
246 132 1 Ci
247 138 1 Ci
247 140 1 Ci
247 139 1 Ci
248 136 1 Ci
248 135 1 Ci
249 134 1 Ci
249 132 1 Ci
250 132 1 Ci
250 132 1 Ci
251 132 1 Ci
251 134 1 Ci
251 136 1 Ci
252 138 1 Ci
252 139 1 Ci
253 137 1 Ci
253 134 1 Ci
253 131 1 Ci
254 137 1 Ci
255 146 1 Ci
255 151 1 Ci
255 140 1 Ci
256 128 1 Ci
256 121 1 Ci
257 128 1 Ci
257 141 1 Ci
258 154 1 Ci
258 137 1 Ci
259 121 1 Ci
259 111 1 Ci
259 108 1 Ci
260 112 1 Ci
260 120 1 Ci
261 130 1 Ci
261 138 1 Ci
261 140 1 Ci
262 137 1 Ci
262 134 1 Ci
263 131 1 Ci
263 129 1 Ci
263 128 1 Ci
264 130 1 Ci
265 133 1 Ci
265 137 1 Ci
265 141 1 Ci
266 145 1 Ci
266 148 1 Ci
267 150 1 Ci
267 148 1 Ci
267 147 1 Ci
268 148 1 Ci
268 152 1 Ci
269 156 1 Ci
269 148 1 Ci
269 141 1 Ci
270 136 1 Ci
270 135 1 Ci
271 137 1 Ci
271 142 1 Ci
271 147 1 Ci
272 149 1 Ci
272 149 1 Ci
273 149 1 Ci
273 151 1 Ci
273 151 1 Ci
274 147 1 Ci
274 143 1 Ci
275 140 1 Ci
275 141 1 Ci
276 143 1 Ci
276 143 1 Ci
277 142 1 Ci
277 140 1 Ci
277 140 1 Ci
278 141 1 Ci
278 144 1 Ci
279 147 1 Ci
279 151 1 Ci
279 154 1 Ci
280 152 1 Ci
281 150 1 Ci
281 150 1 Ci
282 153 1 Ci
282 156 1 Ci
283 155 1 Ci
283 153 1 Ci
283 153 1 Ci
284 155 1 Ci
284 157 1 Ci
285 153 1 Ci
285 150 1 Ci
285 147 1 Ci
286 145 1 Ci
286 145 1 Ci
287 146 1 Ci
287 147 1 Ci
288 148 1 Ci
289 148 1 Ci
289 149 1 Ci
290 151 1 Ci
290 153 1 Ci
291 153 1 Ci
291 152 1 Ci
291 149 1 Ci
292 148 1 Ci
292 148 1 Ci
292 150 1 Ci
293 152 1 Ci
293 153 1 Ci
294 155 1 Ci
294 157 1 Ci
294 155 1 Ci
295 152 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 350 33 Box Fill

0 33 48 133 Box Fill

344 33 6 133 Box Fill

0 166 350 34 Box Fill

0.898039 0.898039 0.898039 SetBgColor
46 166 300 2 Box Fill

344 31 2 137 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 46 168 moveto
46 31 lineto
346 31 lineto
344 33 lineto
48 33 lineto
48 166 lineto
46 168 lineto
46 168  lineto closepath Fill
90 17 0 196 14 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+35, +74\)) 90 0 13 DrawAdjText
EndText
40 17 0 0 98 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.1) 36 2 13 DrawAdjText
EndText
49 17 0 56 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.05) 45 2 13 DrawAdjText
EndText
13 17 0 126 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
40 17 0 196 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.05) 36 2 13 DrawAdjText
EndText
31 17 0 266 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
56 171 336 171 LS
91 171 91 176 LS
56 171 56 179 LS
161 171 161 176 LS
126 171 126 179 LS
231 171 231 176 LS
196 171 196 179 LS
301 171 301 176 LS
266 171 266 179 LS
336 171 336 179 LS
13 17 0 329 181 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
22 17 0 22 158 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(20) 18 2 13 DrawAdjText
EndText
22 17 0 22 134 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(40) 18 2 13 DrawAdjText
EndText
22 17 0 22 111 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(60) 18 2 13 DrawAdjText
EndText
22 17 0 22 87 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(80) 18 2 13 DrawAdjText
EndText
31 17 0 17 64 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(100) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
43 158 43 41 LS
43 146 38 146 LS
43 158 35 158 LS
43 122 38 122 LS
43 134 35 134 LS
43 99 38 99 LS
43 111 35 111 LS
43 76 38 76 LS
43 87 35 87 LS
43 52 38 52 LS
43 64 35 64 LS
43 41 35 41 LS
showpage
%Trailer
grestore
end
%EOF
%%Page:
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 302 598 309 602
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Tue Dec 19 17:15:26 2000)
%%Title: (/tmp/5.llDataPrint)
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Arrow
/Ar {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
					% b2 0 h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    neg					% -h2 b2
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

% Transform coordinate system to use X11 coordinates

% 1. Flip y-axis over by reversing the scale,
% 2. Translate the origin to the other side of the page,
%    making the origin the upper left corner
0.757382 -0.755721 scale
0 -1046 translate

% User defined page layout

% Set color level
/CL 2 def

% Set origin
400 250 translate


% Setting graph scale factor
 0.0228571 0.0228571 scale

%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
46 31 301 138 Box Fill

gsave clip


% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

96 57 3 Ci
97 60 3 Ci
97 65 3 Ci
97 68 3 Ci
98 70 3 Ci
98 71 3 Ci
99 69 3 Ci
99 60 3 Ci
99 144 3 Ci
100 138 3 Ci
100 137 3 Ci
101 139 3 Ci
101 141 3 Ci
102 144 3 Ci
102 148 3 Ci
102 57 3 Ci
103 75 3 Ci
103 91 3 Ci
104 101 3 Ci
104 108 3 Ci
104 112 3 Ci
105 114 3 Ci
105 114 3 Ci
106 113 3 Ci
106 112 3 Ci
106 112 3 Ci
107 112 3 Ci
107 114 3 Ci
108 116 3 Ci
108 121 3 Ci
108 130 3 Ci
109 142 3 Ci
109 51 3 Ci
110 57 3 Ci
110 63 3 Ci
110 71 3 Ci
111 85 3 Ci
111 99 3 Ci
112 106 3 Ci
112 110 3 Ci
112 114 3 Ci
113 119 3 Ci
113 124 3 Ci
114 131 3 Ci
114 141 3 Ci
114 51 3 Ci
115 60 3 Ci
115 67 3 Ci
116 72 3 Ci
116 76 3 Ci
116 78 3 Ci
117 76 3 Ci
118 68 3 Ci
118 61 3 Ci
118 57 3 Ci
119 57 3 Ci
119 57 3 Ci
120 58 3 Ci
120 60 3 Ci
120 64 3 Ci
121 69 3 Ci
121 74 3 Ci
122 77 3 Ci
122 77 3 Ci
123 77 3 Ci
124 79 3 Ci
124 82 3 Ci
124 86 3 Ci
125 90 3 Ci
125 94 3 Ci
126 97 3 Ci
126 99 3 Ci
126 102 3 Ci
127 105 3 Ci
127 110 3 Ci
128 115 3 Ci
128 118 3 Ci
128 116 3 Ci
129 111 3 Ci
129 106 3 Ci
130 102 3 Ci
130 98 3 Ci
130 94 3 Ci
131 88 3 Ci
131 83 3 Ci
132 78 3 Ci
132 75 3 Ci
132 73 3 Ci
133 72 3 Ci
133 71 3 Ci
134 69 3 Ci
134 53 3 Ci
134 126 3 Ci
135 125 3 Ci
135 124 3 Ci
136 124 3 Ci
137 122 3 Ci
137 118 3 Ci
138 108 3 Ci
138 101 3 Ci
138 100 3 Ci
139 101 3 Ci
139 104 3 Ci
140 109 3 Ci
140 115 3 Ci
140 121 3 Ci
141 127 3 Ci
141 131 3 Ci
142 133 3 Ci
142 135 3 Ci
142 127 3 Ci
143 94 3 Ci
143 93 3 Ci
144 93 3 Ci
144 92 3 Ci
144 90 3 Ci
145 87 3 Ci
145 83 3 Ci
146 78 3 Ci
146 74 3 Ci
146 71 3 Ci
147 70 3 Ci
147 69 3 Ci
148 67 3 Ci
148 66 3 Ci
149 64 3 Ci
149 57 3 Ci
150 145 3 Ci
150 136 3 Ci
150 132 3 Ci
151 129 3 Ci
151 125 3 Ci
152 119 3 Ci
152 106 3 Ci
152 95 3 Ci
153 90 3 Ci
153 86 3 Ci
154 84 3 Ci
154 81 3 Ci
154 79 3 Ci
155 78 3 Ci
155 77 3 Ci
156 76 3 Ci
156 76 3 Ci
157 76 3 Ci
157 76 3 Ci
158 76 3 Ci
159 71 3 Ci
159 60 3 Ci
160 53 3 Ci
160 51 3 Ci
160 51 3 Ci
161 52 3 Ci
162 52 3 Ci
162 52 3 Ci
163 54 3 Ci
163 59 3 Ci
164 73 3 Ci
164 81 3 Ci
164 81 3 Ci
165 79 3 Ci
165 75 3 Ci
166 70 3 Ci
166 65 3 Ci
166 61 3 Ci
167 58 3 Ci
167 55 3 Ci
168 54 3 Ci
168 56 3 Ci
168 81 3 Ci
169 93 3 Ci
169 94 3 Ci
170 94 3 Ci
170 93 3 Ci
171 93 3 Ci
171 92 3 Ci
172 86 3 Ci
172 51 3 Ci
172 54 3 Ci
173 60 3 Ci
173 65 3 Ci
174 67 3 Ci
174 68 3 Ci
175 67 3 Ci
175 65 3 Ci
176 61 3 Ci
176 52 3 Ci
176 136 3 Ci
177 126 3 Ci
177 120 3 Ci
178 117 3 Ci
178 113 3 Ci
178 108 3 Ci
179 98 3 Ci
179 83 3 Ci
180 73 3 Ci
180 69 3 Ci
180 66 3 Ci
181 64 3 Ci
181 62 3 Ci
182 62 3 Ci
182 64 3 Ci
183 67 3 Ci
183 71 3 Ci
184 72 3 Ci
184 72 3 Ci
184 70 3 Ci
185 68 3 Ci
185 65 3 Ci
186 59 3 Ci
186 148 3 Ci
186 124 3 Ci
187 112 3 Ci
187 101 3 Ci
188 83 3 Ci
188 72 3 Ci
188 67 3 Ci
189 64 3 Ci
189 62 3 Ci
190 60 3 Ci
190 60 3 Ci
190 59 3 Ci
191 62 3 Ci
192 69 3 Ci
192 82 3 Ci
192 92 3 Ci
193 97 3 Ci
193 100 3 Ci
194 104 3 Ci
194 109 3 Ci
194 115 3 Ci
195 120 3 Ci
195 124 3 Ci
196 126 3 Ci
196 126 3 Ci
196 125 3 Ci
197 123 3 Ci
197 118 3 Ci
197 113 3 Ci
198 124 3 Ci
198 143 3 Ci
199 144 3 Ci
199 144 3 Ci
200 146 3 Ci
201 147 3 Ci
201 149 3 Ci
201 53 3 Ci
202 63 3 Ci
202 89 3 Ci
203 101 3 Ci
203 109 3 Ci
203 116 3 Ci
204 121 3 Ci
204 125 3 Ci
205 127 3 Ci
205 129 3 Ci
205 131 3 Ci
206 133 3 Ci
206 134 3 Ci
207 137 3 Ci
207 139 3 Ci
207 143 3 Ci
208 145 3 Ci
208 146 3 Ci
209 145 3 Ci
209 142 3 Ci
209 139 3 Ci
210 134 3 Ci
210 128 3 Ci
211 121 3 Ci
211 113 3 Ci
211 106 3 Ci
212 100 3 Ci
212 94 3 Ci
213 90 3 Ci
213 86 3 Ci
213 84 3 Ci
214 83 3 Ci
214 83 3 Ci
215 86 3 Ci
215 92 3 Ci
215 103 3 Ci
216 111 3 Ci
216 116 3 Ci
217 121 3 Ci
217 126 3 Ci
217 131 3 Ci
218 134 3 Ci
218 137 3 Ci
219 138 3 Ci
219 137 3 Ci
219 134 3 Ci
220 130 3 Ci
220 126 3 Ci
221 124 3 Ci
221 123 3 Ci
221 124 3 Ci
222 126 3 Ci
222 131 3 Ci
223 139 3 Ci
223 149 3 Ci
223 58 3 Ci
224 65 3 Ci
224 72 3 Ci
225 77 3 Ci
225 81 3 Ci
225 85 3 Ci
226 88 3 Ci
226 91 3 Ci
227 94 3 Ci
227 101 3 Ci
227 111 3 Ci
228 120 3 Ci
228 123 3 Ci
229 120 3 Ci
229 117 3 Ci
230 113 3 Ci
230 109 3 Ci
231 104 3 Ci
231 99 3 Ci
231 90 3 Ci
232 79 3 Ci
232 68 3 Ci
233 62 3 Ci
233 58 3 Ci
233 55 3 Ci
234 52 3 Ci
234 50 3 Ci
235 148 3 Ci
235 146 3 Ci
235 144 3 Ci
236 143 3 Ci
236 141 3 Ci
237 137 3 Ci
237 131 3 Ci
237 123 3 Ci
238 118 3 Ci
238 115 3 Ci
239 115 3 Ci
239 115 3 Ci
239 117 3 Ci
240 127 3 Ci
240 49 3 Ci
241 55 3 Ci
241 56 3 Ci
241 56 3 Ci
242 56 3 Ci
242 54 3 Ci
243 50 3 Ci
243 141 3 Ci
243 129 3 Ci
244 124 3 Ci
244 121 3 Ci
245 120 3 Ci
245 119 3 Ci
245 117 3 Ci
246 101 3 Ci
246 77 3 Ci
247 75 3 Ci
247 76 3 Ci
248 76 3 Ci
248 76 3 Ci
249 76 3 Ci
249 74 3 Ci
249 71 3 Ci
250 65 3 Ci
250 59 3 Ci
251 56 3 Ci
251 59 3 Ci
252 71 3 Ci
252 83 3 Ci
253 87 3 Ci
253 88 3 Ci
253 88 3 Ci
254 87 3 Ci
254 84 3 Ci
255 80 3 Ci
255 75 3 Ci
255 68 3 Ci
256 61 3 Ci
256 55 3 Ci
257 148 3 Ci
257 140 3 Ci
257 132 3 Ci
258 126 3 Ci
258 122 3 Ci
259 120 3 Ci
259 120 3 Ci
259 121 3 Ci
260 127 3 Ci
260 146 3 Ci
261 56 3 Ci
261 59 3 Ci
261 61 3 Ci
262 65 3 Ci
262 74 3 Ci
263 88 3 Ci
263 94 3 Ci
263 95 3 Ci
264 94 3 Ci
264 91 3 Ci
265 85 3 Ci
265 78 3 Ci
265 71 3 Ci
266 66 3 Ci
266 62 3 Ci
267 59 3 Ci
267 55 3 Ci
267 50 3 Ci
268 144 3 Ci
268 138 3 Ci
269 128 3 Ci
269 97 3 Ci
269 86 3 Ci
270 83 3 Ci
270 81 3 Ci
271 81 3 Ci
271 82 3 Ci
271 83 3 Ci
272 87 3 Ci
272 91 3 Ci
273 95 3 Ci
273 97 3 Ci
273 95 3 Ci
274 90 3 Ci
274 82 3 Ci
275 76 3 Ci
275 72 3 Ci
275 70 3 Ci
276 69 3 Ci
276 67 3 Ci
277 65 3 Ci
277 117 3 Ci
277 115 3 Ci
278 113 3 Ci
278 111 3 Ci
279 107 3 Ci
279 101 3 Ci
279 93 3 Ci
280 87 3 Ci
280 83 3 Ci
281 81 3 Ci
281 81 3 Ci
281 81 3 Ci
282 82 3 Ci
282 83 3 Ci
283 82 3 Ci
283 81 3 Ci
284 80 3 Ci
284 74 3 Ci
285 131 3 Ci
285 130 3 Ci
285 130 3 Ci
286 131 3 Ci
286 133 3 Ci
287 135 3 Ci
287 140 3 Ci
287 146 3 Ci
288 53 3 Ci
288 57 3 Ci
289 59 3 Ci
289 56 3 Ci
290 145 3 Ci
290 127 3 Ci
291 122 3 Ci
291 120 3 Ci
291 120 3 Ci
292 120 3 Ci
292 50 3 Ci
292 63 3 Ci
293 63 3 Ci
293 62 3 Ci
294 60 3 Ci
294 58 3 Ci
294 56 3 Ci
295 55 3 Ci

% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 96 145 moveto
 97 146 lineto
 97 145 lineto
 98 147 lineto
 99 150 lineto
 99 153 lineto
 99 152 lineto
 100 148 lineto
 100 145 lineto
 100 144 lineto
 101 144 lineto
 101 146 lineto
 102 149 lineto
 102 152 lineto
 102 155 lineto
 103 156 lineto
 103 155 lineto
 104 154 lineto
 104 153 lineto
 104 152 lineto
 105 151 lineto
 105 150 lineto
 106 149 lineto
 106 148 lineto
 106 147 lineto
 107 146 lineto
 107 146 lineto
 108 148 lineto
 108 149 lineto
 108 151 lineto
 109 150 lineto
 110 149 lineto
 110 149 lineto
 110 151 lineto
 111 149 lineto
 112 145 lineto
 112 141 lineto
 112 139 lineto
 113 142 lineto
 114 144 lineto
 114 146 lineto
 115 145 lineto
 115 142 lineto
 116 141 lineto
 116 140 lineto
 116 141 lineto
 117 143 lineto
 117 146 lineto
 118 147 lineto
 118 144 lineto
 118 139 lineto
 119 135 lineto
 119 134 lineto
 120 135 lineto
 120 139 lineto
 120 143 lineto
 121 145 lineto
 121 146 lineto
 122 145 lineto
 122 142 lineto
 122 139 lineto
 123 136 lineto
 123 133 lineto
 124 131 lineto
 124 129 lineto
 124 127 lineto
 125 125 lineto
 125 123 lineto
 126 126 lineto
 126 131 lineto
 127 137 lineto
 127 143 lineto
 128 146 lineto
 128 146 lineto
 128 146 lineto
 129 143 lineto
 129 139 lineto
 130 134 lineto
 130 130 lineto
 130 128 lineto
 131 125 lineto
 131 119 lineto
 132 112 lineto
 132 106 lineto
 132 104 lineto
 133 108 lineto
 133 119 lineto
 134 135 lineto
 134 153 lineto
 134 138 lineto
 135 120 lineto
 135 108 lineto
 136 103 lineto
 136 105 lineto
 136 113 lineto
 137 125 lineto
 137 136 lineto
 138 139 lineto
 138 135 lineto
 138 130 lineto
 139 127 lineto
 139 127 lineto
 140 129 lineto
 140 130 lineto
 141 132 lineto
 142 137 lineto
 142 144 lineto
 142 154 lineto
 143 148 lineto
 143 136 lineto
 144 127 lineto
 144 122 lineto
 144 120 lineto
 145 121 lineto
 145 121 lineto
 146 118 lineto
 146 111 lineto
 146 104 lineto
 147 100 lineto
 147 99 lineto
 148 102 lineto
 148 110 lineto
 148 121 lineto
 149 133 lineto
 149 143 lineto
 150 146 lineto
 150 144 lineto
 150 142 lineto
 151 146 lineto
 152 149 lineto
 152 151 lineto
 152 148 lineto
 153 145 lineto
 153 141 lineto
 154 138 lineto
 154 134 lineto
 154 130 lineto
 155 125 lineto
 155 120 lineto
 156 116 lineto
 156 114 lineto
 156 113 lineto
 157 115 lineto
 157 120 lineto
 158 126 lineto
 158 134 lineto
 158 142 lineto
 159 148 lineto
 159 149 lineto
 160 145 lineto
 160 138 lineto
 160 131 lineto
 161 126 lineto
 161 122 lineto
 162 121 lineto
 162 123 lineto
 162 129 lineto
 163 137 lineto
 163 145 lineto
 164 148 lineto
 164 143 lineto
 164 138 lineto
 165 135 lineto
 165 133 lineto
 166 131 lineto
 166 128 lineto
 166 125 lineto
 167 125 lineto
 167 128 lineto
 168 136 lineto
 168 146 lineto
 168 153 lineto
 169 142 lineto
 169 132 lineto
 170 127 lineto
 170 126 lineto
 170 130 lineto
 171 138 lineto
 171 147 lineto
 172 155 lineto
 172 152 lineto
 172 148 lineto
 173 143 lineto
 173 135 lineto
 174 126 lineto
 174 117 lineto
 174 112 lineto
 175 117 lineto
 176 127 lineto
 176 138 lineto
 176 139 lineto
 177 129 lineto
 177 119 lineto
 178 115 lineto
 178 118 lineto
 178 126 lineto
 179 135 lineto
 179 134 lineto
 180 122 lineto
 180 109 lineto
 180 99 lineto
 181 96 lineto
 181 98 lineto
 182 104 lineto
 182 112 lineto
 182 120 lineto
 183 125 lineto
 183 125 lineto
 184 124 lineto
 184 125 lineto
 185 130 lineto
 185 137 lineto
 186 145 lineto
 186 152 lineto
 186 152 lineto
 187 150 lineto
 187 149 lineto
 188 147 lineto
 188 136 lineto
 188 120 lineto
 189 101 lineto
 189 84 lineto
 190 71 lineto
 190 66 lineto
 190 70 lineto
 191 84 lineto
 191 103 lineto
 192 122 lineto
 192 128 lineto
 192 117 lineto
 193 105 lineto
 193 100 lineto
 194 102 lineto
 194 106 lineto
 194 107 lineto
 195 105 lineto
 195 103 lineto
 196 104 lineto
 196 111 lineto
 196 121 lineto
 197 133 lineto
 197 142 lineto
 197 148 lineto
 198 154 lineto
 198 144 lineto
 199 128 lineto
 199 110 lineto
 199 95 lineto
 200 86 lineto
 200 85 lineto
 201 94 lineto
 201 109 lineto
 201 128 lineto
 202 145 lineto
 202 145 lineto
 203 135 lineto
 203 126 lineto
 203 113 lineto
 204 96 lineto
 204 79 lineto
 205 65 lineto
 205 57 lineto
 206 64 lineto
 206 77 lineto
 207 92 lineto
 207 105 lineto
 207 114 lineto
 208 119 lineto
 208 121 lineto
 209 122 lineto
 209 123 lineto
 209 124 lineto
 210 126 lineto
 210 129 lineto
 211 131 lineto
 211 131 lineto
 211 128 lineto
 212 124 lineto
 212 121 lineto
 213 118 lineto
 213 116 lineto
 214 117 lineto
 214 122 lineto
 215 130 lineto
 215 136 lineto
 216 130 lineto
 216 124 lineto
 217 119 lineto
 217 115 lineto
 217 111 lineto
 218 106 lineto
 218 102 lineto
 219 101 lineto
 219 103 lineto
 219 106 lineto
 220 107 lineto
 220 104 lineto
 221 99 lineto
 221 96 lineto
 221 98 lineto
 222 104 lineto
 222 114 lineto
 223 122 lineto
 223 123 lineto
 223 119 lineto
 224 113 lineto
 224 105 lineto
 225 97 lineto
 225 90 lineto
 225 86 lineto
 226 88 lineto
 226 96 lineto
 227 110 lineto
 227 124 lineto
 227 130 lineto
 228 123 lineto
 228 114 lineto
 229 108 lineto
 229 106 lineto
 230 107 lineto
 230 109 lineto
 231 114 lineto
 231 121 lineto
 231 129 lineto
 232 132 lineto
 232 125 lineto
 233 114 lineto
 233 106 lineto
 233 100 lineto
 234 98 lineto
 234 99 lineto
 235 102 lineto
 235 107 lineto
 235 112 lineto
 236 119 lineto
 236 126 lineto
 237 133 lineto
 237 137 lineto
 237 135 lineto
 238 129 lineto
 238 124 lineto
 239 121 lineto
 239 124 lineto
 239 134 lineto
 240 146 lineto
 240 140 lineto
 241 123 lineto
 241 107 lineto
 241 98 lineto
 242 106 lineto
 243 119 lineto
 243 129 lineto
 243 126 lineto
 244 115 lineto
 244 108 lineto
 245 109 lineto
 245 119 lineto
 245 134 lineto
 246 151 lineto
 246 137 lineto
 247 118 lineto
 247 104 lineto
 247 95 lineto
 248 93 lineto
 248 97 lineto
 249 105 lineto
 249 116 lineto
 249 126 lineto
 250 131 lineto
 250 133 lineto
 251 136 lineto
 251 142 lineto
 252 146 lineto
 252 139 lineto
 253 128 lineto
 253 119 lineto
 253 114 lineto
 254 118 lineto
 255 124 lineto
 255 129 lineto
 255 133 lineto
 256 134 lineto
 256 136 lineto
 257 138 lineto
 257 139 lineto
 257 138 lineto
 258 136 lineto
 258 133 lineto
 259 137 lineto
 259 143 lineto
 260 150 lineto
 260 152 lineto
 261 148 lineto
 261 145 lineto
 261 145 lineto
 262 148 lineto
 262 151 lineto
 263 150 lineto
 263 146 lineto
 263 143 lineto
 264 142 lineto
 264 142 lineto
 265 144 lineto
 265 142 lineto
 266 141 lineto
 266 140 lineto
 267 141 lineto
 267 143 lineto
 267 146 lineto
 268 149 lineto
 268 152 lineto
 269 155 lineto
 269 155 lineto
 269 151 lineto
 270 147 lineto
 270 144 lineto
 271 142 lineto
 271 143 lineto
 272 145 lineto
 272 146 lineto
 273 147 lineto
 273 148 lineto
 274 149 lineto
 274 149 lineto
 275 147 lineto
 275 145 lineto
 275 145 lineto
 276 147 lineto
 276 150 lineto
 277 155 lineto
 277 151 lineto
 278 149 lineto
 278 148 lineto
 279 150 lineto
 279 151 lineto
 280 150 lineto
 280 149 lineto
 281 148 lineto
 281 148 lineto
 282 148 lineto
 283 149 lineto
 283 151 lineto
 284 153 lineto
 284 157 lineto
 285 154 lineto
 285 149 lineto
 285 145 lineto
 286 142 lineto
 286 142 lineto
 287 143 lineto
 287 145 lineto
 287 146 lineto
 288 144 lineto
 289 146 lineto
 289 150 lineto
 290 154 lineto
 290 152 lineto
 291 149 lineto
 291 148 lineto
 291 150 lineto
 292 153 lineto
 292 157 lineto
 292 152 lineto
 293 147 lineto
 293 144 lineto
 294 143 lineto
 294 142 lineto
 294 142 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

96 145 1 Ci
97 146 1 Ci
97 145 1 Ci
98 147 1 Ci
99 150 1 Ci
99 153 1 Ci
99 152 1 Ci
100 148 1 Ci
100 145 1 Ci
100 144 1 Ci
101 144 1 Ci
101 146 1 Ci
102 149 1 Ci
102 152 1 Ci
102 155 1 Ci
103 156 1 Ci
103 155 1 Ci
104 154 1 Ci
104 153 1 Ci
104 152 1 Ci
105 151 1 Ci
105 150 1 Ci
106 149 1 Ci
106 148 1 Ci
106 147 1 Ci
107 146 1 Ci
107 146 1 Ci
108 148 1 Ci
108 149 1 Ci
108 151 1 Ci
109 150 1 Ci
110 149 1 Ci
110 149 1 Ci
110 151 1 Ci
111 149 1 Ci
112 145 1 Ci
112 141 1 Ci
112 139 1 Ci
113 142 1 Ci
114 144 1 Ci
114 146 1 Ci
115 145 1 Ci
115 142 1 Ci
116 141 1 Ci
116 140 1 Ci
116 141 1 Ci
117 143 1 Ci
117 146 1 Ci
118 147 1 Ci
118 144 1 Ci
118 139 1 Ci
119 135 1 Ci
119 134 1 Ci
120 135 1 Ci
120 139 1 Ci
120 143 1 Ci
121 145 1 Ci
121 146 1 Ci
122 145 1 Ci
122 142 1 Ci
122 139 1 Ci
123 136 1 Ci
123 133 1 Ci
124 131 1 Ci
124 129 1 Ci
124 127 1 Ci
125 125 1 Ci
125 123 1 Ci
126 126 1 Ci
126 131 1 Ci
127 137 1 Ci
127 143 1 Ci
128 146 1 Ci
128 146 1 Ci
128 146 1 Ci
129 143 1 Ci
129 139 1 Ci
130 134 1 Ci
130 130 1 Ci
130 128 1 Ci
131 125 1 Ci
131 119 1 Ci
132 112 1 Ci
132 106 1 Ci
132 104 1 Ci
133 108 1 Ci
133 119 1 Ci
134 135 1 Ci
134 153 1 Ci
134 138 1 Ci
135 120 1 Ci
135 108 1 Ci
136 103 1 Ci
136 105 1 Ci
136 113 1 Ci
137 125 1 Ci
137 136 1 Ci
138 139 1 Ci
138 135 1 Ci
138 130 1 Ci
139 127 1 Ci
139 127 1 Ci
140 129 1 Ci
140 130 1 Ci
141 132 1 Ci
142 137 1 Ci
142 144 1 Ci
142 154 1 Ci
143 148 1 Ci
143 136 1 Ci
144 127 1 Ci
144 122 1 Ci
144 120 1 Ci
145 121 1 Ci
145 121 1 Ci
146 118 1 Ci
146 111 1 Ci
146 104 1 Ci
147 100 1 Ci
147 99 1 Ci
148 102 1 Ci
148 110 1 Ci
148 121 1 Ci
149 133 1 Ci
149 143 1 Ci
150 146 1 Ci
150 144 1 Ci
150 142 1 Ci
151 146 1 Ci
152 149 1 Ci
152 151 1 Ci
152 148 1 Ci
153 145 1 Ci
153 141 1 Ci
154 138 1 Ci
154 134 1 Ci
154 130 1 Ci
155 125 1 Ci
155 120 1 Ci
156 116 1 Ci
156 114 1 Ci
156 113 1 Ci
157 115 1 Ci
157 120 1 Ci
158 126 1 Ci
158 134 1 Ci
158 142 1 Ci
159 148 1 Ci
159 149 1 Ci
160 145 1 Ci
160 138 1 Ci
160 131 1 Ci
161 126 1 Ci
161 122 1 Ci
162 121 1 Ci
162 123 1 Ci
162 129 1 Ci
163 137 1 Ci
163 145 1 Ci
164 148 1 Ci
164 143 1 Ci
164 138 1 Ci
165 135 1 Ci
165 133 1 Ci
166 131 1 Ci
166 128 1 Ci
166 125 1 Ci
167 125 1 Ci
167 128 1 Ci
168 136 1 Ci
168 146 1 Ci
168 153 1 Ci
169 142 1 Ci
169 132 1 Ci
170 127 1 Ci
170 126 1 Ci
170 130 1 Ci
171 138 1 Ci
171 147 1 Ci
172 155 1 Ci
172 152 1 Ci
172 148 1 Ci
173 143 1 Ci
173 135 1 Ci
174 126 1 Ci
174 117 1 Ci
174 112 1 Ci
175 117 1 Ci
176 127 1 Ci
176 138 1 Ci
176 139 1 Ci
177 129 1 Ci
177 119 1 Ci
178 115 1 Ci
178 118 1 Ci
178 126 1 Ci
179 135 1 Ci
179 134 1 Ci
180 122 1 Ci
180 109 1 Ci
180 99 1 Ci
181 96 1 Ci
181 98 1 Ci
182 104 1 Ci
182 112 1 Ci
182 120 1 Ci
183 125 1 Ci
183 125 1 Ci
184 124 1 Ci
184 125 1 Ci
185 130 1 Ci
185 137 1 Ci
186 145 1 Ci
186 152 1 Ci
186 152 1 Ci
187 150 1 Ci
187 149 1 Ci
188 147 1 Ci
188 136 1 Ci
188 120 1 Ci
189 101 1 Ci
189 84 1 Ci
190 71 1 Ci
190 66 1 Ci
190 70 1 Ci
191 84 1 Ci
191 103 1 Ci
192 122 1 Ci
192 128 1 Ci
192 117 1 Ci
193 105 1 Ci
193 100 1 Ci
194 102 1 Ci
194 106 1 Ci
194 107 1 Ci
195 105 1 Ci
195 103 1 Ci
196 104 1 Ci
196 111 1 Ci
196 121 1 Ci
197 133 1 Ci
197 142 1 Ci
197 148 1 Ci
198 154 1 Ci
198 144 1 Ci
199 128 1 Ci
199 110 1 Ci
199 95 1 Ci
200 86 1 Ci
200 85 1 Ci
201 94 1 Ci
201 109 1 Ci
201 128 1 Ci
202 145 1 Ci
202 145 1 Ci
203 135 1 Ci
203 126 1 Ci
203 113 1 Ci
204 96 1 Ci
204 79 1 Ci
205 65 1 Ci
205 57 1 Ci
206 64 1 Ci
206 77 1 Ci
207 92 1 Ci
207 105 1 Ci
207 114 1 Ci
208 119 1 Ci
208 121 1 Ci
209 122 1 Ci
209 123 1 Ci
209 124 1 Ci
210 126 1 Ci
210 129 1 Ci
211 131 1 Ci
211 131 1 Ci
211 128 1 Ci
212 124 1 Ci
212 121 1 Ci
213 118 1 Ci
213 116 1 Ci
214 117 1 Ci
214 122 1 Ci
215 130 1 Ci
215 136 1 Ci
216 130 1 Ci
216 124 1 Ci
217 119 1 Ci
217 115 1 Ci
217 111 1 Ci
218 106 1 Ci
218 102 1 Ci
219 101 1 Ci
219 103 1 Ci
219 106 1 Ci
220 107 1 Ci
220 104 1 Ci
221 99 1 Ci
221 96 1 Ci
221 98 1 Ci
222 104 1 Ci
222 114 1 Ci
223 122 1 Ci
223 123 1 Ci
223 119 1 Ci
224 113 1 Ci
224 105 1 Ci
225 97 1 Ci
225 90 1 Ci
225 86 1 Ci
226 88 1 Ci
226 96 1 Ci
227 110 1 Ci
227 124 1 Ci
227 130 1 Ci
228 123 1 Ci
228 114 1 Ci
229 108 1 Ci
229 106 1 Ci
230 107 1 Ci
230 109 1 Ci
231 114 1 Ci
231 121 1 Ci
231 129 1 Ci
232 132 1 Ci
232 125 1 Ci
233 114 1 Ci
233 106 1 Ci
233 100 1 Ci
234 98 1 Ci
234 99 1 Ci
235 102 1 Ci
235 107 1 Ci
235 112 1 Ci
236 119 1 Ci
236 126 1 Ci
237 133 1 Ci
237 137 1 Ci
237 135 1 Ci
238 129 1 Ci
238 124 1 Ci
239 121 1 Ci
239 124 1 Ci
239 134 1 Ci
240 146 1 Ci
240 140 1 Ci
241 123 1 Ci
241 107 1 Ci
241 98 1 Ci
242 106 1 Ci
243 119 1 Ci
243 129 1 Ci
243 126 1 Ci
244 115 1 Ci
244 108 1 Ci
245 109 1 Ci
245 119 1 Ci
245 134 1 Ci
246 151 1 Ci
246 137 1 Ci
247 118 1 Ci
247 104 1 Ci
247 95 1 Ci
248 93 1 Ci
248 97 1 Ci
249 105 1 Ci
249 116 1 Ci
249 126 1 Ci
250 131 1 Ci
250 133 1 Ci
251 136 1 Ci
251 142 1 Ci
252 146 1 Ci
252 139 1 Ci
253 128 1 Ci
253 119 1 Ci
253 114 1 Ci
254 118 1 Ci
255 124 1 Ci
255 129 1 Ci
255 133 1 Ci
256 134 1 Ci
256 136 1 Ci
257 138 1 Ci
257 139 1 Ci
257 138 1 Ci
258 136 1 Ci
258 133 1 Ci
259 137 1 Ci
259 143 1 Ci
260 150 1 Ci
260 152 1 Ci
261 148 1 Ci
261 145 1 Ci
261 145 1 Ci
262 148 1 Ci
262 151 1 Ci
263 150 1 Ci
263 146 1 Ci
263 143 1 Ci
264 142 1 Ci
264 142 1 Ci
265 144 1 Ci
265 142 1 Ci
266 141 1 Ci
266 140 1 Ci
267 141 1 Ci
267 143 1 Ci
267 146 1 Ci
268 149 1 Ci
268 152 1 Ci
269 155 1 Ci
269 155 1 Ci
269 151 1 Ci
270 147 1 Ci
270 144 1 Ci
271 142 1 Ci
271 143 1 Ci
272 145 1 Ci
272 146 1 Ci
273 147 1 Ci
273 148 1 Ci
274 149 1 Ci
274 149 1 Ci
275 147 1 Ci
275 145 1 Ci
275 145 1 Ci
276 147 1 Ci
276 150 1 Ci
277 155 1 Ci
277 151 1 Ci
278 149 1 Ci
278 148 1 Ci
279 150 1 Ci
279 151 1 Ci
280 150 1 Ci
280 149 1 Ci
281 148 1 Ci
281 148 1 Ci
282 148 1 Ci
283 149 1 Ci
283 151 1 Ci
284 153 1 Ci
284 157 1 Ci
285 154 1 Ci
285 149 1 Ci
285 145 1 Ci
286 142 1 Ci
286 142 1 Ci
287 143 1 Ci
287 145 1 Ci
287 146 1 Ci
288 144 1 Ci
289 146 1 Ci
289 150 1 Ci
290 154 1 Ci
290 152 1 Ci
291 149 1 Ci
291 148 1 Ci
291 150 1 Ci
292 153 1 Ci
292 157 1 Ci
292 152 1 Ci
293 147 1 Ci
293 144 1 Ci
294 143 1 Ci
294 142 1 Ci
294 142 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 350 33 Box Fill

0 33 48 133 Box Fill

344 33 6 133 Box Fill

0 166 350 34 Box Fill

0.898039 0.898039 0.898039 SetBgColor
46 166 300 2 Box Fill

344 31 2 137 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 46 168 moveto
46 31 lineto
346 31 lineto
344 33 lineto
48 33 lineto
48 166 lineto
46 168 lineto
46 168  lineto closepath Fill
90 17 0 196 14 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+8, +125\)) 90 0 13 DrawAdjText
EndText
40 17 0 0 98 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.1) 36 2 13 DrawAdjText
EndText
49 17 0 56 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.05) 45 2 13 DrawAdjText
EndText
13 17 0 126 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
40 17 0 196 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.05) 36 2 13 DrawAdjText
EndText
31 17 0 266 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
56 171 336 171 LS
91 171 91 176 LS
56 171 56 179 LS
161 171 161 176 LS
126 171 126 179 LS
231 171 231 176 LS
196 171 196 179 LS
301 171 301 176 LS
266 171 266 179 LS
336 171 336 179 LS
13 17 0 329 181 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
22 17 0 22 158 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(20) 18 2 13 DrawAdjText
EndText
22 17 0 22 134 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(40) 18 2 13 DrawAdjText
EndText
22 17 0 22 111 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(60) 18 2 13 DrawAdjText
EndText
22 17 0 22 87 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(80) 18 2 13 DrawAdjText
EndText
31 17 0 17 64 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(100) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
43 158 43 41 LS
43 146 38 146 LS
43 158 35 158 LS
43 122 38 122 LS
43 134 35 134 LS
43 99 38 99 LS
43 111 35 111 LS
43 76 38 76 LS
43 87 35 87 LS
43 52 38 52 LS
43 64 35 64 LS
43 41 35 41 LS
showpage
%Trailer
grestore
end
%EOF
%%Page:
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 302 409 309 413
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Tue Dec 19 17:15:26 2000)
%%Title: (/tmp/6.llDataPrint)
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Arrow
/Ar {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
					% b2 0 h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    neg					% -h2 b2
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

% Transform coordinate system to use X11 coordinates

% 1. Flip y-axis over by reversing the scale,
% 2. Translate the origin to the other side of the page,
%    making the origin the upper left corner
0.757382 -0.755721 scale
0 -1046 translate

% User defined page layout

% Set color level
/CL 2 def

% Set origin
400 500 translate


% Setting graph scale factor
 0.0228571 0.0228571 scale

%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
46 31 301 138 Box Fill

gsave clip


% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

96 50 3 Ci
97 53 3 Ci
97 58 3 Ci
97 64 3 Ci
98 70 3 Ci
98 79 3 Ci
99 91 3 Ci
99 101 3 Ci
99 105 3 Ci
100 107 3 Ci
100 106 3 Ci
100 103 3 Ci
101 94 3 Ci
101 84 3 Ci
102 78 3 Ci
102 76 3 Ci
103 79 3 Ci
103 83 3 Ci
104 87 3 Ci
104 91 3 Ci
104 93 3 Ci
105 94 3 Ci
105 94 3 Ci
106 91 3 Ci
106 78 3 Ci
106 58 3 Ci
107 52 3 Ci
107 50 3 Ci
108 148 3 Ci
108 146 3 Ci
108 143 3 Ci
109 139 3 Ci
109 133 3 Ci
110 126 3 Ci
110 119 3 Ci
110 114 3 Ci
111 111 3 Ci
111 109 3 Ci
112 107 3 Ci
112 106 3 Ci
112 106 3 Ci
113 105 3 Ci
114 106 3 Ci
114 108 3 Ci
115 116 3 Ci
115 138 3 Ci
116 146 3 Ci
116 49 3 Ci
116 51 3 Ci
117 54 3 Ci
117 57 3 Ci
118 60 3 Ci
118 64 3 Ci
118 67 3 Ci
119 69 3 Ci
119 71 3 Ci
120 73 3 Ci
120 83 3 Ci
120 103 3 Ci
121 107 3 Ci
121 108 3 Ci
122 106 3 Ci
122 105 3 Ci
122 102 3 Ci
123 99 3 Ci
123 94 3 Ci
124 87 3 Ci
124 79 3 Ci
124 72 3 Ci
125 67 3 Ci
125 64 3 Ci
126 61 3 Ci
126 58 3 Ci
126 56 3 Ci
127 54 3 Ci
127 53 3 Ci
128 53 3 Ci
128 56 3 Ci
128 58 3 Ci
129 61 3 Ci
129 63 3 Ci
130 66 3 Ci
130 70 3 Ci
130 75 3 Ci
131 82 3 Ci
131 91 3 Ci
132 101 3 Ci
132 111 3 Ci
132 118 3 Ci
133 123 3 Ci
133 126 3 Ci
134 127 3 Ci
134 128 3 Ci
135 127 3 Ci
135 125 3 Ci
136 122 3 Ci
136 117 3 Ci
136 111 3 Ci
137 106 3 Ci
137 104 3 Ci
138 107 3 Ci
138 111 3 Ci
139 113 3 Ci
139 114 3 Ci
140 116 3 Ci
140 118 3 Ci
141 127 3 Ci
141 148 3 Ci
142 53 3 Ci
142 54 3 Ci
143 53 3 Ci
144 52 3 Ci
144 50 3 Ci
144 146 3 Ci
145 124 3 Ci
145 110 3 Ci
146 106 3 Ci
146 105 3 Ci
146 104 3 Ci
147 103 3 Ci
148 102 3 Ci
149 102 3 Ci
149 101 3 Ci
150 99 3 Ci
150 97 3 Ci
150 95 3 Ci
151 90 3 Ci
151 77 3 Ci
152 60 3 Ci
152 53 3 Ci
152 50 3 Ci
153 149 3 Ci
153 148 3 Ci
154 147 3 Ci
154 146 3 Ci
154 146 3 Ci
155 146 3 Ci
156 147 3 Ci
156 49 3 Ci
156 53 3 Ci
157 60 3 Ci
157 65 3 Ci
158 67 3 Ci
158 67 3 Ci
159 65 3 Ci
159 63 3 Ci
160 62 3 Ci
160 60 3 Ci
160 59 3 Ci
161 67 3 Ci
162 102 3 Ci
162 104 3 Ci
162 104 3 Ci
163 106 3 Ci
164 109 3 Ci
164 112 3 Ci
164 115 3 Ci
165 118 3 Ci
165 119 3 Ci
166 120 3 Ci
166 121 3 Ci
167 122 3 Ci
167 124 3 Ci
168 126 3 Ci
168 129 3 Ci
168 134 3 Ci
169 140 3 Ci
169 146 3 Ci
170 55 3 Ci
170 70 3 Ci
170 79 3 Ci
171 82 3 Ci
171 82 3 Ci
172 79 3 Ci
172 75 3 Ci
172 68 3 Ci
173 62 3 Ci
173 57 3 Ci
174 52 3 Ci
174 148 3 Ci
174 144 3 Ci
175 140 3 Ci
175 137 3 Ci
176 134 3 Ci
176 132 3 Ci
176 131 3 Ci
177 132 3 Ci
177 134 3 Ci
178 135 3 Ci
178 134 3 Ci
178 132 3 Ci
179 129 3 Ci
179 127 3 Ci
180 126 3 Ci
180 126 3 Ci
180 126 3 Ci
181 127 3 Ci
181 130 3 Ci
182 134 3 Ci
182 142 3 Ci
182 149 3 Ci
183 53 3 Ci
183 57 3 Ci
184 59 3 Ci
184 60 3 Ci
184 61 3 Ci
185 61 3 Ci
186 61 3 Ci
186 60 3 Ci
186 58 3 Ci
187 57 3 Ci
187 56 3 Ci
188 54 3 Ci
188 53 3 Ci
188 51 3 Ci
189 148 3 Ci
189 138 3 Ci
190 113 3 Ci
190 108 3 Ci
190 108 3 Ci
191 110 3 Ci
191 115 3 Ci
192 120 3 Ci
192 122 3 Ci
192 124 3 Ci
193 125 3 Ci
193 125 3 Ci
194 126 3 Ci
194 128 3 Ci
194 132 3 Ci
195 144 3 Ci
195 57 3 Ci
196 61 3 Ci
196 63 3 Ci
196 64 3 Ci
197 64 3 Ci
197 66 3 Ci
197 69 3 Ci
198 73 3 Ci
198 79 3 Ci
199 82 3 Ci
199 84 3 Ci
199 85 3 Ci
200 87 3 Ci
201 93 3 Ci
201 122 3 Ci
201 129 3 Ci
202 130 3 Ci
202 131 3 Ci
203 132 3 Ci
204 133 3 Ci
205 127 3 Ci
205 92 3 Ci
205 90 3 Ci
206 91 3 Ci
206 93 3 Ci
207 94 3 Ci
207 95 3 Ci
207 94 3 Ci
208 54 3 Ci
208 52 3 Ci
209 52 3 Ci
210 51 3 Ci
210 50 3 Ci
211 149 3 Ci
211 146 3 Ci
211 143 3 Ci
212 141 3 Ci
212 140 3 Ci
213 141 3 Ci
213 146 3 Ci
213 51 3 Ci
214 53 3 Ci
214 53 3 Ci
215 52 3 Ci
215 51 3 Ci
215 49 3 Ci
216 147 3 Ci
216 146 3 Ci
217 144 3 Ci
217 140 3 Ci
217 93 3 Ci
218 92 3 Ci
218 92 3 Ci
219 92 3 Ci
219 92 3 Ci
220 94 3 Ci
220 102 3 Ci
221 129 3 Ci
221 136 3 Ci
221 138 3 Ci
222 140 3 Ci
222 141 3 Ci
223 143 3 Ci
223 144 3 Ci
223 145 3 Ci
224 145 3 Ci
224 145 3 Ci
225 145 3 Ci
225 144 3 Ci
225 144 3 Ci
226 142 3 Ci
226 139 3 Ci
227 113 3 Ci
227 99 3 Ci
227 97 3 Ci
228 95 3 Ci
228 93 3 Ci
229 88 3 Ci
229 80 3 Ci
229 71 3 Ci
230 65 3 Ci
230 62 3 Ci
231 61 3 Ci
231 60 3 Ci
231 58 3 Ci
232 56 3 Ci
232 51 3 Ci
233 137 3 Ci
233 124 3 Ci
233 120 3 Ci
234 119 3 Ci
234 119 3 Ci
235 119 3 Ci
235 122 3 Ci
235 136 3 Ci
236 55 3 Ci
236 59 3 Ci
237 59 3 Ci
237 59 3 Ci
237 58 3 Ci
238 56 3 Ci
238 53 3 Ci
239 49 3 Ci
239 146 3 Ci
239 143 3 Ci
240 140 3 Ci
240 137 3 Ci
241 135 3 Ci
241 133 3 Ci
241 131 3 Ci
242 129 3 Ci
242 127 3 Ci
243 125 3 Ci
243 125 3 Ci
243 138 3 Ci
244 61 3 Ci
244 62 3 Ci
245 61 3 Ci
245 59 3 Ci
245 57 3 Ci
246 54 3 Ci
246 50 3 Ci
247 146 3 Ci
247 142 3 Ci
247 139 3 Ci
248 139 3 Ci
248 141 3 Ci
249 147 3 Ci
249 56 3 Ci
249 65 3 Ci
250 70 3 Ci
250 73 3 Ci
251 75 3 Ci
251 77 3 Ci
251 78 3 Ci
252 78 3 Ci
252 79 3 Ci
253 76 3 Ci
253 65 3 Ci
254 138 3 Ci
254 132 3 Ci
255 129 3 Ci
255 125 3 Ci
255 120 3 Ci
256 114 3 Ci
256 107 3 Ci
257 102 3 Ci
257 98 3 Ci
257 95 3 Ci
258 92 3 Ci
258 89 3 Ci
259 86 3 Ci
259 82 3 Ci
259 78 3 Ci
260 74 3 Ci
260 71 3 Ci
261 114 3 Ci
261 114 3 Ci
261 112 3 Ci
262 110 3 Ci
262 108 3 Ci
263 105 3 Ci
263 101 3 Ci
263 94 3 Ci
264 87 3 Ci
264 81 3 Ci
265 77 3 Ci
265 75 3 Ci
265 73 3 Ci
266 70 3 Ci
266 67 3 Ci
267 60 3 Ci
267 49 3 Ci
267 142 3 Ci
268 138 3 Ci
268 137 3 Ci
269 140 3 Ci
269 60 3 Ci
269 72 3 Ci
270 73 3 Ci
270 73 3 Ci
271 71 3 Ci
271 68 3 Ci
271 63 3 Ci
272 57 3 Ci
272 54 3 Ci
273 55 3 Ci
273 60 3 Ci
274 64 3 Ci
274 67 3 Ci
275 68 3 Ci
275 68 3 Ci
275 65 3 Ci
276 54 3 Ci
276 139 3 Ci
277 133 3 Ci
277 130 3 Ci
277 128 3 Ci
278 127 3 Ci
278 124 3 Ci
279 120 3 Ci
279 111 3 Ci
279 101 3 Ci
280 96 3 Ci
280 94 3 Ci
281 94 3 Ci
282 92 3 Ci
282 87 3 Ci
283 81 3 Ci
283 76 3 Ci
283 72 3 Ci
284 66 3 Ci
284 56 3 Ci
285 145 3 Ci
285 137 3 Ci
285 132 3 Ci
286 129 3 Ci
286 126 3 Ci
287 123 3 Ci
287 116 3 Ci
287 105 3 Ci
288 93 3 Ci
288 88 3 Ci
289 85 3 Ci
289 84 3 Ci
289 87 3 Ci
290 105 3 Ci
290 119 3 Ci
291 121 3 Ci
291 121 3 Ci
292 119 3 Ci
293 121 3 Ci
293 133 3 Ci
294 146 3 Ci
294 149 3 Ci

% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 96 150 moveto
 97 151 lineto
 97 152 lineto
 97 153 lineto
 98 153 lineto
 98 154 lineto
 99 153 lineto
 99 152 lineto
 100 151 lineto
 100 151 lineto
 100 152 lineto
 101 153 lineto
 101 152 lineto
 102 150 lineto
 102 147 lineto
 102 146 lineto
 103 146 lineto
 103 145 lineto
 104 145 lineto
 104 144 lineto
 104 143 lineto
 105 144 lineto
 105 146 lineto
 106 150 lineto
 106 154 lineto
 106 151 lineto
 107 147 lineto
 107 144 lineto
 108 142 lineto
 108 143 lineto
 108 145 lineto
 109 147 lineto
 109 150 lineto
 110 151 lineto
 110 151 lineto
 111 151 lineto
 111 150 lineto
 112 149 lineto
 112 146 lineto
 112 144 lineto
 113 141 lineto
 113 140 lineto
 114 140 lineto
 114 142 lineto
 114 147 lineto
 115 152 lineto
 115 152 lineto
 116 146 lineto
 116 141 lineto
 116 138 lineto
 117 137 lineto
 117 137 lineto
 118 137 lineto
 119 139 lineto
 119 142 lineto
 120 147 lineto
 120 152 lineto
 120 150 lineto
 121 142 lineto
 121 135 lineto
 122 129 lineto
 122 125 lineto
 122 125 lineto
 123 127 lineto
 123 131 lineto
 124 134 lineto
 124 135 lineto
 124 132 lineto
 125 130 lineto
 125 128 lineto
 126 129 lineto
 126 132 lineto
 126 136 lineto
 127 140 lineto
 127 143 lineto
 128 145 lineto
 128 145 lineto
 128 143 lineto
 129 141 lineto
 129 139 lineto
 130 141 lineto
 130 143 lineto
 131 145 lineto
 131 146 lineto
 132 145 lineto
 132 142 lineto
 132 137 lineto
 133 130 lineto
 133 122 lineto
 134 115 lineto
 134 112 lineto
 135 115 lineto
 135 121 lineto
 136 128 lineto
 136 134 lineto
 136 138 lineto
 137 139 lineto
 137 140 lineto
 138 140 lineto
 138 140 lineto
 138 138 lineto
 139 134 lineto
 139 131 lineto
 140 130 lineto
 140 133 lineto
 140 139 lineto
 141 148 lineto
 141 144 lineto
 142 130 lineto
 142 116 lineto
 142 105 lineto
 143 100 lineto
 143 102 lineto
 144 110 lineto
 144 124 lineto
 144 140 lineto
 145 149 lineto
 145 138 lineto
 146 127 lineto
 146 121 lineto
 146 119 lineto
 147 121 lineto
 147 126 lineto
 148 130 lineto
 148 134 lineto
 148 136 lineto
 149 136 lineto
 150 136 lineto
 150 137 lineto
 150 139 lineto
 151 144 lineto
 151 149 lineto
 152 145 lineto
 152 134 lineto
 152 122 lineto
 153 111 lineto
 153 102 lineto
 154 96 lineto
 154 93 lineto
 154 94 lineto
 155 99 lineto
 155 106 lineto
 156 116 lineto
 156 125 lineto
 156 133 lineto
 157 136 lineto
 157 134 lineto
 158 130 lineto
 158 126 lineto
 158 124 lineto
 159 122 lineto
 159 122 lineto
 160 124 lineto
 160 129 lineto
 160 136 lineto
 161 145 lineto
 161 155 lineto
 162 149 lineto
 162 141 lineto
 162 134 lineto
 163 131 lineto
 163 129 lineto
 164 129 lineto
 164 128 lineto
 164 125 lineto
 165 120 lineto
 165 114 lineto
 166 109 lineto
 166 105 lineto
 166 105 lineto
 167 108 lineto
 167 114 lineto
 168 122 lineto
 168 129 lineto
 168 135 lineto
 169 140 lineto
 169 145 lineto
 170 149 lineto
 170 149 lineto
 170 145 lineto
 171 139 lineto
 171 135 lineto
 172 134 lineto
 172 132 lineto
 173 129 lineto
 173 126 lineto
 174 122 lineto
 174 120 lineto
 174 120 lineto
 175 121 lineto
 175 123 lineto
 176 127 lineto
 176 131 lineto
 176 136 lineto
 177 140 lineto
 177 141 lineto
 178 139 lineto
 178 135 lineto
 178 128 lineto
 179 120 lineto
 179 111 lineto
 180 104 lineto
 180 100 lineto
 180 101 lineto
 181 106 lineto
 181 114 lineto
 182 122 lineto
 182 126 lineto
 182 124 lineto
 183 119 lineto
 183 114 lineto
 184 108 lineto
 184 103 lineto
 184 97 lineto
 185 90 lineto
 185 81 lineto
 186 73 lineto
 186 65 lineto
 186 61 lineto
 187 67 lineto
 188 78 lineto
 188 94 lineto
 188 113 lineto
 189 132 lineto
 189 148 lineto
 190 146 lineto
 190 138 lineto
 190 132 lineto
 191 129 lineto
 191 125 lineto
 192 116 lineto
 192 104 lineto
 192 92 lineto
 193 84 lineto
 193 83 lineto
 194 90 lineto
 194 104 lineto
 194 123 lineto
 195 134 lineto
 195 125 lineto
 196 108 lineto
 196 96 lineto
 196 91 lineto
 197 93 lineto
 197 100 lineto
 197 108 lineto
 198 113 lineto
 198 111 lineto
 199 104 lineto
 199 97 lineto
 199 95 lineto
 200 101 lineto
 200 116 lineto
 201 138 lineto
 201 139 lineto
 201 110 lineto
 202 82 lineto
 202 61 lineto
 203 51 lineto
 203 54 lineto
 203 69 lineto
 204 92 lineto
 204 120 lineto
 205 148 lineto
 205 141 lineto
 205 124 lineto
 206 115 lineto
 206 113 lineto
 207 119 lineto
 207 130 lineto
 207 147 lineto
 208 148 lineto
 208 127 lineto
 209 107 lineto
 209 91 lineto
 209 81 lineto
 210 78 lineto
 210 81 lineto
 211 89 lineto
 211 98 lineto
 211 108 lineto
 212 116 lineto
 212 124 lineto
 213 131 lineto
 213 134 lineto
 213 130 lineto
 214 123 lineto
 214 116 lineto
 215 110 lineto
 215 108 lineto
 215 109 lineto
 216 114 lineto
 216 124 lineto
 217 137 lineto
 217 154 lineto
 217 144 lineto
 218 129 lineto
 218 118 lineto
 219 112 lineto
 219 114 lineto
 219 122 lineto
 220 134 lineto
 220 148 lineto
 221 147 lineto
 221 135 lineto
 221 127 lineto
 222 122 lineto
 222 121 lineto
 223 123 lineto
 223 126 lineto
 223 129 lineto
 224 132 lineto
 224 133 lineto
 225 135 lineto
 225 136 lineto
 225 139 lineto
 226 144 lineto
 226 150 lineto
 227 154 lineto
 227 147 lineto
 227 140 lineto
 228 135 lineto
 228 134 lineto
 229 136 lineto
 229 137 lineto
 229 132 lineto
 230 122 lineto
 230 110 lineto
 231 102 lineto
 231 100 lineto
 231 105 lineto
 232 117 lineto
 232 132 lineto
 233 140 lineto
 233 130 lineto
 233 117 lineto
 234 109 lineto
 234 109 lineto
 235 117 lineto
 235 132 lineto
 235 145 lineto
 236 135 lineto
 236 117 lineto
 237 102 lineto
 237 91 lineto
 237 86 lineto
 238 85 lineto
 238 86 lineto
 239 86 lineto
 239 86 lineto
 239 84 lineto
 240 84 lineto
 240 84 lineto
 241 88 lineto
 241 93 lineto
 241 101 lineto
 242 111 lineto
 242 121 lineto
 243 132 lineto
 243 144 lineto
 243 154 lineto
 244 147 lineto
 244 138 lineto
 245 131 lineto
 245 128 lineto
 245 127 lineto
 246 129 lineto
 246 132 lineto
 247 133 lineto
 247 134 lineto
 247 135 lineto
 248 136 lineto
 248 139 lineto
 249 142 lineto
 249 137 lineto
 250 129 lineto
 250 120 lineto
 251 114 lineto
 251 109 lineto
 251 108 lineto
 252 111 lineto
 252 118 lineto
 253 128 lineto
 253 140 lineto
 253 152 lineto
 254 148 lineto
 254 140 lineto
 255 135 lineto
 255 133 lineto
 255 133 lineto
 256 130 lineto
 257 126 lineto
 257 123 lineto
 257 122 lineto
 258 124 lineto
 258 128 lineto
 259 133 lineto
 259 139 lineto
 259 144 lineto
 260 149 lineto
 260 154 lineto
 261 156 lineto
 261 151 lineto
 261 146 lineto
 262 143 lineto
 262 141 lineto
 263 143 lineto
 263 144 lineto
 264 143 lineto
 264 141 lineto
 265 138 lineto
 265 136 lineto
 265 137 lineto
 266 140 lineto
 266 144 lineto
 267 148 lineto
 267 149 lineto
 267 148 lineto
 268 148 lineto
 268 149 lineto
 269 153 lineto
 269 155 lineto
 269 151 lineto
 270 147 lineto
 270 145 lineto
 271 145 lineto
 271 147 lineto
 272 147 lineto
 272 146 lineto
 273 146 lineto
 273 145 lineto
 274 144 lineto
 274 142 lineto
 275 144 lineto
 275 148 lineto
 276 151 lineto
 276 149 lineto
 277 144 lineto
 277 141 lineto
 277 139 lineto
 278 140 lineto
 278 144 lineto
 279 148 lineto
 279 151 lineto
 279 151 lineto
 280 150 lineto
 280 149 lineto
 281 149 lineto
 281 150 lineto
 282 151 lineto
 283 149 lineto
 283 149 lineto
 284 151 lineto
 285 149 lineto
 285 146 lineto
 285 142 lineto
 286 140 lineto
 286 141 lineto
 287 143 lineto
 287 147 lineto
 287 150 lineto
 288 148 lineto
 288 146 lineto
 289 145 lineto
 289 147 lineto
 289 151 lineto
 290 154 lineto
 290 150 lineto
 291 144 lineto
 291 141 lineto
 291 140 lineto
 292 141 lineto
 292 144 lineto
 292 148 lineto
 293 152 lineto
 293 155 lineto
 294 153 lineto
 294 151 lineto
 294 149 lineto
 295 149 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

96 150 1 Ci
97 151 1 Ci
97 152 1 Ci
97 153 1 Ci
98 153 1 Ci
98 154 1 Ci
99 153 1 Ci
99 152 1 Ci
100 151 1 Ci
100 151 1 Ci
100 152 1 Ci
101 153 1 Ci
101 152 1 Ci
102 150 1 Ci
102 147 1 Ci
102 146 1 Ci
103 146 1 Ci
103 145 1 Ci
104 145 1 Ci
104 144 1 Ci
104 143 1 Ci
105 144 1 Ci
105 146 1 Ci
106 150 1 Ci
106 154 1 Ci
106 151 1 Ci
107 147 1 Ci
107 144 1 Ci
108 142 1 Ci
108 143 1 Ci
108 145 1 Ci
109 147 1 Ci
109 150 1 Ci
110 151 1 Ci
110 151 1 Ci
111 151 1 Ci
111 150 1 Ci
112 149 1 Ci
112 146 1 Ci
112 144 1 Ci
113 141 1 Ci
113 140 1 Ci
114 140 1 Ci
114 142 1 Ci
114 147 1 Ci
115 152 1 Ci
115 152 1 Ci
116 146 1 Ci
116 141 1 Ci
116 138 1 Ci
117 137 1 Ci
117 137 1 Ci
118 137 1 Ci
119 139 1 Ci
119 142 1 Ci
120 147 1 Ci
120 152 1 Ci
120 150 1 Ci
121 142 1 Ci
121 135 1 Ci
122 129 1 Ci
122 125 1 Ci
122 125 1 Ci
123 127 1 Ci
123 131 1 Ci
124 134 1 Ci
124 135 1 Ci
124 132 1 Ci
125 130 1 Ci
125 128 1 Ci
126 129 1 Ci
126 132 1 Ci
126 136 1 Ci
127 140 1 Ci
127 143 1 Ci
128 145 1 Ci
128 145 1 Ci
128 143 1 Ci
129 141 1 Ci
129 139 1 Ci
130 141 1 Ci
130 143 1 Ci
131 145 1 Ci
131 146 1 Ci
132 145 1 Ci
132 142 1 Ci
132 137 1 Ci
133 130 1 Ci
133 122 1 Ci
134 115 1 Ci
134 112 1 Ci
135 115 1 Ci
135 121 1 Ci
136 128 1 Ci
136 134 1 Ci
136 138 1 Ci
137 139 1 Ci
137 140 1 Ci
138 140 1 Ci
138 140 1 Ci
138 138 1 Ci
139 134 1 Ci
139 131 1 Ci
140 130 1 Ci
140 133 1 Ci
140 139 1 Ci
141 148 1 Ci
141 144 1 Ci
142 130 1 Ci
142 116 1 Ci
142 105 1 Ci
143 100 1 Ci
143 102 1 Ci
144 110 1 Ci
144 124 1 Ci
144 140 1 Ci
145 149 1 Ci
145 138 1 Ci
146 127 1 Ci
146 121 1 Ci
146 119 1 Ci
147 121 1 Ci
147 126 1 Ci
148 130 1 Ci
148 134 1 Ci
148 136 1 Ci
149 136 1 Ci
150 136 1 Ci
150 137 1 Ci
150 139 1 Ci
151 144 1 Ci
151 149 1 Ci
152 145 1 Ci
152 134 1 Ci
152 122 1 Ci
153 111 1 Ci
153 102 1 Ci
154 96 1 Ci
154 93 1 Ci
154 94 1 Ci
155 99 1 Ci
155 106 1 Ci
156 116 1 Ci
156 125 1 Ci
156 133 1 Ci
157 136 1 Ci
157 134 1 Ci
158 130 1 Ci
158 126 1 Ci
158 124 1 Ci
159 122 1 Ci
159 122 1 Ci
160 124 1 Ci
160 129 1 Ci
160 136 1 Ci
161 145 1 Ci
161 155 1 Ci
162 149 1 Ci
162 141 1 Ci
162 134 1 Ci
163 131 1 Ci
163 129 1 Ci
164 129 1 Ci
164 128 1 Ci
164 125 1 Ci
165 120 1 Ci
165 114 1 Ci
166 109 1 Ci
166 105 1 Ci
166 105 1 Ci
167 108 1 Ci
167 114 1 Ci
168 122 1 Ci
168 129 1 Ci
168 135 1 Ci
169 140 1 Ci
169 145 1 Ci
170 149 1 Ci
170 149 1 Ci
170 145 1 Ci
171 139 1 Ci
171 135 1 Ci
172 134 1 Ci
172 132 1 Ci
173 129 1 Ci
173 126 1 Ci
174 122 1 Ci
174 120 1 Ci
174 120 1 Ci
175 121 1 Ci
175 123 1 Ci
176 127 1 Ci
176 131 1 Ci
176 136 1 Ci
177 140 1 Ci
177 141 1 Ci
178 139 1 Ci
178 135 1 Ci
178 128 1 Ci
179 120 1 Ci
179 111 1 Ci
180 104 1 Ci
180 100 1 Ci
180 101 1 Ci
181 106 1 Ci
181 114 1 Ci
182 122 1 Ci
182 126 1 Ci
182 124 1 Ci
183 119 1 Ci
183 114 1 Ci
184 108 1 Ci
184 103 1 Ci
184 97 1 Ci
185 90 1 Ci
185 81 1 Ci
186 73 1 Ci
186 65 1 Ci
186 61 1 Ci
187 67 1 Ci
188 78 1 Ci
188 94 1 Ci
188 113 1 Ci
189 132 1 Ci
189 148 1 Ci
190 146 1 Ci
190 138 1 Ci
190 132 1 Ci
191 129 1 Ci
191 125 1 Ci
192 116 1 Ci
192 104 1 Ci
192 92 1 Ci
193 84 1 Ci
193 83 1 Ci
194 90 1 Ci
194 104 1 Ci
194 123 1 Ci
195 134 1 Ci
195 125 1 Ci
196 108 1 Ci
196 96 1 Ci
196 91 1 Ci
197 93 1 Ci
197 100 1 Ci
197 108 1 Ci
198 113 1 Ci
198 111 1 Ci
199 104 1 Ci
199 97 1 Ci
199 95 1 Ci
200 101 1 Ci
200 116 1 Ci
201 138 1 Ci
201 139 1 Ci
201 110 1 Ci
202 82 1 Ci
202 61 1 Ci
203 51 1 Ci
203 54 1 Ci
203 69 1 Ci
204 92 1 Ci
204 120 1 Ci
205 148 1 Ci
205 141 1 Ci
205 124 1 Ci
206 115 1 Ci
206 113 1 Ci
207 119 1 Ci
207 130 1 Ci
207 147 1 Ci
208 148 1 Ci
208 127 1 Ci
209 107 1 Ci
209 91 1 Ci
209 81 1 Ci
210 78 1 Ci
210 81 1 Ci
211 89 1 Ci
211 98 1 Ci
211 108 1 Ci
212 116 1 Ci
212 124 1 Ci
213 131 1 Ci
213 134 1 Ci
213 130 1 Ci
214 123 1 Ci
214 116 1 Ci
215 110 1 Ci
215 108 1 Ci
215 109 1 Ci
216 114 1 Ci
216 124 1 Ci
217 137 1 Ci
217 154 1 Ci
217 144 1 Ci
218 129 1 Ci
218 118 1 Ci
219 112 1 Ci
219 114 1 Ci
219 122 1 Ci
220 134 1 Ci
220 148 1 Ci
221 147 1 Ci
221 135 1 Ci
221 127 1 Ci
222 122 1 Ci
222 121 1 Ci
223 123 1 Ci
223 126 1 Ci
223 129 1 Ci
224 132 1 Ci
224 133 1 Ci
225 135 1 Ci
225 136 1 Ci
225 139 1 Ci
226 144 1 Ci
226 150 1 Ci
227 154 1 Ci
227 147 1 Ci
227 140 1 Ci
228 135 1 Ci
228 134 1 Ci
229 136 1 Ci
229 137 1 Ci
229 132 1 Ci
230 122 1 Ci
230 110 1 Ci
231 102 1 Ci
231 100 1 Ci
231 105 1 Ci
232 117 1 Ci
232 132 1 Ci
233 140 1 Ci
233 130 1 Ci
233 117 1 Ci
234 109 1 Ci
234 109 1 Ci
235 117 1 Ci
235 132 1 Ci
235 145 1 Ci
236 135 1 Ci
236 117 1 Ci
237 102 1 Ci
237 91 1 Ci
237 86 1 Ci
238 85 1 Ci
238 86 1 Ci
239 86 1 Ci
239 86 1 Ci
239 84 1 Ci
240 84 1 Ci
240 84 1 Ci
241 88 1 Ci
241 93 1 Ci
241 101 1 Ci
242 111 1 Ci
242 121 1 Ci
243 132 1 Ci
243 144 1 Ci
243 154 1 Ci
244 147 1 Ci
244 138 1 Ci
245 131 1 Ci
245 128 1 Ci
245 127 1 Ci
246 129 1 Ci
246 132 1 Ci
247 133 1 Ci
247 134 1 Ci
247 135 1 Ci
248 136 1 Ci
248 139 1 Ci
249 142 1 Ci
249 137 1 Ci
250 129 1 Ci
250 120 1 Ci
251 114 1 Ci
251 109 1 Ci
251 108 1 Ci
252 111 1 Ci
252 118 1 Ci
253 128 1 Ci
253 140 1 Ci
253 152 1 Ci
254 148 1 Ci
254 140 1 Ci
255 135 1 Ci
255 133 1 Ci
255 133 1 Ci
256 130 1 Ci
257 126 1 Ci
257 123 1 Ci
257 122 1 Ci
258 124 1 Ci
258 128 1 Ci
259 133 1 Ci
259 139 1 Ci
259 144 1 Ci
260 149 1 Ci
260 154 1 Ci
261 156 1 Ci
261 151 1 Ci
261 146 1 Ci
262 143 1 Ci
262 141 1 Ci
263 143 1 Ci
263 144 1 Ci
264 143 1 Ci
264 141 1 Ci
265 138 1 Ci
265 136 1 Ci
265 137 1 Ci
266 140 1 Ci
266 144 1 Ci
267 148 1 Ci
267 149 1 Ci
267 148 1 Ci
268 148 1 Ci
268 149 1 Ci
269 153 1 Ci
269 155 1 Ci
269 151 1 Ci
270 147 1 Ci
270 145 1 Ci
271 145 1 Ci
271 147 1 Ci
272 147 1 Ci
272 146 1 Ci
273 146 1 Ci
273 145 1 Ci
274 144 1 Ci
274 142 1 Ci
275 144 1 Ci
275 148 1 Ci
276 151 1 Ci
276 149 1 Ci
277 144 1 Ci
277 141 1 Ci
277 139 1 Ci
278 140 1 Ci
278 144 1 Ci
279 148 1 Ci
279 151 1 Ci
279 151 1 Ci
280 150 1 Ci
280 149 1 Ci
281 149 1 Ci
281 150 1 Ci
282 151 1 Ci
283 149 1 Ci
283 149 1 Ci
284 151 1 Ci
285 149 1 Ci
285 146 1 Ci
285 142 1 Ci
286 140 1 Ci
286 141 1 Ci
287 143 1 Ci
287 147 1 Ci
287 150 1 Ci
288 148 1 Ci
288 146 1 Ci
289 145 1 Ci
289 147 1 Ci
289 151 1 Ci
290 154 1 Ci
290 150 1 Ci
291 144 1 Ci
291 141 1 Ci
291 140 1 Ci
292 141 1 Ci
292 144 1 Ci
292 148 1 Ci
293 152 1 Ci
293 155 1 Ci
294 153 1 Ci
294 151 1 Ci
294 149 1 Ci
295 149 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 350 33 Box Fill

0 33 48 133 Box Fill

344 33 6 133 Box Fill

0 166 350 34 Box Fill

0.898039 0.898039 0.898039 SetBgColor
46 166 300 2 Box Fill

344 31 2 137 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 46 168 moveto
46 31 lineto
346 31 lineto
344 33 lineto
48 33 lineto
48 166 lineto
46 168 lineto
46 168  lineto closepath Fill
90 17 0 196 14 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+8, +126\)) 90 0 13 DrawAdjText
EndText
40 17 0 0 98 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.1) 36 2 13 DrawAdjText
EndText
49 17 0 56 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.05) 45 2 13 DrawAdjText
EndText
13 17 0 126 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
40 17 0 196 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.05) 36 2 13 DrawAdjText
EndText
31 17 0 266 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
56 171 336 171 LS
91 171 91 176 LS
56 171 56 179 LS
161 171 161 176 LS
126 171 126 179 LS
231 171 231 176 LS
196 171 196 179 LS
301 171 301 176 LS
266 171 266 179 LS
336 171 336 179 LS
13 17 0 329 181 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
22 17 0 22 158 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(20) 18 2 13 DrawAdjText
EndText
22 17 0 22 134 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(40) 18 2 13 DrawAdjText
EndText
22 17 0 22 111 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(60) 18 2 13 DrawAdjText
EndText
22 17 0 22 87 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(80) 18 2 13 DrawAdjText
EndText
31 17 0 17 64 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(100) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
43 158 43 41 LS
43 146 38 146 LS
43 158 35 158 LS
43 122 38 122 LS
43 134 35 134 LS
43 99 38 99 LS
43 111 35 111 LS
43 76 38 76 LS
43 87 35 87 LS
43 52 38 52 LS
43 64 35 64 LS
43 41 35 41 LS
showpage
%Trailer
grestore
end
%EOF
%%Page:
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 302 566 -299 224
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Tue Dec 19 17:15:26 2000)
%%Title: (/tmp/7.llDataPrint)
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Arrow
/Ar {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
					% b2 0 h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    neg					% -h2 b2
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

% Transform coordinate system to use X11 coordinates

% 1. Flip y-axis over by reversing the scale,
% 2. Translate the origin to the other side of the page,
%    making the origin the upper left corner
0.757382 -0.755721 scale
0 -1046 translate

% User defined page layout

% Set color level
/CL 2 def

% Set origin
400 750 translate


% Setting graph scale factor
 -2.27 -2.27 scale

%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
46 31 301 138 Box Fill

gsave clip


% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

96 76 3 Ci
97 76 3 Ci
97 75 3 Ci
98 73 3 Ci
98 68 3 Ci
99 60 3 Ci
99 145 3 Ci
99 130 3 Ci
100 121 3 Ci
100 115 3 Ci
100 110 3 Ci
101 107 3 Ci
101 106 3 Ci
102 107 3 Ci
102 113 3 Ci
103 122 3 Ci
103 129 3 Ci
104 133 3 Ci
104 135 3 Ci
104 138 3 Ci
105 142 3 Ci
105 49 3 Ci
106 59 3 Ci
106 64 3 Ci
106 65 3 Ci
107 63 3 Ci
107 56 3 Ci
108 142 3 Ci
108 130 3 Ci
108 124 3 Ci
109 120 3 Ci
109 116 3 Ci
110 113 3 Ci
110 110 3 Ci
110 109 3 Ci
111 124 3 Ci
111 146 3 Ci
112 146 3 Ci
112 146 3 Ci
113 49 3 Ci
113 77 3 Ci
114 84 3 Ci
114 85 3 Ci
115 85 3 Ci
116 88 3 Ci
116 95 3 Ci
117 110 3 Ci
117 117 3 Ci
118 119 3 Ci
118 119 3 Ci
118 118 3 Ci
119 116 3 Ci
119 108 3 Ci
120 85 3 Ci
120 77 3 Ci
120 74 3 Ci
121 73 3 Ci
121 72 3 Ci
122 72 3 Ci
122 72 3 Ci
123 72 3 Ci
124 72 3 Ci
124 72 3 Ci
125 74 3 Ci
126 77 3 Ci
126 82 3 Ci
126 90 3 Ci
127 100 3 Ci
127 107 3 Ci
128 111 3 Ci
128 115 3 Ci
128 119 3 Ci
129 124 3 Ci
129 132 3 Ci
130 143 3 Ci
130 52 3 Ci
130 57 3 Ci
131 59 3 Ci
131 59 3 Ci
132 58 3 Ci
132 55 3 Ci
132 52 3 Ci
133 49 3 Ci
133 147 3 Ci
134 147 3 Ci
134 85 3 Ci
134 92 3 Ci
135 91 3 Ci
136 91 3 Ci
137 92 3 Ci
137 98 3 Ci
138 130 3 Ci
138 135 3 Ci
138 136 3 Ci
139 137 3 Ci
140 138 3 Ci
140 140 3 Ci
140 143 3 Ci
141 148 3 Ci
141 55 3 Ci
142 61 3 Ci
142 65 3 Ci
142 67 3 Ci
143 67 3 Ci
143 58 3 Ci
144 135 3 Ci
144 133 3 Ci
144 135 3 Ci
145 137 3 Ci
145 140 3 Ci
146 142 3 Ci
146 144 3 Ci
146 145 3 Ci
147 146 3 Ci
147 147 3 Ci
148 146 3 Ci
148 115 3 Ci
148 105 3 Ci
149 105 3 Ci
150 106 3 Ci
150 106 3 Ci
151 108 3 Ci
151 112 3 Ci
152 137 3 Ci
152 49 3 Ci
152 52 3 Ci
153 52 3 Ci
153 53 3 Ci
154 55 3 Ci
154 57 3 Ci
155 60 3 Ci
155 62 3 Ci
156 63 3 Ci
156 64 3 Ci
156 65 3 Ci
157 63 3 Ci
158 61 3 Ci
158 57 3 Ci
158 54 3 Ci
159 53 3 Ci
159 56 3 Ci
160 65 3 Ci
160 73 3 Ci
160 77 3 Ci
161 79 3 Ci
161 80 3 Ci
162 80 3 Ci
162 82 3 Ci
162 85 3 Ci
163 98 3 Ci
163 110 3 Ci
164 112 3 Ci
164 108 3 Ci
164 102 3 Ci
165 97 3 Ci
165 93 3 Ci
166 91 3 Ci
166 89 3 Ci
166 86 3 Ci
167 81 3 Ci
167 65 3 Ci
168 53 3 Ci
168 50 3 Ci
168 50 3 Ci
169 52 3 Ci
169 56 3 Ci
170 62 3 Ci
170 70 3 Ci
170 76 3 Ci
171 81 3 Ci
171 86 3 Ci
172 91 3 Ci
172 97 3 Ci
172 103 3 Ci
173 106 3 Ci
173 107 3 Ci
174 105 3 Ci
174 99 3 Ci
175 91 3 Ci
175 82 3 Ci
176 73 3 Ci
176 61 3 Ci
176 148 3 Ci
177 140 3 Ci
177 135 3 Ci
178 132 3 Ci
178 129 3 Ci
178 126 3 Ci
179 121 3 Ci
179 81 3 Ci
180 75 3 Ci
180 72 3 Ci
180 69 3 Ci
181 67 3 Ci
181 64 3 Ci
182 62 3 Ci
182 61 3 Ci
182 61 3 Ci
183 63 3 Ci
183 69 3 Ci
184 79 3 Ci
184 87 3 Ci
184 94 3 Ci
185 102 3 Ci
185 110 3 Ci
186 116 3 Ci
186 119 3 Ci
186 122 3 Ci
187 124 3 Ci
187 127 3 Ci
188 133 3 Ci
188 148 3 Ci
188 61 3 Ci
189 66 3 Ci
189 68 3 Ci
190 71 3 Ci
190 74 3 Ci
190 80 3 Ci
191 89 3 Ci
191 99 3 Ci
192 107 3 Ci
192 113 3 Ci
192 119 3 Ci
193 126 3 Ci
193 133 3 Ci
194 140 3 Ci
194 146 3 Ci
194 50 3 Ci
195 55 3 Ci
195 59 3 Ci
196 63 3 Ci
196 67 3 Ci
196 69 3 Ci
197 72 3 Ci
197 74 3 Ci
197 75 3 Ci
198 78 3 Ci
198 84 3 Ci
199 109 3 Ci
199 118 3 Ci
199 119 3 Ci
200 119 3 Ci
201 119 3 Ci
201 118 3 Ci
202 139 3 Ci
202 62 3 Ci
203 62 3 Ci
203 63 3 Ci
203 66 3 Ci
204 69 3 Ci
204 74 3 Ci
205 76 3 Ci
205 78 3 Ci
206 77 3 Ci
207 80 3 Ci
207 88 3 Ci
208 105 3 Ci
208 111 3 Ci
209 113 3 Ci
209 113 3 Ci
209 114 3 Ci
210 120 3 Ci
210 57 3 Ci
211 59 3 Ci
211 59 3 Ci
212 59 3 Ci
213 60 3 Ci
213 72 3 Ci
214 105 3 Ci
214 109 3 Ci
215 113 3 Ci
215 121 3 Ci
215 129 3 Ci
216 135 3 Ci
216 137 3 Ci
217 139 3 Ci
217 139 3 Ci
217 139 3 Ci
218 139 3 Ci
218 139 3 Ci
219 140 3 Ci
219 145 3 Ci
220 65 3 Ci
220 77 3 Ci
221 81 3 Ci
221 84 3 Ci
221 86 3 Ci
222 87 3 Ci
222 88 3 Ci
223 87 3 Ci
223 85 3 Ci
224 82 3 Ci
224 78 3 Ci
225 75 3 Ci
225 73 3 Ci
226 75 3 Ci
226 79 3 Ci
227 84 3 Ci
227 90 3 Ci
227 95 3 Ci
228 99 3 Ci
228 102 3 Ci
229 108 3 Ci
229 125 3 Ci
229 143 3 Ci
230 149 3 Ci
230 52 3 Ci
231 56 3 Ci
231 60 3 Ci
231 65 3 Ci
232 69 3 Ci
232 72 3 Ci
233 74 3 Ci
233 74 3 Ci
233 75 3 Ci
234 77 3 Ci
234 80 3 Ci
235 83 3 Ci
235 87 3 Ci
235 91 3 Ci
236 93 3 Ci
236 96 3 Ci
237 99 3 Ci
237 103 3 Ci
237 109 3 Ci
238 119 3 Ci
238 128 3 Ci
239 134 3 Ci
239 138 3 Ci
239 144 3 Ci
240 49 3 Ci
240 55 3 Ci
241 59 3 Ci
241 62 3 Ci
241 64 3 Ci
242 66 3 Ci
242 71 3 Ci
243 87 3 Ci
243 100 3 Ci
243 103 3 Ci
244 104 3 Ci
244 103 3 Ci
245 103 3 Ci
245 101 3 Ci
246 100 3 Ci
246 100 3 Ci
247 101 3 Ci
247 104 3 Ci
247 108 3 Ci
248 110 3 Ci
248 111 3 Ci
249 111 3 Ci
249 113 3 Ci
250 114 3 Ci
250 121 3 Ci
251 147 3 Ci
251 55 3 Ci
251 58 3 Ci
252 59 3 Ci
252 61 3 Ci
253 63 3 Ci
253 67 3 Ci
253 83 3 Ci
254 105 3 Ci
254 110 3 Ci
255 113 3 Ci
255 116 3 Ci
255 120 3 Ci
256 125 3 Ci
256 142 3 Ci
257 66 3 Ci
257 74 3 Ci
257 80 3 Ci
258 85 3 Ci
258 91 3 Ci
259 99 3 Ci
259 108 3 Ci
259 117 3 Ci
260 124 3 Ci
260 129 3 Ci
261 132 3 Ci
261 135 3 Ci
261 138 3 Ci
262 57 3 Ci
262 85 3 Ci
263 87 3 Ci
263 89 3 Ci
263 89 3 Ci
264 89 3 Ci
264 87 3 Ci
265 84 3 Ci
265 81 3 Ci
265 79 3 Ci
266 77 3 Ci
266 76 3 Ci
267 75 3 Ci
267 72 3 Ci
267 54 3 Ci
268 133 3 Ci
268 129 3 Ci
269 126 3 Ci
269 122 3 Ci
269 118 3 Ci
270 112 3 Ci
270 105 3 Ci
271 100 3 Ci
271 95 3 Ci
271 90 3 Ci
272 84 3 Ci
272 76 3 Ci
273 69 3 Ci
273 66 3 Ci
273 66 3 Ci
274 73 3 Ci
274 89 3 Ci
275 96 3 Ci
275 99 3 Ci
275 101 3 Ci
276 103 3 Ci
276 106 3 Ci
277 110 3 Ci
277 118 3 Ci
277 131 3 Ci
278 143 3 Ci
278 53 3 Ci
279 64 3 Ci
279 75 3 Ci
279 82 3 Ci
280 87 3 Ci
280 90 3 Ci
281 94 3 Ci
281 98 3 Ci
281 104 3 Ci
282 112 3 Ci
282 119 3 Ci
283 123 3 Ci
283 124 3 Ci
283 121 3 Ci
284 117 3 Ci
284 114 3 Ci
285 112 3 Ci
285 113 3 Ci
286 114 3 Ci
286 114 3 Ci
287 111 3 Ci
287 78 3 Ci
287 74 3 Ci
288 75 3 Ci
289 77 3 Ci
289 82 3 Ci
289 99 3 Ci
290 112 3 Ci
290 116 3 Ci
291 117 3 Ci
291 116 3 Ci
292 114 3 Ci
292 110 3 Ci
292 85 3 Ci
293 70 3 Ci
293 68 3 Ci
294 67 3 Ci
294 67 3 Ci
294 69 3 Ci
295 71 3 Ci

% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 96 146 moveto
 97 145 lineto
 97 146 lineto
 98 148 lineto
 98 150 lineto
 99 153 lineto
 99 154 lineto
 99 153 lineto
 100 151 lineto
 100 149 lineto
 100 147 lineto
 101 145 lineto
 101 145 lineto
 102 146 lineto
 102 147 lineto
 102 150 lineto
 103 149 lineto
 104 147 lineto
 104 147 lineto
 104 148 lineto
 105 150 lineto
 105 152 lineto
 106 151 lineto
 107 152 lineto
 107 154 lineto
 108 154 lineto
 108 153 lineto
 108 151 lineto
 109 150 lineto
 109 150 lineto
 110 152 lineto
 110 155 lineto
 111 157 lineto
 111 155 lineto
 112 153 lineto
 112 152 lineto
 112 152 lineto
 113 155 lineto
 113 155 lineto
 114 150 lineto
 114 145 lineto
 114 141 lineto
 115 139 lineto
 115 139 lineto
 116 141 lineto
 116 146 lineto
 116 151 lineto
 117 151 lineto
 117 148 lineto
 118 145 lineto
 118 145 lineto
 118 146 lineto
 119 150 lineto
 119 154 lineto
 120 151 lineto
 120 148 lineto
 121 147 lineto
 121 147 lineto
 122 147 lineto
 122 148 lineto
 123 147 lineto
 123 145 lineto
 124 142 lineto
 124 140 lineto
 124 138 lineto
 125 138 lineto
 125 139 lineto
 126 142 lineto
 126 146 lineto
 126 148 lineto
 127 146 lineto
 128 145 lineto
 128 145 lineto
 128 146 lineto
 129 149 lineto
 129 151 lineto
 130 152 lineto
 130 150 lineto
 130 148 lineto
 131 147 lineto
 131 146 lineto
 132 147 lineto
 132 147 lineto
 133 150 lineto
 134 153 lineto
 134 156 lineto
 134 150 lineto
 135 143 lineto
 135 138 lineto
 136 134 lineto
 136 134 lineto
 136 137 lineto
 137 143 lineto
 137 152 lineto
 138 142 lineto
 138 135 lineto
 139 130 lineto
 139 128 lineto
 140 130 lineto
 140 134 lineto
 140 139 lineto
 141 143 lineto
 141 145 lineto
 142 145 lineto
 142 146 lineto
 142 148 lineto
 143 151 lineto
 143 155 lineto
 144 153 lineto
 144 148 lineto
 144 142 lineto
 145 137 lineto
 145 133 lineto
 146 130 lineto
 146 128 lineto
 146 129 lineto
 147 133 lineto
 147 140 lineto
 148 149 lineto
 148 154 lineto
 148 145 lineto
 149 137 lineto
 149 132 lineto
 150 130 lineto
 150 132 lineto
 150 137 lineto
 151 144 lineto
 151 151 lineto
 152 155 lineto
 152 150 lineto
 152 146 lineto
 153 144 lineto
 153 142 lineto
 154 141 lineto
 154 140 lineto
 154 139 lineto
 155 137 lineto
 155 135 lineto
 156 132 lineto
 156 131 lineto
 156 131 lineto
 157 133 lineto
 157 136 lineto
 158 139 lineto
 158 143 lineto
 158 145 lineto
 159 147 lineto
 159 149 lineto
 160 149 lineto
 160 145 lineto
 160 140 lineto
 161 136 lineto
 161 134 lineto
 162 136 lineto
 162 141 lineto
 162 147 lineto
 163 152 lineto
 163 150 lineto
 164 146 lineto
 164 143 lineto
 164 140 lineto
 165 135 lineto
 165 130 lineto
 166 127 lineto
 166 133 lineto
 167 142 lineto
 167 147 lineto
 168 140 lineto
 168 131 lineto
 168 126 lineto
 169 125 lineto
 169 128 lineto
 170 130 lineto
 170 130 lineto
 170 127 lineto
 171 125 lineto
 171 125 lineto
 172 126 lineto
 172 125 lineto
 173 123 lineto
 173 124 lineto
 174 127 lineto
 174 133 lineto
 174 139 lineto
 175 143 lineto
 175 145 lineto
 176 146 lineto
 176 147 lineto
 176 146 lineto
 177 141 lineto
 177 136 lineto
 178 134 lineto
 178 136 lineto
 178 142 lineto
 179 151 lineto
 179 152 lineto
 180 142 lineto
 180 133 lineto
 180 127 lineto
 181 124 lineto
 181 123 lineto
 182 125 lineto
 182 129 lineto
 182 134 lineto
 183 140 lineto
 183 145 lineto
 184 147 lineto
 184 146 lineto
 184 145 lineto
 185 144 lineto
 185 141 lineto
 186 135 lineto
 186 130 lineto
 186 127 lineto
 187 133 lineto
 188 141 lineto
 188 146 lineto
 188 138 lineto
 189 128 lineto
 189 122 lineto
 190 120 lineto
 190 123 lineto
 190 130 lineto
 191 134 lineto
 191 133 lineto
 192 128 lineto
 192 123 lineto
 192 121 lineto
 193 119 lineto
 193 116 lineto
 194 109 lineto
 194 101 lineto
 194 92 lineto
 195 85 lineto
 195 79 lineto
 196 74 lineto
 196 70 lineto
 196 69 lineto
 197 73 lineto
 197 83 lineto
 197 98 lineto
 198 119 lineto
 198 140 lineto
 199 145 lineto
 199 130 lineto
 199 119 lineto
 200 115 lineto
 200 117 lineto
 201 124 lineto
 201 135 lineto
 201 146 lineto
 202 156 lineto
 202 149 lineto
 203 143 lineto
 203 141 lineto
 203 140 lineto
 204 138 lineto
 204 135 lineto
 205 129 lineto
 205 123 lineto
 205 118 lineto
 206 116 lineto
 206 118 lineto
 207 125 lineto
 207 136 lineto
 207 145 lineto
 208 144 lineto
 208 135 lineto
 209 130 lineto
 209 130 lineto
 209 138 lineto
 210 151 lineto
 210 144 lineto
 211 125 lineto
 211 109 lineto
 211 99 lineto
 212 97 lineto
 212 104 lineto
 213 118 lineto
 213 136 lineto
 213 153 lineto
 214 145 lineto
 214 136 lineto
 215 133 lineto
 215 132 lineto
 215 126 lineto
 216 112 lineto
 216 97 lineto
 217 85 lineto
 217 79 lineto
 218 86 lineto
 218 98 lineto
 219 113 lineto
 219 129 lineto
 219 144 lineto
 220 149 lineto
 220 141 lineto
 221 133 lineto
 221 127 lineto
 221 123 lineto
 222 119 lineto
 222 117 lineto
 223 117 lineto
 223 118 lineto
 223 120 lineto
 224 122 lineto
 224 122 lineto
 225 120 lineto
 225 120 lineto
 225 121 lineto
 226 125 lineto
 226 130 lineto
 227 133 lineto
 227 133 lineto
 228 135 lineto
 228 140 lineto
 229 147 lineto
 229 152 lineto
 229 148 lineto
 230 143 lineto
 230 140 lineto
 231 140 lineto
 231 140 lineto
 232 140 lineto
 233 139 lineto
 234 139 lineto
 235 138 lineto
 235 136 lineto
 235 134 lineto
 236 132 lineto
 236 132 lineto
 237 135 lineto
 237 139 lineto
 237 143 lineto
 238 145 lineto
 238 144 lineto
 239 142 lineto
 239 141 lineto
 240 140 lineto
 241 138 lineto
 241 137 lineto
 241 138 lineto
 242 141 lineto
 242 147 lineto
 243 150 lineto
 243 143 lineto
 243 133 lineto
 244 125 lineto
 244 119 lineto
 245 117 lineto
 245 119 lineto
 245 124 lineto
 246 131 lineto
 246 137 lineto
 247 142 lineto
 247 143 lineto
 247 141 lineto
 248 135 lineto
 248 128 lineto
 249 124 lineto
 249 123 lineto
 249 128 lineto
 250 136 lineto
 250 147 lineto
 251 148 lineto
 251 138 lineto
 251 130 lineto
 252 126 lineto
 252 129 lineto
 253 135 lineto
 253 145 lineto
 253 153 lineto
 254 148 lineto
 254 143 lineto
 255 141 lineto
 255 142 lineto
 255 146 lineto
 256 151 lineto
 256 155 lineto
 257 153 lineto
 257 150 lineto
 257 147 lineto
 258 147 lineto
 258 147 lineto
 259 148 lineto
 259 149 lineto
 259 148 lineto
 260 146 lineto
 260 146 lineto
 261 146 lineto
 261 149 lineto
 261 153 lineto
 262 157 lineto
 262 153 lineto
 263 150 lineto
 263 148 lineto
 263 147 lineto
 264 149 lineto
 265 149 lineto
 265 149 lineto
 266 149 lineto
 267 150 lineto
 267 153 lineto
 267 156 lineto
 268 153 lineto
 268 150 lineto
 269 148 lineto
 269 147 lineto
 269 147 lineto
 270 147 lineto
 271 148 lineto
 272 149 lineto
 272 150 lineto
 273 150 lineto
 273 151 lineto
 274 153 lineto
 274 152 lineto
 275 149 lineto
 275 145 lineto
 275 143 lineto
 276 145 lineto
 277 148 lineto
 277 152 lineto
 277 153 lineto
 278 153 lineto
 278 153 lineto
 279 151 lineto
 279 149 lineto
 280 147 lineto
 280 146 lineto
 281 149 lineto
 281 151 lineto
 282 152 lineto
 282 152 lineto
 283 152 lineto
 284 151 lineto
 285 150 lineto
 285 149 lineto
 285 150 lineto
 286 151 lineto
 286 153 lineto
 287 156 lineto
 287 153 lineto
 288 151 lineto
 288 151 lineto
 289 152 lineto
 289 154 lineto
 289 155 lineto
 290 153 lineto
 290 150 lineto
 291 148 lineto
 291 148 lineto
 291 149 lineto
 292 151 lineto
 292 154 lineto
 292 156 lineto
 293 154 lineto
 293 152 lineto
 294 150 lineto
 294 150 lineto
 295 148 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

96 146 1 Ci
97 145 1 Ci
97 146 1 Ci
98 148 1 Ci
98 150 1 Ci
99 153 1 Ci
99 154 1 Ci
99 153 1 Ci
100 151 1 Ci
100 149 1 Ci
100 147 1 Ci
101 145 1 Ci
101 145 1 Ci
102 146 1 Ci
102 147 1 Ci
102 150 1 Ci
103 149 1 Ci
104 147 1 Ci
104 147 1 Ci
104 148 1 Ci
105 150 1 Ci
105 152 1 Ci
106 151 1 Ci
107 152 1 Ci
107 154 1 Ci
108 154 1 Ci
108 153 1 Ci
108 151 1 Ci
109 150 1 Ci
109 150 1 Ci
110 152 1 Ci
110 155 1 Ci
111 157 1 Ci
111 155 1 Ci
112 153 1 Ci
112 152 1 Ci
112 152 1 Ci
113 155 1 Ci
113 155 1 Ci
114 150 1 Ci
114 145 1 Ci
114 141 1 Ci
115 139 1 Ci
115 139 1 Ci
116 141 1 Ci
116 146 1 Ci
116 151 1 Ci
117 151 1 Ci
117 148 1 Ci
118 145 1 Ci
118 145 1 Ci
118 146 1 Ci
119 150 1 Ci
119 154 1 Ci
120 151 1 Ci
120 148 1 Ci
121 147 1 Ci
121 147 1 Ci
122 147 1 Ci
122 148 1 Ci
123 147 1 Ci
123 145 1 Ci
124 142 1 Ci
124 140 1 Ci
124 138 1 Ci
125 138 1 Ci
125 139 1 Ci
126 142 1 Ci
126 146 1 Ci
126 148 1 Ci
127 146 1 Ci
128 145 1 Ci
128 145 1 Ci
128 146 1 Ci
129 149 1 Ci
129 151 1 Ci
130 152 1 Ci
130 150 1 Ci
130 148 1 Ci
131 147 1 Ci
131 146 1 Ci
132 147 1 Ci
132 147 1 Ci
133 150 1 Ci
134 153 1 Ci
134 156 1 Ci
134 150 1 Ci
135 143 1 Ci
135 138 1 Ci
136 134 1 Ci
136 134 1 Ci
136 137 1 Ci
137 143 1 Ci
137 152 1 Ci
138 142 1 Ci
138 135 1 Ci
139 130 1 Ci
139 128 1 Ci
140 130 1 Ci
140 134 1 Ci
140 139 1 Ci
141 143 1 Ci
141 145 1 Ci
142 145 1 Ci
142 146 1 Ci
142 148 1 Ci
143 151 1 Ci
143 155 1 Ci
144 153 1 Ci
144 148 1 Ci
144 142 1 Ci
145 137 1 Ci
145 133 1 Ci
146 130 1 Ci
146 128 1 Ci
146 129 1 Ci
147 133 1 Ci
147 140 1 Ci
148 149 1 Ci
148 154 1 Ci
148 145 1 Ci
149 137 1 Ci
149 132 1 Ci
150 130 1 Ci
150 132 1 Ci
150 137 1 Ci
151 144 1 Ci
151 151 1 Ci
152 155 1 Ci
152 150 1 Ci
152 146 1 Ci
153 144 1 Ci
153 142 1 Ci
154 141 1 Ci
154 140 1 Ci
154 139 1 Ci
155 137 1 Ci
155 135 1 Ci
156 132 1 Ci
156 131 1 Ci
156 131 1 Ci
157 133 1 Ci
157 136 1 Ci
158 139 1 Ci
158 143 1 Ci
158 145 1 Ci
159 147 1 Ci
159 149 1 Ci
160 149 1 Ci
160 145 1 Ci
160 140 1 Ci
161 136 1 Ci
161 134 1 Ci
162 136 1 Ci
162 141 1 Ci
162 147 1 Ci
163 152 1 Ci
163 150 1 Ci
164 146 1 Ci
164 143 1 Ci
164 140 1 Ci
165 135 1 Ci
165 130 1 Ci
166 127 1 Ci
166 133 1 Ci
167 142 1 Ci
167 147 1 Ci
168 140 1 Ci
168 131 1 Ci
168 126 1 Ci
169 125 1 Ci
169 128 1 Ci
170 130 1 Ci
170 130 1 Ci
170 127 1 Ci
171 125 1 Ci
171 125 1 Ci
172 126 1 Ci
172 125 1 Ci
173 123 1 Ci
173 124 1 Ci
174 127 1 Ci
174 133 1 Ci
174 139 1 Ci
175 143 1 Ci
175 145 1 Ci
176 146 1 Ci
176 147 1 Ci
176 146 1 Ci
177 141 1 Ci
177 136 1 Ci
178 134 1 Ci
178 136 1 Ci
178 142 1 Ci
179 151 1 Ci
179 152 1 Ci
180 142 1 Ci
180 133 1 Ci
180 127 1 Ci
181 124 1 Ci
181 123 1 Ci
182 125 1 Ci
182 129 1 Ci
182 134 1 Ci
183 140 1 Ci
183 145 1 Ci
184 147 1 Ci
184 146 1 Ci
184 145 1 Ci
185 144 1 Ci
185 141 1 Ci
186 135 1 Ci
186 130 1 Ci
186 127 1 Ci
187 133 1 Ci
188 141 1 Ci
188 146 1 Ci
188 138 1 Ci
189 128 1 Ci
189 122 1 Ci
190 120 1 Ci
190 123 1 Ci
190 130 1 Ci
191 134 1 Ci
191 133 1 Ci
192 128 1 Ci
192 123 1 Ci
192 121 1 Ci
193 119 1 Ci
193 116 1 Ci
194 109 1 Ci
194 101 1 Ci
194 92 1 Ci
195 85 1 Ci
195 79 1 Ci
196 74 1 Ci
196 70 1 Ci
196 69 1 Ci
197 73 1 Ci
197 83 1 Ci
197 98 1 Ci
198 119 1 Ci
198 140 1 Ci
199 145 1 Ci
199 130 1 Ci
199 119 1 Ci
200 115 1 Ci
200 117 1 Ci
201 124 1 Ci
201 135 1 Ci
201 146 1 Ci
202 156 1 Ci
202 149 1 Ci
203 143 1 Ci
203 141 1 Ci
203 140 1 Ci
204 138 1 Ci
204 135 1 Ci
205 129 1 Ci
205 123 1 Ci
205 118 1 Ci
206 116 1 Ci
206 118 1 Ci
207 125 1 Ci
207 136 1 Ci
207 145 1 Ci
208 144 1 Ci
208 135 1 Ci
209 130 1 Ci
209 130 1 Ci
209 138 1 Ci
210 151 1 Ci
210 144 1 Ci
211 125 1 Ci
211 109 1 Ci
211 99 1 Ci
212 97 1 Ci
212 104 1 Ci
213 118 1 Ci
213 136 1 Ci
213 153 1 Ci
214 145 1 Ci
214 136 1 Ci
215 133 1 Ci
215 132 1 Ci
215 126 1 Ci
216 112 1 Ci
216 97 1 Ci
217 85 1 Ci
217 79 1 Ci
218 86 1 Ci
218 98 1 Ci
219 113 1 Ci
219 129 1 Ci
219 144 1 Ci
220 149 1 Ci
220 141 1 Ci
221 133 1 Ci
221 127 1 Ci
221 123 1 Ci
222 119 1 Ci
222 117 1 Ci
223 117 1 Ci
223 118 1 Ci
223 120 1 Ci
224 122 1 Ci
224 122 1 Ci
225 120 1 Ci
225 120 1 Ci
225 121 1 Ci
226 125 1 Ci
226 130 1 Ci
227 133 1 Ci
227 133 1 Ci
228 135 1 Ci
228 140 1 Ci
229 147 1 Ci
229 152 1 Ci
229 148 1 Ci
230 143 1 Ci
230 140 1 Ci
231 140 1 Ci
231 140 1 Ci
232 140 1 Ci
233 139 1 Ci
234 139 1 Ci
235 138 1 Ci
235 136 1 Ci
235 134 1 Ci
236 132 1 Ci
236 132 1 Ci
237 135 1 Ci
237 139 1 Ci
237 143 1 Ci
238 145 1 Ci
238 144 1 Ci
239 142 1 Ci
239 141 1 Ci
240 140 1 Ci
241 138 1 Ci
241 137 1 Ci
241 138 1 Ci
242 141 1 Ci
242 147 1 Ci
243 150 1 Ci
243 143 1 Ci
243 133 1 Ci
244 125 1 Ci
244 119 1 Ci
245 117 1 Ci
245 119 1 Ci
245 124 1 Ci
246 131 1 Ci
246 137 1 Ci
247 142 1 Ci
247 143 1 Ci
247 141 1 Ci
248 135 1 Ci
248 128 1 Ci
249 124 1 Ci
249 123 1 Ci
249 128 1 Ci
250 136 1 Ci
250 147 1 Ci
251 148 1 Ci
251 138 1 Ci
251 130 1 Ci
252 126 1 Ci
252 129 1 Ci
253 135 1 Ci
253 145 1 Ci
253 153 1 Ci
254 148 1 Ci
254 143 1 Ci
255 141 1 Ci
255 142 1 Ci
255 146 1 Ci
256 151 1 Ci
256 155 1 Ci
257 153 1 Ci
257 150 1 Ci
257 147 1 Ci
258 147 1 Ci
258 147 1 Ci
259 148 1 Ci
259 149 1 Ci
259 148 1 Ci
260 146 1 Ci
260 146 1 Ci
261 146 1 Ci
261 149 1 Ci
261 153 1 Ci
262 157 1 Ci
262 153 1 Ci
263 150 1 Ci
263 148 1 Ci
263 147 1 Ci
264 149 1 Ci
265 149 1 Ci
265 149 1 Ci
266 149 1 Ci
267 150 1 Ci
267 153 1 Ci
267 156 1 Ci
268 153 1 Ci
268 150 1 Ci
269 148 1 Ci
269 147 1 Ci
269 147 1 Ci
270 147 1 Ci
271 148 1 Ci
272 149 1 Ci
272 150 1 Ci
273 150 1 Ci
273 151 1 Ci
274 153 1 Ci
274 152 1 Ci
275 149 1 Ci
275 145 1 Ci
275 143 1 Ci
276 145 1 Ci
277 148 1 Ci
277 152 1 Ci
277 153 1 Ci
278 153 1 Ci
278 153 1 Ci
279 151 1 Ci
279 149 1 Ci
280 147 1 Ci
280 146 1 Ci
281 149 1 Ci
281 151 1 Ci
282 152 1 Ci
282 152 1 Ci
283 152 1 Ci
284 151 1 Ci
285 150 1 Ci
285 149 1 Ci
285 150 1 Ci
286 151 1 Ci
286 153 1 Ci
287 156 1 Ci
287 153 1 Ci
288 151 1 Ci
288 151 1 Ci
289 152 1 Ci
289 154 1 Ci
289 155 1 Ci
290 153 1 Ci
290 150 1 Ci
291 148 1 Ci
291 148 1 Ci
291 149 1 Ci
292 151 1 Ci
292 154 1 Ci
292 156 1 Ci
293 154 1 Ci
293 152 1 Ci
294 150 1 Ci
294 150 1 Ci
295 148 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 350 33 Box Fill

0 33 48 133 Box Fill

344 33 6 133 Box Fill

0 166 350 34 Box Fill

0.898039 0.898039 0.898039 SetBgColor
46 166 300 2 Box Fill

344 31 2 137 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 46 168 moveto
46 31 lineto
346 31 lineto
344 33 lineto
48 33 lineto
48 166 lineto
46 168 lineto
46 168  lineto closepath Fill
90 17 0 196 14 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+0, +161\)) 90 0 13 DrawAdjText
EndText
40 17 0 0 98 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.1) 36 2 13 DrawAdjText
EndText
49 17 0 56 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.05) 45 2 13 DrawAdjText
EndText
13 17 0 126 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
40 17 0 196 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.05) 36 2 13 DrawAdjText
EndText
31 17 0 266 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
56 171 336 171 LS
91 171 91 176 LS
56 171 56 179 LS
161 171 161 176 LS
126 171 126 179 LS
231 171 231 176 LS
196 171 196 179 LS
301 171 301 176 LS
266 171 266 179 LS
336 171 336 179 LS
13 17 0 329 181 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
22 17 0 22 158 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(50) 18 2 13 DrawAdjText
EndText
31 17 0 17 119 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(100) 27 2 13 DrawAdjText
EndText
31 17 0 17 80 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(150) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
43 158 43 41 LS
43 138 38 138 LS
43 158 35 158 LS
43 99 38 99 LS
43 119 35 119 LS
43 60 38 60 LS
43 80 35 80 LS
43 41 35 41 LS
showpage
%Trailer
grestore
end
%EOF
%%Page:
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 37 640 303 791
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Tue Dec 19 17:15:26 2000)
%%Title: (/tmp/8.llDataPrint)
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Arrow
/Ar {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
					% b2 0 h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    neg					% -h2 b2
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

% Transform coordinate system to use X11 coordinates

% 1. Flip y-axis over by reversing the scale,
% 2. Translate the origin to the other side of the page,
%    making the origin the upper left corner
0.757382 -0.755721 scale
0 -1046 translate

% User defined page layout

% Set color level
/CL 2 def

% Set origin
50 0 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
46 31 301 138 Box Fill

gsave clip


% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

96 144 3 Ci
97 53 3 Ci
97 77 3 Ci
97 70 3 Ci
98 140 3 Ci
98 140 3 Ci
99 141 3 Ci
99 142 3 Ci
99 143 3 Ci
100 145 3 Ci
100 147 3 Ci
100 50 3 Ci
101 56 3 Ci
101 67 3 Ci
102 78 3 Ci
102 85 3 Ci
102 90 3 Ci
103 93 3 Ci
103 96 3 Ci
104 99 3 Ci
104 81 3 Ci
104 62 3 Ci
105 64 3 Ci
105 67 3 Ci
106 69 3 Ci
106 70 3 Ci
106 70 3 Ci
107 68 3 Ci
107 63 3 Ci
108 54 3 Ci
108 49 3 Ci
109 54 3 Ci
109 62 3 Ci
110 69 3 Ci
110 74 3 Ci
110 77 3 Ci
111 79 3 Ci
111 81 3 Ci
112 83 3 Ci
112 84 3 Ci
112 85 3 Ci
113 86 3 Ci
113 86 3 Ci
114 84 3 Ci
114 79 3 Ci
114 73 3 Ci
115 69 3 Ci
115 66 3 Ci
116 64 3 Ci
116 62 3 Ci
116 60 3 Ci
117 59 3 Ci
117 59 3 Ci
118 58 3 Ci
119 60 3 Ci
119 109 3 Ci
120 109 3 Ci
120 109 3 Ci
121 109 3 Ci
122 107 3 Ci
122 101 3 Ci
122 78 3 Ci
123 69 3 Ci
123 66 3 Ci
124 65 3 Ci
124 63 3 Ci
124 61 3 Ci
125 58 3 Ci
125 54 3 Ci
126 147 3 Ci
126 136 3 Ci
126 125 3 Ci
127 115 3 Ci
127 108 3 Ci
128 103 3 Ci
128 100 3 Ci
128 98 3 Ci
129 97 3 Ci
129 96 3 Ci
130 96 3 Ci
130 96 3 Ci
130 96 3 Ci
131 98 3 Ci
131 103 3 Ci
132 116 3 Ci
132 127 3 Ci
132 129 3 Ci
133 128 3 Ci
134 127 3 Ci
134 125 3 Ci
134 124 3 Ci
135 123 3 Ci
135 124 3 Ci
136 127 3 Ci
136 133 3 Ci
136 138 3 Ci
137 140 3 Ci
137 141 3 Ci
138 141 3 Ci
138 140 3 Ci
138 138 3 Ci
139 134 3 Ci
139 129 3 Ci
140 124 3 Ci
140 121 3 Ci
140 121 3 Ci
141 123 3 Ci
141 128 3 Ci
142 133 3 Ci
142 137 3 Ci
142 139 3 Ci
143 143 3 Ci
143 86 3 Ci
144 89 3 Ci
144 89 3 Ci
145 89 3 Ci
145 88 3 Ci
146 86 3 Ci
146 82 3 Ci
146 75 3 Ci
147 66 3 Ci
147 59 3 Ci
148 55 3 Ci
148 52 3 Ci
148 50 3 Ci
149 148 3 Ci
149 145 3 Ci
150 143 3 Ci
150 141 3 Ci
150 141 3 Ci
151 142 3 Ci
151 145 3 Ci
152 148 3 Ci
152 52 3 Ci
152 58 3 Ci
153 64 3 Ci
153 72 3 Ci
154 78 3 Ci
154 83 3 Ci
154 86 3 Ci
155 88 3 Ci
155 89 3 Ci
156 86 3 Ci
156 79 3 Ci
157 72 3 Ci
157 68 3 Ci
158 68 3 Ci
158 70 3 Ci
158 75 3 Ci
159 84 3 Ci
159 91 3 Ci
160 96 3 Ci
160 98 3 Ci
160 100 3 Ci
161 101 3 Ci
161 101 3 Ci
162 100 3 Ci
162 98 3 Ci
163 102 3 Ci
163 107 3 Ci
164 105 3 Ci
164 104 3 Ci
165 102 3 Ci
165 99 3 Ci
166 92 3 Ci
166 81 3 Ci
166 73 3 Ci
167 70 3 Ci
167 69 3 Ci
168 72 3 Ci
168 81 3 Ci
168 92 3 Ci
169 96 3 Ci
169 96 3 Ci
170 94 3 Ci
170 91 3 Ci
170 88 3 Ci
171 84 3 Ci
171 80 3 Ci
172 77 3 Ci
172 74 3 Ci
172 72 3 Ci
173 69 3 Ci
173 66 3 Ci
174 61 3 Ci
174 54 3 Ci
174 148 3 Ci
175 145 3 Ci
175 143 3 Ci
176 145 3 Ci
176 149 3 Ci
177 53 3 Ci
177 56 3 Ci
178 51 3 Ci
178 147 3 Ci
179 145 3 Ci
179 145 3 Ci
180 146 3 Ci
180 147 3 Ci
180 148 3 Ci
181 50 3 Ci
181 52 3 Ci
182 54 3 Ci
182 57 3 Ci
182 62 3 Ci
183 69 3 Ci
183 77 3 Ci
184 86 3 Ci
184 92 3 Ci
184 96 3 Ci
185 99 3 Ci
185 101 3 Ci
186 103 3 Ci
186 104 3 Ci
186 105 3 Ci
187 106 3 Ci
187 108 3 Ci
188 110 3 Ci
188 113 3 Ci
188 117 3 Ci
189 121 3 Ci
189 124 3 Ci
190 124 3 Ci
190 104 3 Ci
190 92 3 Ci
191 91 3 Ci
191 91 3 Ci
192 90 3 Ci
193 90 3 Ci
193 88 3 Ci
194 85 3 Ci
194 79 3 Ci
194 72 3 Ci
195 68 3 Ci
195 66 3 Ci
196 67 3 Ci
196 67 3 Ci
197 67 3 Ci
197 64 3 Ci
197 55 3 Ci
198 143 3 Ci
198 136 3 Ci
199 133 3 Ci
199 130 3 Ci
199 126 3 Ci
200 119 3 Ci
200 109 3 Ci
201 101 3 Ci
201 96 3 Ci
201 92 3 Ci
202 90 3 Ci
202 87 3 Ci
203 82 3 Ci
203 72 3 Ci
203 59 3 Ci
204 53 3 Ci
204 50 3 Ci
205 149 3 Ci
205 149 3 Ci
205 49 3 Ci
206 52 3 Ci
206 55 3 Ci
207 60 3 Ci
207 60 3 Ci
207 54 3 Ci
208 148 3 Ci
208 144 3 Ci
209 142 3 Ci
209 140 3 Ci
209 139 3 Ci
210 137 3 Ci
210 134 3 Ci
211 129 3 Ci
211 119 3 Ci
211 110 3 Ci
212 108 3 Ci
212 114 3 Ci
213 122 3 Ci
213 125 3 Ci
213 126 3 Ci
214 125 3 Ci
215 124 3 Ci
215 123 3 Ci
215 122 3 Ci
216 122 3 Ci
216 121 3 Ci
217 121 3 Ci
218 119 3 Ci
219 117 3 Ci
219 113 3 Ci
219 105 3 Ci
220 95 3 Ci
220 88 3 Ci
221 82 3 Ci
221 77 3 Ci
221 71 3 Ci
222 66 3 Ci
222 62 3 Ci
223 60 3 Ci
223 59 3 Ci
224 61 3 Ci
225 64 3 Ci
225 68 3 Ci
225 75 3 Ci
226 84 3 Ci
226 92 3 Ci
227 97 3 Ci
227 99 3 Ci
227 101 3 Ci
228 103 3 Ci
229 103 3 Ci
230 91 3 Ci
230 60 3 Ci
231 59 3 Ci
231 59 3 Ci
231 61 3 Ci
232 65 3 Ci
232 70 3 Ci
233 76 3 Ci
233 80 3 Ci
233 83 3 Ci
234 84 3 Ci
234 83 3 Ci
235 77 3 Ci
235 50 3 Ci
235 141 3 Ci
236 138 3 Ci
236 136 3 Ci
237 133 3 Ci
237 131 3 Ci
237 127 3 Ci
238 123 3 Ci
238 113 3 Ci
239 88 3 Ci
239 76 3 Ci
239 71 3 Ci
240 67 3 Ci
240 65 3 Ci
241 63 3 Ci
241 61 3 Ci
241 61 3 Ci
242 62 3 Ci
242 71 3 Ci
243 85 3 Ci
243 89 3 Ci
244 86 3 Ci
244 82 3 Ci
245 73 3 Ci
245 62 3 Ci
245 53 3 Ci
246 149 3 Ci
246 146 3 Ci
247 145 3 Ci
247 145 3 Ci
247 148 3 Ci
248 54 3 Ci
248 60 3 Ci
249 63 3 Ci
249 64 3 Ci
249 63 3 Ci
250 62 3 Ci
250 60 3 Ci
251 57 3 Ci
251 51 3 Ci
251 137 3 Ci
252 123 3 Ci
252 116 3 Ci
253 113 3 Ci
253 112 3 Ci
253 112 3 Ci
254 112 3 Ci
254 114 3 Ci
255 114 3 Ci
255 115 3 Ci
255 115 3 Ci
256 115 3 Ci
257 118 3 Ci
257 131 3 Ci
258 52 3 Ci
258 55 3 Ci
259 53 3 Ci
260 52 3 Ci
260 53 3 Ci
261 76 3 Ci
261 88 3 Ci
261 86 3 Ci
262 82 3 Ci
262 77 3 Ci
263 73 3 Ci
263 70 3 Ci
263 68 3 Ci
264 67 3 Ci
264 68 3 Ci
265 71 3 Ci
265 79 3 Ci
265 87 3 Ci
266 92 3 Ci
266 94 3 Ci
267 96 3 Ci
267 98 3 Ci
267 101 3 Ci
268 108 3 Ci
268 116 3 Ci
269 121 3 Ci
269 122 3 Ci
269 119 3 Ci
270 114 3 Ci
270 109 3 Ci
271 106 3 Ci
271 105 3 Ci
271 105 3 Ci
272 106 3 Ci
272 108 3 Ci
273 109 3 Ci
273 109 3 Ci
274 107 3 Ci
274 105 3 Ci
275 101 3 Ci
275 98 3 Ci
275 94 3 Ci
276 91 3 Ci
276 88 3 Ci
277 134 3 Ci
277 132 3 Ci
277 128 3 Ci
278 125 3 Ci
278 120 3 Ci
279 114 3 Ci
279 106 3 Ci
279 97 3 Ci
280 85 3 Ci
280 73 3 Ci
281 64 3 Ci
281 58 3 Ci
281 54 3 Ci
282 51 3 Ci
282 50 3 Ci
283 50 3 Ci
283 54 3 Ci
283 62 3 Ci
284 68 3 Ci
284 71 3 Ci
285 72 3 Ci
286 72 3 Ci
287 74 3 Ci
287 112 3 Ci
287 121 3 Ci
288 123 3 Ci
288 125 3 Ci
289 127 3 Ci
289 130 3 Ci
289 132 3 Ci
290 136 3 Ci
290 146 3 Ci
291 68 3 Ci
291 76 3 Ci
291 80 3 Ci
292 81 3 Ci
292 82 3 Ci
293 82 3 Ci
293 50 3 Ci
294 140 3 Ci
294 139 3 Ci
295 140 3 Ci

% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 96 155 moveto
 97 157 lineto
 97 157 lineto
 98 156 lineto
 98 153 lineto
 99 149 lineto
 99 146 lineto
 99 144 lineto
 100 145 lineto
 100 148 lineto
 101 151 lineto
 101 152 lineto
 102 151 lineto
 103 152 lineto
 103 154 lineto
 104 155 lineto
 104 157 lineto
 104 155 lineto
 105 154 lineto
 105 152 lineto
 106 151 lineto
 106 151 lineto
 106 152 lineto
 107 153 lineto
 107 154 lineto
 108 154 lineto
 108 153 lineto
 109 152 lineto
 110 151 lineto
 110 148 lineto
 110 146 lineto
 111 145 lineto
 111 145 lineto
 112 145 lineto
 112 147 lineto
 112 149 lineto
 113 151 lineto
 113 152 lineto
 114 153 lineto
 114 154 lineto
 115 152 lineto
 115 151 lineto
 116 150 lineto
 116 148 lineto
 116 147 lineto
 117 146 lineto
 118 147 lineto
 118 149 lineto
 118 152 lineto
 119 157 lineto
 119 154 lineto
 120 149 lineto
 120 145 lineto
 120 143 lineto
 121 145 lineto
 122 149 lineto
 122 153 lineto
 122 154 lineto
 123 150 lineto
 123 146 lineto
 124 144 lineto
 124 144 lineto
 124 145 lineto
 125 147 lineto
 125 150 lineto
 126 152 lineto
 126 153 lineto
 127 152 lineto
 127 150 lineto
 128 147 lineto
 128 143 lineto
 128 140 lineto
 129 137 lineto
 129 135 lineto
 130 137 lineto
 130 141 lineto
 131 145 lineto
 131 150 lineto
 132 152 lineto
 132 149 lineto
 132 145 lineto
 133 142 lineto
 133 140 lineto
 134 139 lineto
 134 140 lineto
 135 142 lineto
 135 144 lineto
 136 146 lineto
 136 147 lineto
 136 144 lineto
 137 141 lineto
 137 139 lineto
 138 138 lineto
 138 138 lineto
 138 140 lineto
 139 143 lineto
 139 145 lineto
 140 146 lineto
 140 147 lineto
 140 147 lineto
 141 148 lineto
 142 148 lineto
 142 148 lineto
 142 150 lineto
 143 154 lineto
 143 154 lineto
 144 146 lineto
 144 137 lineto
 144 129 lineto
 145 125 lineto
 145 124 lineto
 146 128 lineto
 146 133 lineto
 146 138 lineto
 147 133 lineto
 148 128 lineto
 148 125 lineto
 148 124 lineto
 149 125 lineto
 149 126 lineto
 150 125 lineto
 151 124 lineto
 151 124 lineto
 152 126 lineto
 152 128 lineto
 153 129 lineto
 153 127 lineto
 154 123 lineto
 154 118 lineto
 154 114 lineto
 155 114 lineto
 155 117 lineto
 156 123 lineto
 156 131 lineto
 156 137 lineto
 157 134 lineto
 158 133 lineto
 158 134 lineto
 158 137 lineto
 159 137 lineto
 159 133 lineto
 160 128 lineto
 160 125 lineto
 160 125 lineto
 161 129 lineto
 161 136 lineto
 162 144 lineto
 162 151 lineto
 162 155 lineto
 163 156 lineto
 163 154 lineto
 164 150 lineto
 164 146 lineto
 164 143 lineto
 165 142 lineto
 165 144 lineto
 166 147 lineto
 166 144 lineto
 167 141 lineto
 167 141 lineto
 168 144 lineto
 168 147 lineto
 168 143 lineto
 169 135 lineto
 169 127 lineto
 170 120 lineto
 170 115 lineto
 170 111 lineto
 171 106 lineto
 171 101 lineto
 172 97 lineto
 172 97 lineto
 172 101 lineto
 173 108 lineto
 173 117 lineto
 174 126 lineto
 174 131 lineto
 174 132 lineto
 175 132 lineto
 176 135 lineto
 176 139 lineto
 176 143 lineto
 177 146 lineto
 177 147 lineto
 178 148 lineto
 178 147 lineto
 178 144 lineto
 179 137 lineto
 179 130 lineto
 180 123 lineto
 180 117 lineto
 180 113 lineto
 181 113 lineto
 181 115 lineto
 182 120 lineto
 182 126 lineto
 182 133 lineto
 183 139 lineto
 183 141 lineto
 184 140 lineto
 184 138 lineto
 184 135 lineto
 185 133 lineto
 185 130 lineto
 186 128 lineto
 186 127 lineto
 186 126 lineto
 187 128 lineto
 188 131 lineto
 188 135 lineto
 188 139 lineto
 189 142 lineto
 189 146 lineto
 190 150 lineto
 190 153 lineto
 190 145 lineto
 191 133 lineto
 191 121 lineto
 192 111 lineto
 192 105 lineto
 192 104 lineto
 193 109 lineto
 193 116 lineto
 194 126 lineto
 194 133 lineto
 194 134 lineto
 195 131 lineto
 195 127 lineto
 196 125 lineto
 196 126 lineto
 197 131 lineto
 197 137 lineto
 197 143 lineto
 198 141 lineto
 198 133 lineto
 199 127 lineto
 199 124 lineto
 199 126 lineto
 200 131 lineto
 200 130 lineto
 201 123 lineto
 201 114 lineto
 201 108 lineto
 202 115 lineto
 203 126 lineto
 203 135 lineto
 203 132 lineto
 204 123 lineto
 204 116 lineto
 205 114 lineto
 205 118 lineto
 205 126 lineto
 206 134 lineto
 206 141 lineto
 207 145 lineto
 207 146 lineto
 208 142 lineto
 208 136 lineto
 209 131 lineto
 209 128 lineto
 209 129 lineto
 210 133 lineto
 210 140 lineto
 211 146 lineto
 211 150 lineto
 212 149 lineto
 213 146 lineto
 213 138 lineto
 213 128 lineto
 214 117 lineto
 214 106 lineto
 215 95 lineto
 215 85 lineto
 215 77 lineto
 216 72 lineto
 216 69 lineto
 217 70 lineto
 217 75 lineto
 217 84 lineto
 218 95 lineto
 218 107 lineto
 219 120 lineto
 219 132 lineto
 219 139 lineto
 220 140 lineto
 220 138 lineto
 221 136 lineto
 221 135 lineto
 221 133 lineto
 222 129 lineto
 222 124 lineto
 223 117 lineto
 223 113 lineto
 223 110 lineto
 224 114 lineto
 225 120 lineto
 225 127 lineto
 225 134 lineto
 226 134 lineto
 226 128 lineto
 227 119 lineto
 227 111 lineto
 227 106 lineto
 228 106 lineto
 228 109 lineto
 229 117 lineto
 229 129 lineto
 229 142 lineto
 230 154 lineto
 230 148 lineto
 231 140 lineto
 231 135 lineto
 231 135 lineto
 232 136 lineto
 232 138 lineto
 233 136 lineto
 234 138 lineto
 234 144 lineto
 235 151 lineto
 235 152 lineto
 235 145 lineto
 236 139 lineto
 236 135 lineto
 237 134 lineto
 237 136 lineto
 237 140 lineto
 238 146 lineto
 238 152 lineto
 239 152 lineto
 239 147 lineto
 239 142 lineto
 240 137 lineto
 240 135 lineto
 241 137 lineto
 241 141 lineto
 242 147 lineto
 242 152 lineto
 243 151 lineto
 243 148 lineto
 243 146 lineto
 244 148 lineto
 245 150 lineto
 245 147 lineto
 246 145 lineto
 246 143 lineto
 247 145 lineto
 247 147 lineto
 248 148 lineto
 248 147 lineto
 249 144 lineto
 249 142 lineto
 249 141 lineto
 250 142 lineto
 250 145 lineto
 251 148 lineto
 251 152 lineto
 251 154 lineto
 252 153 lineto
 252 151 lineto
 253 149 lineto
 253 148 lineto
 253 147 lineto
 254 145 lineto
 254 144 lineto
 255 142 lineto
 255 141 lineto
 255 140 lineto
 256 143 lineto
 257 147 lineto
 257 151 lineto
 257 155 lineto
 258 153 lineto
 258 149 lineto
 259 147 lineto
 259 149 lineto
 260 151 lineto
 260 154 lineto
 261 157 lineto
 261 154 lineto
 261 152 lineto
 262 151 lineto
 262 149 lineto
 263 148 lineto
 263 147 lineto
 263 147 lineto
 264 147 lineto
 264 149 lineto
 265 151 lineto
 265 152 lineto
 265 151 lineto
 266 150 lineto
 266 149 lineto
 267 149 lineto
 267 150 lineto
 267 152 lineto
 268 154 lineto
 268 154 lineto
 269 153 lineto
 270 153 lineto
 271 152 lineto
 271 151 lineto
 272 150 lineto
 273 149 lineto
 273 149 lineto
 274 150 lineto
 275 151 lineto
 275 152 lineto
 275 153 lineto
 276 154 lineto
 276 156 lineto
 277 157 lineto
 277 156 lineto
 277 155 lineto
 278 154 lineto
 279 155 lineto
 279 156 lineto
 280 155 lineto
 281 155 lineto
 281 153 lineto
 282 153 lineto
 283 155 lineto
 283 155 lineto
 284 153 lineto
 285 152 lineto
 285 152 lineto
 286 152 lineto
 286 154 lineto
 287 156 lineto
 287 157 lineto
 287 155 lineto
 288 153 lineto
 288 152 lineto
 289 152 lineto
 290 153 lineto
 290 155 lineto
 291 153 lineto
 291 151 lineto
 292 150 lineto
 292 150 lineto
 292 152 lineto
 293 155 lineto
 293 157 lineto
 294 154 lineto
 294 152 lineto
 294 151 lineto
 295 151 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

96 155 1 Ci
97 157 1 Ci
97 157 1 Ci
98 156 1 Ci
98 153 1 Ci
99 149 1 Ci
99 146 1 Ci
99 144 1 Ci
100 145 1 Ci
100 148 1 Ci
101 151 1 Ci
101 152 1 Ci
102 151 1 Ci
103 152 1 Ci
103 154 1 Ci
104 155 1 Ci
104 157 1 Ci
104 155 1 Ci
105 154 1 Ci
105 152 1 Ci
106 151 1 Ci
106 151 1 Ci
106 152 1 Ci
107 153 1 Ci
107 154 1 Ci
108 154 1 Ci
108 153 1 Ci
109 152 1 Ci
110 151 1 Ci
110 148 1 Ci
110 146 1 Ci
111 145 1 Ci
111 145 1 Ci
112 145 1 Ci
112 147 1 Ci
112 149 1 Ci
113 151 1 Ci
113 152 1 Ci
114 153 1 Ci
114 154 1 Ci
115 152 1 Ci
115 151 1 Ci
116 150 1 Ci
116 148 1 Ci
116 147 1 Ci
117 146 1 Ci
118 147 1 Ci
118 149 1 Ci
118 152 1 Ci
119 157 1 Ci
119 154 1 Ci
120 149 1 Ci
120 145 1 Ci
120 143 1 Ci
121 145 1 Ci
122 149 1 Ci
122 153 1 Ci
122 154 1 Ci
123 150 1 Ci
123 146 1 Ci
124 144 1 Ci
124 144 1 Ci
124 145 1 Ci
125 147 1 Ci
125 150 1 Ci
126 152 1 Ci
126 153 1 Ci
127 152 1 Ci
127 150 1 Ci
128 147 1 Ci
128 143 1 Ci
128 140 1 Ci
129 137 1 Ci
129 135 1 Ci
130 137 1 Ci
130 141 1 Ci
131 145 1 Ci
131 150 1 Ci
132 152 1 Ci
132 149 1 Ci
132 145 1 Ci
133 142 1 Ci
133 140 1 Ci
134 139 1 Ci
134 140 1 Ci
135 142 1 Ci
135 144 1 Ci
136 146 1 Ci
136 147 1 Ci
136 144 1 Ci
137 141 1 Ci
137 139 1 Ci
138 138 1 Ci
138 138 1 Ci
138 140 1 Ci
139 143 1 Ci
139 145 1 Ci
140 146 1 Ci
140 147 1 Ci
140 147 1 Ci
141 148 1 Ci
142 148 1 Ci
142 148 1 Ci
142 150 1 Ci
143 154 1 Ci
143 154 1 Ci
144 146 1 Ci
144 137 1 Ci
144 129 1 Ci
145 125 1 Ci
145 124 1 Ci
146 128 1 Ci
146 133 1 Ci
146 138 1 Ci
147 133 1 Ci
148 128 1 Ci
148 125 1 Ci
148 124 1 Ci
149 125 1 Ci
149 126 1 Ci
150 125 1 Ci
151 124 1 Ci
151 124 1 Ci
152 126 1 Ci
152 128 1 Ci
153 129 1 Ci
153 127 1 Ci
154 123 1 Ci
154 118 1 Ci
154 114 1 Ci
155 114 1 Ci
155 117 1 Ci
156 123 1 Ci
156 131 1 Ci
156 137 1 Ci
157 134 1 Ci
158 133 1 Ci
158 134 1 Ci
158 137 1 Ci
159 137 1 Ci
159 133 1 Ci
160 128 1 Ci
160 125 1 Ci
160 125 1 Ci
161 129 1 Ci
161 136 1 Ci
162 144 1 Ci
162 151 1 Ci
162 155 1 Ci
163 156 1 Ci
163 154 1 Ci
164 150 1 Ci
164 146 1 Ci
164 143 1 Ci
165 142 1 Ci
165 144 1 Ci
166 147 1 Ci
166 144 1 Ci
167 141 1 Ci
167 141 1 Ci
168 144 1 Ci
168 147 1 Ci
168 143 1 Ci
169 135 1 Ci
169 127 1 Ci
170 120 1 Ci
170 115 1 Ci
170 111 1 Ci
171 106 1 Ci
171 101 1 Ci
172 97 1 Ci
172 97 1 Ci
172 101 1 Ci
173 108 1 Ci
173 117 1 Ci
174 126 1 Ci
174 131 1 Ci
174 132 1 Ci
175 132 1 Ci
176 135 1 Ci
176 139 1 Ci
176 143 1 Ci
177 146 1 Ci
177 147 1 Ci
178 148 1 Ci
178 147 1 Ci
178 144 1 Ci
179 137 1 Ci
179 130 1 Ci
180 123 1 Ci
180 117 1 Ci
180 113 1 Ci
181 113 1 Ci
181 115 1 Ci
182 120 1 Ci
182 126 1 Ci
182 133 1 Ci
183 139 1 Ci
183 141 1 Ci
184 140 1 Ci
184 138 1 Ci
184 135 1 Ci
185 133 1 Ci
185 130 1 Ci
186 128 1 Ci
186 127 1 Ci
186 126 1 Ci
187 128 1 Ci
188 131 1 Ci
188 135 1 Ci
188 139 1 Ci
189 142 1 Ci
189 146 1 Ci
190 150 1 Ci
190 153 1 Ci
190 145 1 Ci
191 133 1 Ci
191 121 1 Ci
192 111 1 Ci
192 105 1 Ci
192 104 1 Ci
193 109 1 Ci
193 116 1 Ci
194 126 1 Ci
194 133 1 Ci
194 134 1 Ci
195 131 1 Ci
195 127 1 Ci
196 125 1 Ci
196 126 1 Ci
197 131 1 Ci
197 137 1 Ci
197 143 1 Ci
198 141 1 Ci
198 133 1 Ci
199 127 1 Ci
199 124 1 Ci
199 126 1 Ci
200 131 1 Ci
200 130 1 Ci
201 123 1 Ci
201 114 1 Ci
201 108 1 Ci
202 115 1 Ci
203 126 1 Ci
203 135 1 Ci
203 132 1 Ci
204 123 1 Ci
204 116 1 Ci
205 114 1 Ci
205 118 1 Ci
205 126 1 Ci
206 134 1 Ci
206 141 1 Ci
207 145 1 Ci
207 146 1 Ci
208 142 1 Ci
208 136 1 Ci
209 131 1 Ci
209 128 1 Ci
209 129 1 Ci
210 133 1 Ci
210 140 1 Ci
211 146 1 Ci
211 150 1 Ci
212 149 1 Ci
213 146 1 Ci
213 138 1 Ci
213 128 1 Ci
214 117 1 Ci
214 106 1 Ci
215 95 1 Ci
215 85 1 Ci
215 77 1 Ci
216 72 1 Ci
216 69 1 Ci
217 70 1 Ci
217 75 1 Ci
217 84 1 Ci
218 95 1 Ci
218 107 1 Ci
219 120 1 Ci
219 132 1 Ci
219 139 1 Ci
220 140 1 Ci
220 138 1 Ci
221 136 1 Ci
221 135 1 Ci
221 133 1 Ci
222 129 1 Ci
222 124 1 Ci
223 117 1 Ci
223 113 1 Ci
223 110 1 Ci
224 114 1 Ci
225 120 1 Ci
225 127 1 Ci
225 134 1 Ci
226 134 1 Ci
226 128 1 Ci
227 119 1 Ci
227 111 1 Ci
227 106 1 Ci
228 106 1 Ci
228 109 1 Ci
229 117 1 Ci
229 129 1 Ci
229 142 1 Ci
230 154 1 Ci
230 148 1 Ci
231 140 1 Ci
231 135 1 Ci
231 135 1 Ci
232 136 1 Ci
232 138 1 Ci
233 136 1 Ci
234 138 1 Ci
234 144 1 Ci
235 151 1 Ci
235 152 1 Ci
235 145 1 Ci
236 139 1 Ci
236 135 1 Ci
237 134 1 Ci
237 136 1 Ci
237 140 1 Ci
238 146 1 Ci
238 152 1 Ci
239 152 1 Ci
239 147 1 Ci
239 142 1 Ci
240 137 1 Ci
240 135 1 Ci
241 137 1 Ci
241 141 1 Ci
242 147 1 Ci
242 152 1 Ci
243 151 1 Ci
243 148 1 Ci
243 146 1 Ci
244 148 1 Ci
245 150 1 Ci
245 147 1 Ci
246 145 1 Ci
246 143 1 Ci
247 145 1 Ci
247 147 1 Ci
248 148 1 Ci
248 147 1 Ci
249 144 1 Ci
249 142 1 Ci
249 141 1 Ci
250 142 1 Ci
250 145 1 Ci
251 148 1 Ci
251 152 1 Ci
251 154 1 Ci
252 153 1 Ci
252 151 1 Ci
253 149 1 Ci
253 148 1 Ci
253 147 1 Ci
254 145 1 Ci
254 144 1 Ci
255 142 1 Ci
255 141 1 Ci
255 140 1 Ci
256 143 1 Ci
257 147 1 Ci
257 151 1 Ci
257 155 1 Ci
258 153 1 Ci
258 149 1 Ci
259 147 1 Ci
259 149 1 Ci
260 151 1 Ci
260 154 1 Ci
261 157 1 Ci
261 154 1 Ci
261 152 1 Ci
262 151 1 Ci
262 149 1 Ci
263 148 1 Ci
263 147 1 Ci
263 147 1 Ci
264 147 1 Ci
264 149 1 Ci
265 151 1 Ci
265 152 1 Ci
265 151 1 Ci
266 150 1 Ci
266 149 1 Ci
267 149 1 Ci
267 150 1 Ci
267 152 1 Ci
268 154 1 Ci
268 154 1 Ci
269 153 1 Ci
270 153 1 Ci
271 152 1 Ci
271 151 1 Ci
272 150 1 Ci
273 149 1 Ci
273 149 1 Ci
274 150 1 Ci
275 151 1 Ci
275 152 1 Ci
275 153 1 Ci
276 154 1 Ci
276 156 1 Ci
277 157 1 Ci
277 156 1 Ci
277 155 1 Ci
278 154 1 Ci
279 155 1 Ci
279 156 1 Ci
280 155 1 Ci
281 155 1 Ci
281 153 1 Ci
282 153 1 Ci
283 155 1 Ci
283 155 1 Ci
284 153 1 Ci
285 152 1 Ci
285 152 1 Ci
286 152 1 Ci
286 154 1 Ci
287 156 1 Ci
287 157 1 Ci
287 155 1 Ci
288 153 1 Ci
288 152 1 Ci
289 152 1 Ci
290 153 1 Ci
290 155 1 Ci
291 153 1 Ci
291 151 1 Ci
292 150 1 Ci
292 150 1 Ci
292 152 1 Ci
293 155 1 Ci
293 157 1 Ci
294 154 1 Ci
294 152 1 Ci
294 151 1 Ci
295 151 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 350 33 Box Fill

0 33 48 133 Box Fill

344 33 6 133 Box Fill

0 166 350 34 Box Fill

0.898039 0.898039 0.898039 SetBgColor
46 166 300 2 Box Fill

344 31 2 137 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 46 168 moveto
46 31 lineto
346 31 lineto
344 33 lineto
48 33 lineto
48 166 lineto
46 168 lineto
46 168  lineto closepath Fill
99 17 0 196 14 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(-19, +200\)) 99 0 13 DrawAdjText
EndText
40 17 0 0 107 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.1) 36 2 13 DrawAdjText
EndText
49 17 0 56 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(-0.05) 45 2 13 DrawAdjText
EndText
13 17 0 126 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
40 17 0 196 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.05) 36 2 13 DrawAdjText
EndText
31 17 0 266 189 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
56 171 336 171 LS
91 171 91 176 LS
56 171 56 179 LS
161 171 161 176 LS
126 171 126 179 LS
231 171 231 176 LS
196 171 196 179 LS
301 171 301 176 LS
266 171 266 179 LS
336 171 336 179 LS
13 17 0 329 181 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 2 13 DrawAdjText
EndText
22 17 0 22 158 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(50) 18 2 13 DrawAdjText
EndText
31 17 0 17 119 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(100) 27 2 13 DrawAdjText
EndText
31 17 0 17 80 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(150) 27 2 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
43 158 43 41 LS
43 138 38 138 LS
43 158 35 158 LS
43 99 38 99 LS
43 119 35 119 LS
43 60 38 60 LS
43 80 35 80 LS
43 41 35 41 LS
showpage
%Trailer
grestore
end
%EOF
