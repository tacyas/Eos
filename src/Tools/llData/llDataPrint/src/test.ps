%!PS-Adobe-2.0
%%Title: 
%%Creator: mimeyu50
%%CreationDate: Thu Nov  4 12:26:14 1999
%%For: mimeyu50
%%BoundingBox: atend
%%Pages: atend
%%DocumentsFonts: atend
%%EndDocuments
%%EndProlog
%%EndComments
/mt  {moveto} def
/rmt {rmoveto} def
/lt  {lineto} def
/rlt {rlineto} def
/str {stroke} def
%%Page:  0
gsave
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 38 0 303 152
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:11 1999)
%%Title: (/tmp/0.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:11 1999) show
10 20 moveto
(File: /tmp/0.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
50 0 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
59 38 231 123 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 69 63 moveto
 69 63 lineto
 70 63 lineto
 71 63 lineto
 72 63 lineto
 73 63 lineto
 74 63 lineto
 76 63 lineto
 77 64 lineto
 78 64 lineto
 79 64 lineto
 80 65 lineto
 81 66 lineto
 81 66 lineto
 82 67 lineto
 83 69 lineto
 84 70 lineto
 85 72 lineto
 86 73 lineto
 87 75 lineto
 88 78 lineto
 89 80 lineto
 90 83 lineto
 91 85 lineto
 92 88 lineto
 93 92 lineto
 93 95 lineto
 94 98 lineto
 95 102 lineto
 96 105 lineto
 97 109 lineto
 98 112 lineto
 99 116 lineto
 100 119 lineto
 101 123 lineto
 102 126 lineto
 103 129 lineto
 104 132 lineto
 105 135 lineto
 105 138 lineto
 106 140 lineto
 107 143 lineto
 108 145 lineto
 109 146 lineto
 110 148 lineto
 111 149 lineto
 112 150 lineto
 113 151 lineto
 114 151 lineto
 115 150 lineto
 116 150 lineto
 117 150 lineto
 117 150 lineto
 118 150 lineto
 119 150 lineto
 120 151 lineto
 121 151 lineto
 122 151 lineto
 123 151 lineto
 124 151 lineto
 125 150 lineto
 126 150 lineto
 127 149 lineto
 128 149 lineto
 129 148 lineto
 130 148 lineto
 130 148 lineto
 131 148 lineto
 132 148 lineto
 133 148 lineto
 134 148 lineto
 135 148 lineto
 137 148 lineto
 138 148 lineto
 139 148 lineto
 140 149 lineto
 141 149 lineto
 142 149 lineto
 142 149 lineto
 143 149 lineto
 144 150 lineto
 145 150 lineto
 146 150 lineto
 147 150 lineto
 148 150 lineto
 150 151 lineto
 151 151 lineto
 152 151 lineto
 153 151 lineto
 154 152 lineto
 154 152 lineto
 155 152 lineto
 156 152 lineto
 157 152 lineto
 158 152 lineto
 159 152 lineto
 160 152 lineto
 162 152 lineto
 163 152 lineto
 164 152 lineto
 165 152 lineto
 166 152 lineto
 166 152 lineto
 167 152 lineto
 168 152 lineto
 169 152 lineto
 170 152 lineto
 171 152 lineto
 172 152 lineto
 174 152 lineto
 175 152 lineto
 176 152 lineto
 177 152 lineto
 178 152 lineto
 179 152 lineto
 179 152 lineto
 180 152 lineto
 181 152 lineto
 182 152 lineto
 183 152 lineto
 184 152 lineto
 186 152 lineto
 187 152 lineto
 188 152 lineto
 189 152 lineto
 190 152 lineto
 191 152 lineto
 191 152 lineto
 192 152 lineto
 193 152 lineto
 194 152 lineto
 195 152 lineto
 196 152 lineto
 197 152 lineto
 199 152 lineto
 200 152 lineto
 201 152 lineto
 202 152 lineto
 203 152 lineto
 203 152 lineto
 204 152 lineto
 205 152 lineto
 206 152 lineto
 207 152 lineto
 208 152 lineto
 209 152 lineto
 211 152 lineto
 212 152 lineto
 213 152 lineto
 214 152 lineto
 215 152 lineto
 215 152 lineto
 216 152 lineto
 217 152 lineto
 218 152 lineto
 219 152 lineto
 220 152 lineto
 221 152 lineto
 223 152 lineto
 224 152 lineto
 225 152 lineto
 226 152 lineto
 227 152 lineto
 228 152 lineto
 228 152 lineto
 229 152 lineto
 230 152 lineto
 231 152 lineto
 232 152 lineto
 233 152 lineto
 235 152 lineto
 236 152 lineto
 237 152 lineto
 238 152 lineto
 239 152 lineto
 240 152 lineto
 240 152 lineto
 241 152 lineto
 242 152 lineto
 243 152 lineto
 244 152 lineto
 245 152 lineto
 247 152 lineto
 248 152 lineto
 249 152 lineto
 250 152 lineto
 251 152 lineto
 252 152 lineto
 252 152 lineto
 253 152 lineto
 254 152 lineto
 255 152 lineto
 256 152 lineto
 257 152 lineto
 258 152 lineto
 260 152 lineto
 261 152 lineto
 262 152 lineto
 263 152 lineto
 264 152 lineto
 264 152 lineto
 265 152 lineto
 266 152 lineto
 267 152 lineto
 268 152 lineto
 269 152 lineto
 270 152 lineto
 272 152 lineto
 273 152 lineto
 274 152 lineto
 275 152 lineto
 276 152 lineto
 277 152 lineto
 277 152 lineto
 278 152 lineto
 279 152 lineto
 280 152 lineto
 281 152 lineto
 282 152 lineto
 284 152 lineto
 285 152 lineto
 286 152 lineto
 287 152 lineto
 288 152 lineto
 289 152 lineto
 289 152 lineto
 290 152 lineto
 291 152 lineto
 292 152 lineto
 293 152 lineto
 294 152 lineto
 296 152 lineto
 297 152 lineto
 298 152 lineto
 299 152 lineto
 300 152 lineto
 301 152 lineto
 301 152 lineto
 302 152 lineto
 303 152 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

69 63 1 Ci
69 63 1 Ci
70 63 1 Ci
71 63 1 Ci
72 63 1 Ci
73 63 1 Ci
74 63 1 Ci
76 63 1 Ci
77 64 1 Ci
78 64 1 Ci
79 64 1 Ci
80 65 1 Ci
81 66 1 Ci
81 66 1 Ci
82 67 1 Ci
83 69 1 Ci
84 70 1 Ci
85 72 1 Ci
86 73 1 Ci
87 75 1 Ci
88 78 1 Ci
89 80 1 Ci
90 83 1 Ci
91 85 1 Ci
92 88 1 Ci
93 92 1 Ci
93 95 1 Ci
94 98 1 Ci
95 102 1 Ci
96 105 1 Ci
97 109 1 Ci
98 112 1 Ci
99 116 1 Ci
100 119 1 Ci
101 123 1 Ci
102 126 1 Ci
103 129 1 Ci
104 132 1 Ci
105 135 1 Ci
105 138 1 Ci
106 140 1 Ci
107 143 1 Ci
108 145 1 Ci
109 146 1 Ci
110 148 1 Ci
111 149 1 Ci
112 150 1 Ci
113 151 1 Ci
114 151 1 Ci
115 150 1 Ci
116 150 1 Ci
117 150 1 Ci
117 150 1 Ci
118 150 1 Ci
119 150 1 Ci
120 151 1 Ci
121 151 1 Ci
122 151 1 Ci
123 151 1 Ci
124 151 1 Ci
125 150 1 Ci
126 150 1 Ci
127 149 1 Ci
128 149 1 Ci
129 148 1 Ci
130 148 1 Ci
130 148 1 Ci
131 148 1 Ci
132 148 1 Ci
133 148 1 Ci
134 148 1 Ci
135 148 1 Ci
137 148 1 Ci
138 148 1 Ci
139 148 1 Ci
140 149 1 Ci
141 149 1 Ci
142 149 1 Ci
142 149 1 Ci
143 149 1 Ci
144 150 1 Ci
145 150 1 Ci
146 150 1 Ci
147 150 1 Ci
148 150 1 Ci
150 151 1 Ci
151 151 1 Ci
152 151 1 Ci
153 151 1 Ci
154 152 1 Ci
154 152 1 Ci
155 152 1 Ci
156 152 1 Ci
157 152 1 Ci
158 152 1 Ci
159 152 1 Ci
160 152 1 Ci
162 152 1 Ci
163 152 1 Ci
164 152 1 Ci
165 152 1 Ci
166 152 1 Ci
166 152 1 Ci
167 152 1 Ci
168 152 1 Ci
169 152 1 Ci
170 152 1 Ci
171 152 1 Ci
172 152 1 Ci
174 152 1 Ci
175 152 1 Ci
176 152 1 Ci
177 152 1 Ci
178 152 1 Ci
179 152 1 Ci
179 152 1 Ci
180 152 1 Ci
181 152 1 Ci
182 152 1 Ci
183 152 1 Ci
184 152 1 Ci
186 152 1 Ci
187 152 1 Ci
188 152 1 Ci
189 152 1 Ci
190 152 1 Ci
191 152 1 Ci
191 152 1 Ci
192 152 1 Ci
193 152 1 Ci
194 152 1 Ci
195 152 1 Ci
196 152 1 Ci
197 152 1 Ci
199 152 1 Ci
200 152 1 Ci
201 152 1 Ci
202 152 1 Ci
203 152 1 Ci
203 152 1 Ci
204 152 1 Ci
205 152 1 Ci
206 152 1 Ci
207 152 1 Ci
208 152 1 Ci
209 152 1 Ci
211 152 1 Ci
212 152 1 Ci
213 152 1 Ci
214 152 1 Ci
215 152 1 Ci
215 152 1 Ci
216 152 1 Ci
217 152 1 Ci
218 152 1 Ci
219 152 1 Ci
220 152 1 Ci
221 152 1 Ci
223 152 1 Ci
224 152 1 Ci
225 152 1 Ci
226 152 1 Ci
227 152 1 Ci
228 152 1 Ci
228 152 1 Ci
229 152 1 Ci
230 152 1 Ci
231 152 1 Ci
232 152 1 Ci
233 152 1 Ci
235 152 1 Ci
236 152 1 Ci
237 152 1 Ci
238 152 1 Ci
239 152 1 Ci
240 152 1 Ci
240 152 1 Ci
241 152 1 Ci
242 152 1 Ci
243 152 1 Ci
244 152 1 Ci
245 152 1 Ci
247 152 1 Ci
248 152 1 Ci
249 152 1 Ci
250 152 1 Ci
251 152 1 Ci
252 152 1 Ci
252 152 1 Ci
253 152 1 Ci
254 152 1 Ci
255 152 1 Ci
256 152 1 Ci
257 152 1 Ci
258 152 1 Ci
260 152 1 Ci
261 152 1 Ci
262 152 1 Ci
263 152 1 Ci
264 152 1 Ci
264 152 1 Ci
265 152 1 Ci
266 152 1 Ci
267 152 1 Ci
268 152 1 Ci
269 152 1 Ci
270 152 1 Ci
272 152 1 Ci
273 152 1 Ci
274 152 1 Ci
275 152 1 Ci
276 152 1 Ci
277 152 1 Ci
277 152 1 Ci
278 152 1 Ci
279 152 1 Ci
280 152 1 Ci
281 152 1 Ci
282 152 1 Ci
284 152 1 Ci
285 152 1 Ci
286 152 1 Ci
287 152 1 Ci
288 152 1 Ci
289 152 1 Ci
289 152 1 Ci
290 152 1 Ci
291 152 1 Ci
292 152 1 Ci
293 152 1 Ci
294 152 1 Ci
296 152 1 Ci
297 152 1 Ci
298 152 1 Ci
299 152 1 Ci
300 152 1 Ci
301 152 1 Ci
301 152 1 Ci
302 152 1 Ci
303 152 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

69 99 3 Ci
69 99 3 Ci
70 99 3 Ci
71 99 3 Ci
72 99 3 Ci
73 99 3 Ci
74 99 3 Ci
76 99 3 Ci
77 99 3 Ci
78 99 3 Ci
79 99 3 Ci
80 99 3 Ci
81 99 3 Ci
81 99 3 Ci
82 99 3 Ci
83 99 3 Ci
84 99 3 Ci
85 99 3 Ci
86 99 3 Ci
88 99 3 Ci
89 99 3 Ci
90 99 3 Ci
91 99 3 Ci
92 99 3 Ci
93 99 3 Ci
93 99 3 Ci
94 99 3 Ci
95 99 3 Ci
96 99 3 Ci
97 99 3 Ci
98 99 3 Ci
99 99 3 Ci
101 99 3 Ci
102 99 3 Ci
103 99 3 Ci
104 99 3 Ci
105 99 3 Ci
105 99 3 Ci
106 99 3 Ci
107 99 3 Ci
108 99 3 Ci
109 99 3 Ci
110 99 3 Ci
111 99 3 Ci
113 100 3 Ci
114 144 3 Ci
115 144 3 Ci
116 144 3 Ci
117 144 3 Ci
117 144 3 Ci
118 144 3 Ci
119 144 3 Ci
120 144 3 Ci
121 144 3 Ci
122 99 3 Ci
123 99 3 Ci
125 99 3 Ci
126 99 3 Ci
127 99 3 Ci
128 99 3 Ci
129 99 3 Ci
130 99 3 Ci
130 99 3 Ci
131 99 3 Ci
132 99 3 Ci
133 99 3 Ci
134 99 3 Ci
135 99 3 Ci
137 99 3 Ci
138 99 3 Ci
139 99 3 Ci
140 99 3 Ci
141 99 3 Ci
142 99 3 Ci
142 99 3 Ci
143 99 3 Ci
144 99 3 Ci
145 99 3 Ci
146 99 3 Ci
147 99 3 Ci
148 99 3 Ci
150 99 3 Ci
151 99 3 Ci
152 99 3 Ci
153 99 3 Ci
154 144 3 Ci
154 144 3 Ci
155 144 3 Ci
156 144 3 Ci
157 144 3 Ci
158 144 3 Ci
159 144 3 Ci
160 144 3 Ci
162 144 3 Ci
163 144 3 Ci
164 144 3 Ci
165 144 3 Ci
166 144 3 Ci
166 144 3 Ci
167 144 3 Ci
168 144 3 Ci
169 144 3 Ci
170 144 3 Ci
171 144 3 Ci
172 144 3 Ci
174 144 3 Ci
175 144 3 Ci
176 144 3 Ci
177 144 3 Ci
178 144 3 Ci
179 144 3 Ci
179 144 3 Ci
180 144 3 Ci
181 144 3 Ci
182 144 3 Ci
183 144 3 Ci
184 144 3 Ci
186 144 3 Ci
187 144 3 Ci
188 144 3 Ci
189 144 3 Ci
190 144 3 Ci
191 144 3 Ci
191 144 3 Ci
192 144 3 Ci
193 144 3 Ci
194 144 3 Ci
195 144 3 Ci
196 144 3 Ci
197 144 3 Ci
199 144 3 Ci
200 144 3 Ci
201 144 3 Ci
202 144 3 Ci
203 144 3 Ci
203 144 3 Ci
204 144 3 Ci
205 144 3 Ci
206 144 3 Ci
207 144 3 Ci
208 144 3 Ci
209 144 3 Ci
211 144 3 Ci
212 144 3 Ci
213 144 3 Ci
214 144 3 Ci
215 144 3 Ci
215 144 3 Ci
216 144 3 Ci
217 144 3 Ci
218 144 3 Ci
219 144 3 Ci
220 144 3 Ci
221 144 3 Ci
223 144 3 Ci
224 144 3 Ci
225 144 3 Ci
226 144 3 Ci
227 144 3 Ci
228 144 3 Ci
228 144 3 Ci
229 144 3 Ci
230 144 3 Ci
231 144 3 Ci
232 144 3 Ci
233 144 3 Ci
235 144 3 Ci
236 144 3 Ci
237 144 3 Ci
238 144 3 Ci
239 144 3 Ci
240 144 3 Ci
240 144 3 Ci
241 144 3 Ci
242 144 3 Ci
243 144 3 Ci
244 144 3 Ci
245 144 3 Ci
247 144 3 Ci
248 144 3 Ci
249 144 3 Ci
250 144 3 Ci
251 144 3 Ci
252 144 3 Ci
252 144 3 Ci
253 144 3 Ci
254 144 3 Ci
255 144 3 Ci
256 144 3 Ci
257 144 3 Ci
258 144 3 Ci
260 144 3 Ci
261 144 3 Ci
262 144 3 Ci
263 144 3 Ci
264 144 3 Ci
264 144 3 Ci
265 144 3 Ci
266 144 3 Ci
267 144 3 Ci
268 144 3 Ci
269 144 3 Ci
270 144 3 Ci
272 144 3 Ci
273 144 3 Ci
274 144 3 Ci
275 144 3 Ci
276 144 3 Ci
277 144 3 Ci
277 144 3 Ci
278 144 3 Ci
279 144 3 Ci
280 144 3 Ci
281 144 3 Ci
282 144 3 Ci
284 144 3 Ci
285 144 3 Ci
286 144 3 Ci
287 144 3 Ci
288 144 3 Ci
289 144 3 Ci
289 144 3 Ci
290 144 3 Ci
291 144 3 Ci
292 144 3 Ci
293 144 3 Ci
294 144 3 Ci
296 144 3 Ci
297 144 3 Ci
298 144 3 Ci
299 144 3 Ci
300 144 3 Ci
301 144 3 Ci
301 144 3 Ci
302 144 3 Ci
303 144 3 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 349 40 Box Fill

0 40 60 120 Box Fill

289 40 60 120 Box Fill

0 160 349 39 Box Fill

1 1 1 SetBgColor
59 159 230 1 Box Fill

288 38 1 122 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 59 161 moveto
59 38 lineto
290 38 lineto
288 40 lineto
61 40 lineto
61 159 lineto
59 161 lineto
59 161  lineto closepath Fill
72 17 0 174 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+0, +0\)) 72 0 13 DrawAdjText
EndText
9 17 0 69 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 111 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 154 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 196 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 239 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 281 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
69 165 281 165 LS
90 165 90 170 LS
69 165 69 175 LS
133 165 133 170 LS
111 165 111 175 LS
175 165 175 170 LS
154 165 154 175 LS
217 165 217 170 LS
196 165 196 175 LS
260 165 260 170 LS
239 165 239 175 LS
281 165 281 175 LS
9 17 0 36 152 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 23 131 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 23 110 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 23 90 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 23 69 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
55 152 55 48 LS
55 142 50 142 LS
55 152 45 152 LS
55 121 50 121 LS
55 131 45 131 LS
55 100 50 100 LS
55 110 45 110 LS
55 79 50 79 LS
55 90 45 90 LS
55 58 50 58 LS
55 69 45 69 LS
55 48 45 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 38 189 303 341
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:11 1999)
%%Title: (/tmp/1.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:11 1999) show
10 20 moveto
(File: /tmp/1.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
50 250 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 213 123 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 68 moveto
 78 68 lineto
 79 70 lineto
 80 73 lineto
 81 76 lineto
 82 81 lineto
 83 86 lineto
 83 92 lineto
 84 99 lineto
 85 106 lineto
 86 114 lineto
 87 122 lineto
 88 129 lineto
 88 137 lineto
 89 143 lineto
 90 144 lineto
 91 139 lineto
 92 132 lineto
 93 126 lineto
 94 120 lineto
 94 115 lineto
 95 110 lineto
 96 107 lineto
 97 104 lineto
 98 102 lineto
 99 100 lineto
 99 100 lineto
 100 100 lineto
 101 101 lineto
 102 102 lineto
 103 105 lineto
 104 107 lineto
 105 110 lineto
 105 114 lineto
 106 117 lineto
 107 121 lineto
 108 125 lineto
 109 129 lineto
 110 132 lineto
 110 135 lineto
 111 138 lineto
 112 140 lineto
 113 142 lineto
 114 142 lineto
 115 142 lineto
 116 142 lineto
 116 141 lineto
 117 141 lineto
 118 140 lineto
 120 140 lineto
 121 141 lineto
 121 141 lineto
 122 142 lineto
 123 143 lineto
 124 145 lineto
 125 146 lineto
 126 148 lineto
 127 149 lineto
 127 150 lineto
 128 151 lineto
 129 150 lineto
 130 149 lineto
 131 148 lineto
 132 147 lineto
 132 146 lineto
 133 146 lineto
 134 146 lineto
 135 146 lineto
 137 147 lineto
 138 148 lineto
 138 149 lineto
 139 150 lineto
 140 151 lineto
 141 150 lineto
 142 148 lineto
 143 147 lineto
 143 145 lineto
 144 143 lineto
 145 142 lineto
 146 141 lineto
 147 139 lineto
 148 138 lineto
 149 138 lineto
 149 137 lineto
 150 137 lineto
 151 136 lineto
 153 137 lineto
 154 138 lineto
 154 138 lineto
 155 152 lineto
 156 152 lineto
 157 152 lineto
 159 152 lineto
 160 152 lineto
 160 152 lineto
 161 152 lineto
 162 152 lineto
 164 152 lineto
 165 152 lineto
 165 152 lineto
 166 152 lineto
 167 152 lineto
 168 152 lineto
 170 152 lineto
 171 152 lineto
 171 152 lineto
 172 152 lineto
 173 152 lineto
 175 152 lineto
 176 152 lineto
 176 152 lineto
 177 152 lineto
 178 152 lineto
 179 152 lineto
 181 152 lineto
 182 152 lineto
 182 152 lineto
 183 152 lineto
 184 152 lineto
 186 152 lineto
 187 152 lineto
 187 152 lineto
 188 152 lineto
 189 152 lineto
 190 152 lineto
 192 152 lineto
 193 152 lineto
 193 152 lineto
 194 152 lineto
 195 152 lineto
 197 152 lineto
 198 152 lineto
 198 152 lineto
 199 152 lineto
 200 152 lineto
 201 152 lineto
 203 152 lineto
 204 152 lineto
 204 152 lineto
 205 152 lineto
 206 152 lineto
 208 152 lineto
 209 152 lineto
 209 152 lineto
 210 152 lineto
 211 152 lineto
 212 152 lineto
 214 152 lineto
 215 152 lineto
 215 152 lineto
 216 152 lineto
 217 152 lineto
 219 152 lineto
 220 152 lineto
 220 152 lineto
 221 152 lineto
 222 152 lineto
 223 152 lineto
 225 152 lineto
 226 152 lineto
 226 152 lineto
 227 152 lineto
 228 152 lineto
 230 152 lineto
 231 152 lineto
 231 152 lineto
 232 152 lineto
 233 152 lineto
 234 152 lineto
 236 152 lineto
 237 152 lineto
 237 152 lineto
 238 152 lineto
 239 152 lineto
 241 152 lineto
 242 152 lineto
 242 152 lineto
 243 152 lineto
 244 152 lineto
 245 152 lineto
 247 152 lineto
 248 152 lineto
 248 152 lineto
 249 152 lineto
 250 152 lineto
 252 152 lineto
 253 152 lineto
 253 152 lineto
 254 152 lineto
 255 152 lineto
 256 152 lineto
 258 152 lineto
 259 152 lineto
 259 152 lineto
 260 152 lineto
 261 152 lineto
 263 152 lineto
 264 152 lineto
 264 152 lineto
 265 152 lineto
 266 152 lineto
 268 152 lineto
 269 152 lineto
 270 152 lineto
 270 152 lineto
 271 152 lineto
 272 152 lineto
 274 152 lineto
 275 152 lineto
 275 152 lineto
 276 152 lineto
 277 152 lineto
 279 152 lineto
 280 152 lineto
 281 152 lineto
 281 152 lineto
 282 152 lineto
 283 152 lineto
 285 152 lineto
 286 152 lineto
 286 152 lineto
 287 152 lineto
 288 152 lineto
 290 152 lineto
 291 152 lineto
 292 152 lineto
 292 152 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 68 1 Ci
78 68 1 Ci
79 70 1 Ci
80 73 1 Ci
81 76 1 Ci
82 81 1 Ci
83 86 1 Ci
83 92 1 Ci
84 99 1 Ci
85 106 1 Ci
86 114 1 Ci
87 122 1 Ci
88 129 1 Ci
88 137 1 Ci
89 143 1 Ci
90 144 1 Ci
91 139 1 Ci
92 132 1 Ci
93 126 1 Ci
94 120 1 Ci
94 115 1 Ci
95 110 1 Ci
96 107 1 Ci
97 104 1 Ci
98 102 1 Ci
99 100 1 Ci
99 100 1 Ci
100 100 1 Ci
101 101 1 Ci
102 102 1 Ci
103 105 1 Ci
104 107 1 Ci
105 110 1 Ci
105 114 1 Ci
106 117 1 Ci
107 121 1 Ci
108 125 1 Ci
109 129 1 Ci
110 132 1 Ci
110 135 1 Ci
111 138 1 Ci
112 140 1 Ci
113 142 1 Ci
114 142 1 Ci
115 142 1 Ci
116 142 1 Ci
116 141 1 Ci
117 141 1 Ci
118 140 1 Ci
120 140 1 Ci
121 141 1 Ci
121 141 1 Ci
122 142 1 Ci
123 143 1 Ci
124 145 1 Ci
125 146 1 Ci
126 148 1 Ci
127 149 1 Ci
127 150 1 Ci
128 151 1 Ci
129 150 1 Ci
130 149 1 Ci
131 148 1 Ci
132 147 1 Ci
132 146 1 Ci
133 146 1 Ci
134 146 1 Ci
135 146 1 Ci
137 147 1 Ci
138 148 1 Ci
138 149 1 Ci
139 150 1 Ci
140 151 1 Ci
141 150 1 Ci
142 148 1 Ci
143 147 1 Ci
143 145 1 Ci
144 143 1 Ci
145 142 1 Ci
146 141 1 Ci
147 139 1 Ci
148 138 1 Ci
149 138 1 Ci
149 137 1 Ci
150 137 1 Ci
151 136 1 Ci
153 137 1 Ci
154 138 1 Ci
154 138 1 Ci
155 152 1 Ci
156 152 1 Ci
157 152 1 Ci
159 152 1 Ci
160 152 1 Ci
160 152 1 Ci
161 152 1 Ci
162 152 1 Ci
164 152 1 Ci
165 152 1 Ci
165 152 1 Ci
166 152 1 Ci
167 152 1 Ci
168 152 1 Ci
170 152 1 Ci
171 152 1 Ci
171 152 1 Ci
172 152 1 Ci
173 152 1 Ci
175 152 1 Ci
176 152 1 Ci
176 152 1 Ci
177 152 1 Ci
178 152 1 Ci
179 152 1 Ci
181 152 1 Ci
182 152 1 Ci
182 152 1 Ci
183 152 1 Ci
184 152 1 Ci
186 152 1 Ci
187 152 1 Ci
187 152 1 Ci
188 152 1 Ci
189 152 1 Ci
190 152 1 Ci
192 152 1 Ci
193 152 1 Ci
193 152 1 Ci
194 152 1 Ci
195 152 1 Ci
197 152 1 Ci
198 152 1 Ci
198 152 1 Ci
199 152 1 Ci
200 152 1 Ci
201 152 1 Ci
203 152 1 Ci
204 152 1 Ci
204 152 1 Ci
205 152 1 Ci
206 152 1 Ci
208 152 1 Ci
209 152 1 Ci
209 152 1 Ci
210 152 1 Ci
211 152 1 Ci
212 152 1 Ci
214 152 1 Ci
215 152 1 Ci
215 152 1 Ci
216 152 1 Ci
217 152 1 Ci
219 152 1 Ci
220 152 1 Ci
220 152 1 Ci
221 152 1 Ci
222 152 1 Ci
223 152 1 Ci
225 152 1 Ci
226 152 1 Ci
226 152 1 Ci
227 152 1 Ci
228 152 1 Ci
230 152 1 Ci
231 152 1 Ci
231 152 1 Ci
232 152 1 Ci
233 152 1 Ci
234 152 1 Ci
236 152 1 Ci
237 152 1 Ci
237 152 1 Ci
238 152 1 Ci
239 152 1 Ci
241 152 1 Ci
242 152 1 Ci
242 152 1 Ci
243 152 1 Ci
244 152 1 Ci
245 152 1 Ci
247 152 1 Ci
248 152 1 Ci
248 152 1 Ci
249 152 1 Ci
250 152 1 Ci
252 152 1 Ci
253 152 1 Ci
253 152 1 Ci
254 152 1 Ci
255 152 1 Ci
256 152 1 Ci
258 152 1 Ci
259 152 1 Ci
259 152 1 Ci
260 152 1 Ci
261 152 1 Ci
263 152 1 Ci
264 152 1 Ci
264 152 1 Ci
265 152 1 Ci
266 152 1 Ci
268 152 1 Ci
269 152 1 Ci
270 152 1 Ci
270 152 1 Ci
271 152 1 Ci
272 152 1 Ci
274 152 1 Ci
275 152 1 Ci
275 152 1 Ci
276 152 1 Ci
277 152 1 Ci
279 152 1 Ci
280 152 1 Ci
281 152 1 Ci
281 152 1 Ci
282 152 1 Ci
283 152 1 Ci
285 152 1 Ci
286 152 1 Ci
286 152 1 Ci
287 152 1 Ci
288 152 1 Ci
290 152 1 Ci
291 152 1 Ci
292 152 1 Ci
292 152 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 69 3 Ci
78 69 3 Ci
79 69 3 Ci
80 69 3 Ci
82 69 3 Ci
83 69 3 Ci
83 69 3 Ci
84 69 3 Ci
85 68 3 Ci
87 68 3 Ci
88 66 3 Ci
88 64 3 Ci
89 57 3 Ci
90 131 3 Ci
91 123 3 Ci
92 121 3 Ci
93 120 3 Ci
94 119 3 Ci
94 119 3 Ci
95 119 3 Ci
96 119 3 Ci
98 119 3 Ci
99 119 3 Ci
99 119 3 Ci
100 119 3 Ci
101 120 3 Ci
102 120 3 Ci
103 120 3 Ci
104 121 3 Ci
105 121 3 Ci
105 122 3 Ci
106 122 3 Ci
107 123 3 Ci
108 124 3 Ci
109 125 3 Ci
110 127 3 Ci
110 129 3 Ci
111 131 3 Ci
112 135 3 Ci
113 139 3 Ci
114 144 3 Ci
115 59 3 Ci
116 62 3 Ci
116 65 3 Ci
117 67 3 Ci
118 68 3 Ci
119 70 3 Ci
120 71 3 Ci
121 72 3 Ci
121 72 3 Ci
122 73 3 Ci
123 74 3 Ci
124 75 3 Ci
125 75 3 Ci
126 76 3 Ci
127 77 3 Ci
127 79 3 Ci
128 115 3 Ci
129 121 3 Ci
130 122 3 Ci
131 122 3 Ci
132 123 3 Ci
132 123 3 Ci
133 124 3 Ci
134 124 3 Ci
135 125 3 Ci
136 125 3 Ci
137 125 3 Ci
138 126 3 Ci
138 126 3 Ci
139 125 3 Ci
140 93 3 Ci
141 85 3 Ci
142 85 3 Ci
143 85 3 Ci
143 85 3 Ci
144 85 3 Ci
145 86 3 Ci
146 86 3 Ci
148 87 3 Ci
149 87 3 Ci
149 88 3 Ci
150 89 3 Ci
151 89 3 Ci
153 90 3 Ci
154 91 3 Ci
154 92 3 Ci
155 144 3 Ci
156 144 3 Ci
157 144 3 Ci
159 144 3 Ci
160 144 3 Ci
160 144 3 Ci
161 144 3 Ci
162 144 3 Ci
164 144 3 Ci
165 144 3 Ci
165 144 3 Ci
166 144 3 Ci
167 144 3 Ci
168 144 3 Ci
170 144 3 Ci
171 144 3 Ci
171 144 3 Ci
172 144 3 Ci
173 144 3 Ci
175 144 3 Ci
176 144 3 Ci
176 144 3 Ci
177 144 3 Ci
178 144 3 Ci
179 144 3 Ci
181 144 3 Ci
182 144 3 Ci
182 144 3 Ci
183 144 3 Ci
184 144 3 Ci
186 144 3 Ci
187 144 3 Ci
187 144 3 Ci
188 144 3 Ci
189 144 3 Ci
190 144 3 Ci
192 144 3 Ci
193 144 3 Ci
193 144 3 Ci
194 144 3 Ci
195 144 3 Ci
197 144 3 Ci
198 144 3 Ci
198 144 3 Ci
199 144 3 Ci
200 144 3 Ci
201 144 3 Ci
203 144 3 Ci
204 144 3 Ci
204 144 3 Ci
205 144 3 Ci
206 144 3 Ci
208 144 3 Ci
209 144 3 Ci
209 144 3 Ci
210 144 3 Ci
211 144 3 Ci
212 144 3 Ci
214 144 3 Ci
215 144 3 Ci
215 144 3 Ci
216 144 3 Ci
217 144 3 Ci
219 144 3 Ci
220 144 3 Ci
220 144 3 Ci
221 144 3 Ci
222 144 3 Ci
223 144 3 Ci
225 144 3 Ci
226 144 3 Ci
226 144 3 Ci
227 144 3 Ci
228 144 3 Ci
230 144 3 Ci
231 144 3 Ci
231 144 3 Ci
232 144 3 Ci
233 144 3 Ci
234 144 3 Ci
236 144 3 Ci
237 144 3 Ci
237 144 3 Ci
238 144 3 Ci
239 144 3 Ci
241 144 3 Ci
242 144 3 Ci
242 144 3 Ci
243 144 3 Ci
244 144 3 Ci
245 144 3 Ci
247 144 3 Ci
248 144 3 Ci
248 144 3 Ci
249 144 3 Ci
250 144 3 Ci
252 144 3 Ci
253 144 3 Ci
253 144 3 Ci
254 144 3 Ci
255 144 3 Ci
256 144 3 Ci
258 144 3 Ci
259 144 3 Ci
259 144 3 Ci
260 144 3 Ci
261 144 3 Ci
263 144 3 Ci
264 144 3 Ci
264 144 3 Ci
265 144 3 Ci
266 144 3 Ci
268 144 3 Ci
269 144 3 Ci
270 144 3 Ci
270 144 3 Ci
271 144 3 Ci
272 144 3 Ci
274 144 3 Ci
275 144 3 Ci
275 144 3 Ci
276 144 3 Ci
277 144 3 Ci
279 144 3 Ci
280 144 3 Ci
281 144 3 Ci
281 144 3 Ci
282 144 3 Ci
283 144 3 Ci
285 144 3 Ci
286 144 3 Ci
286 144 3 Ci
287 144 3 Ci
288 144 3 Ci
290 144 3 Ci
291 144 3 Ci
292 144 3 Ci
292 144 3 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 349 40 Box Fill

0 40 69 120 Box Fill

280 40 69 120 Box Fill

0 160 349 39 Box Fill

1 1 1 SetBgColor
68 159 212 1 Box Fill

279 38 1 122 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 161 moveto
68 38 lineto
281 38 lineto
279 40 lineto
70 40 lineto
70 159 lineto
68 161 lineto
68 161  lineto closepath Fill
72 17 0 174 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+2, +2\)) 72 0 13 DrawAdjText
EndText
9 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 117 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 156 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 194 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 233 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 272 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 165 272 165 LS
97 165 97 170 LS
78 165 78 175 LS
136 165 136 170 LS
117 165 117 175 LS
175 165 175 170 LS
156 165 156 175 LS
214 165 214 170 LS
194 165 194 175 LS
253 165 253 170 LS
233 165 233 175 LS
272 165 272 175 LS
9 17 0 45 152 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 126 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.005) 45 0 13 DrawAdjText
EndText
36 17 0 32 100 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.01) 36 0 13 DrawAdjText
EndText
45 17 0 27 74 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.015) 45 0 13 DrawAdjText
EndText
36 17 0 32 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 152 64 48 LS
64 139 59 139 LS
64 152 54 152 LS
64 113 59 113 LS
64 126 54 126 LS
64 87 59 87 LS
64 100 54 100 LS
64 61 59 61 LS
64 74 54 74 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 38 379 303 414
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:11 1999)
%%Title: (/tmp/2.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:11 1999) show
10 20 moveto
(File: /tmp/2.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
50 500 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 213 4 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 49 moveto
 78 49 lineto
 79 49 lineto
 80 49 lineto
 82 49 lineto
 83 49 lineto
 83 49 lineto
 84 49 lineto
 85 49 lineto
 87 49 lineto
 88 49 lineto
 88 49 lineto
 89 49 lineto
 90 48 lineto
 91 48 lineto
 93 48 lineto
 94 48 lineto
 94 48 lineto
 95 48 lineto
 96 48 lineto
 98 48 lineto
 99 48 lineto
 99 48 lineto
 100 48 lineto
 101 48 lineto
 102 48 lineto
 104 48 lineto
 105 48 lineto
 105 48 lineto
 106 48 lineto
 107 48 lineto
 109 48 lineto
 110 48 lineto
 110 48 lineto
 111 48 lineto
 112 48 lineto
 113 48 lineto
 115 48 lineto
 116 48 lineto
 116 48 lineto
 117 48 lineto
 118 48 lineto
 120 48 lineto
 121 48 lineto
 121 48 lineto
 122 48 lineto
 123 48 lineto
 124 48 lineto
 126 48 lineto
 127 48 lineto
 127 48 lineto
 128 48 lineto
 129 48 lineto
 131 48 lineto
 132 48 lineto
 132 48 lineto
 133 48 lineto
 134 48 lineto
 135 48 lineto
 137 48 lineto
 138 48 lineto
 138 48 lineto
 139 48 lineto
 140 48 lineto
 142 48 lineto
 143 48 lineto
 143 48 lineto
 144 48 lineto
 145 48 lineto
 146 48 lineto
 148 48 lineto
 149 48 lineto
 149 48 lineto
 150 48 lineto
 151 48 lineto
 153 48 lineto
 154 48 lineto
 154 49 lineto
 155 49 lineto
 156 49 lineto
 157 49 lineto
 159 49 lineto
 160 49 lineto
 160 49 lineto
 161 49 lineto
 162 49 lineto
 164 49 lineto
 165 49 lineto
 165 49 lineto
 166 49 lineto
 167 49 lineto
 168 49 lineto
 170 49 lineto
 171 49 lineto
 171 49 lineto
 172 49 lineto
 173 49 lineto
 175 49 lineto
 176 49 lineto
 176 49 lineto
 177 49 lineto
 178 49 lineto
 179 49 lineto
 181 49 lineto
 182 49 lineto
 182 49 lineto
 183 49 lineto
 184 49 lineto
 186 49 lineto
 187 49 lineto
 187 49 lineto
 188 49 lineto
 189 49 lineto
 190 49 lineto
 192 49 lineto
 193 49 lineto
 193 49 lineto
 194 49 lineto
 195 49 lineto
 197 49 lineto
 198 49 lineto
 198 49 lineto
 199 49 lineto
 200 49 lineto
 201 49 lineto
 203 49 lineto
 204 49 lineto
 204 49 lineto
 205 49 lineto
 206 49 lineto
 208 49 lineto
 209 49 lineto
 209 49 lineto
 210 49 lineto
 211 49 lineto
 212 49 lineto
 214 49 lineto
 215 49 lineto
 215 49 lineto
 216 49 lineto
 217 49 lineto
 219 49 lineto
 220 49 lineto
 220 49 lineto
 221 49 lineto
 222 49 lineto
 223 49 lineto
 225 49 lineto
 226 49 lineto
 226 49 lineto
 227 49 lineto
 228 49 lineto
 230 49 lineto
 231 49 lineto
 231 49 lineto
 232 49 lineto
 233 49 lineto
 234 49 lineto
 236 49 lineto
 237 49 lineto
 237 49 lineto
 238 49 lineto
 239 49 lineto
 241 49 lineto
 242 49 lineto
 242 49 lineto
 243 49 lineto
 244 49 lineto
 245 49 lineto
 247 49 lineto
 248 49 lineto
 248 49 lineto
 249 49 lineto
 250 49 lineto
 252 49 lineto
 253 49 lineto
 253 49 lineto
 254 49 lineto
 255 49 lineto
 256 49 lineto
 258 49 lineto
 259 49 lineto
 259 49 lineto
 260 49 lineto
 261 49 lineto
 263 49 lineto
 264 49 lineto
 264 49 lineto
 265 49 lineto
 266 49 lineto
 268 49 lineto
 269 49 lineto
 270 49 lineto
 270 49 lineto
 271 49 lineto
 272 49 lineto
 274 49 lineto
 275 49 lineto
 275 49 lineto
 276 49 lineto
 277 49 lineto
 279 49 lineto
 280 49 lineto
 281 49 lineto
 281 49 lineto
 282 49 lineto
 283 49 lineto
 285 49 lineto
 286 49 lineto
 286 49 lineto
 287 49 lineto
 288 49 lineto
 290 49 lineto
 291 49 lineto
 292 49 lineto
 292 49 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 49 1 Ci
78 49 1 Ci
79 49 1 Ci
80 49 1 Ci
82 49 1 Ci
83 49 1 Ci
83 49 1 Ci
84 49 1 Ci
85 49 1 Ci
87 49 1 Ci
88 49 1 Ci
88 49 1 Ci
89 49 1 Ci
90 48 1 Ci
91 48 1 Ci
93 48 1 Ci
94 48 1 Ci
94 48 1 Ci
95 48 1 Ci
96 48 1 Ci
98 48 1 Ci
99 48 1 Ci
99 48 1 Ci
100 48 1 Ci
101 48 1 Ci
102 48 1 Ci
104 48 1 Ci
105 48 1 Ci
105 48 1 Ci
106 48 1 Ci
107 48 1 Ci
109 48 1 Ci
110 48 1 Ci
110 48 1 Ci
111 48 1 Ci
112 48 1 Ci
113 48 1 Ci
115 48 1 Ci
116 48 1 Ci
116 48 1 Ci
117 48 1 Ci
118 48 1 Ci
120 48 1 Ci
121 48 1 Ci
121 48 1 Ci
122 48 1 Ci
123 48 1 Ci
124 48 1 Ci
126 48 1 Ci
127 48 1 Ci
127 48 1 Ci
128 48 1 Ci
129 48 1 Ci
131 48 1 Ci
132 48 1 Ci
132 48 1 Ci
133 48 1 Ci
134 48 1 Ci
135 48 1 Ci
137 48 1 Ci
138 48 1 Ci
138 48 1 Ci
139 48 1 Ci
140 48 1 Ci
142 48 1 Ci
143 48 1 Ci
143 48 1 Ci
144 48 1 Ci
145 48 1 Ci
146 48 1 Ci
148 48 1 Ci
149 48 1 Ci
149 48 1 Ci
150 48 1 Ci
151 48 1 Ci
153 48 1 Ci
154 48 1 Ci
154 49 1 Ci
155 49 1 Ci
156 49 1 Ci
157 49 1 Ci
159 49 1 Ci
160 49 1 Ci
160 49 1 Ci
161 49 1 Ci
162 49 1 Ci
164 49 1 Ci
165 49 1 Ci
165 49 1 Ci
166 49 1 Ci
167 49 1 Ci
168 49 1 Ci
170 49 1 Ci
171 49 1 Ci
171 49 1 Ci
172 49 1 Ci
173 49 1 Ci
175 49 1 Ci
176 49 1 Ci
176 49 1 Ci
177 49 1 Ci
178 49 1 Ci
179 49 1 Ci
181 49 1 Ci
182 49 1 Ci
182 49 1 Ci
183 49 1 Ci
184 49 1 Ci
186 49 1 Ci
187 49 1 Ci
187 49 1 Ci
188 49 1 Ci
189 49 1 Ci
190 49 1 Ci
192 49 1 Ci
193 49 1 Ci
193 49 1 Ci
194 49 1 Ci
195 49 1 Ci
197 49 1 Ci
198 49 1 Ci
198 49 1 Ci
199 49 1 Ci
200 49 1 Ci
201 49 1 Ci
203 49 1 Ci
204 49 1 Ci
204 49 1 Ci
205 49 1 Ci
206 49 1 Ci
208 49 1 Ci
209 49 1 Ci
209 49 1 Ci
210 49 1 Ci
211 49 1 Ci
212 49 1 Ci
214 49 1 Ci
215 49 1 Ci
215 49 1 Ci
216 49 1 Ci
217 49 1 Ci
219 49 1 Ci
220 49 1 Ci
220 49 1 Ci
221 49 1 Ci
222 49 1 Ci
223 49 1 Ci
225 49 1 Ci
226 49 1 Ci
226 49 1 Ci
227 49 1 Ci
228 49 1 Ci
230 49 1 Ci
231 49 1 Ci
231 49 1 Ci
232 49 1 Ci
233 49 1 Ci
234 49 1 Ci
236 49 1 Ci
237 49 1 Ci
237 49 1 Ci
238 49 1 Ci
239 49 1 Ci
241 49 1 Ci
242 49 1 Ci
242 49 1 Ci
243 49 1 Ci
244 49 1 Ci
245 49 1 Ci
247 49 1 Ci
248 49 1 Ci
248 49 1 Ci
249 49 1 Ci
250 49 1 Ci
252 49 1 Ci
253 49 1 Ci
253 49 1 Ci
254 49 1 Ci
255 49 1 Ci
256 49 1 Ci
258 49 1 Ci
259 49 1 Ci
259 49 1 Ci
260 49 1 Ci
261 49 1 Ci
263 49 1 Ci
264 49 1 Ci
264 49 1 Ci
265 49 1 Ci
266 49 1 Ci
268 49 1 Ci
269 49 1 Ci
270 49 1 Ci
270 49 1 Ci
271 49 1 Ci
272 49 1 Ci
274 49 1 Ci
275 49 1 Ci
275 49 1 Ci
276 49 1 Ci
277 49 1 Ci
279 49 1 Ci
280 49 1 Ci
281 49 1 Ci
281 49 1 Ci
282 49 1 Ci
283 49 1 Ci
285 49 1 Ci
286 49 1 Ci
286 49 1 Ci
287 49 1 Ci
288 49 1 Ci
290 49 1 Ci
291 49 1 Ci
292 49 1 Ci
292 49 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 48 1 Ci
78 48 1 Ci
79 48 1 Ci
80 48 1 Ci
82 48 1 Ci
83 48 1 Ci
83 48 1 Ci
84 48 1 Ci
85 48 1 Ci
87 48 1 Ci
88 48 1 Ci
88 48 1 Ci
89 48 1 Ci
90 48 1 Ci
91 48 1 Ci
92 48 1 Ci
93 48 1 Ci
94 48 1 Ci
94 48 1 Ci
95 48 1 Ci
96 48 1 Ci
98 48 1 Ci
99 48 1 Ci
99 48 1 Ci
100 48 1 Ci
101 48 1 Ci
102 48 1 Ci
104 48 1 Ci
105 48 1 Ci
105 48 1 Ci
106 48 1 Ci
107 48 1 Ci
109 48 1 Ci
110 48 1 Ci
110 48 1 Ci
111 48 1 Ci
112 48 1 Ci
113 48 1 Ci
115 48 1 Ci
116 48 1 Ci
116 48 1 Ci
117 48 1 Ci
118 48 1 Ci
120 48 1 Ci
121 48 1 Ci
121 48 1 Ci
122 48 1 Ci
123 48 1 Ci
124 48 1 Ci
126 48 1 Ci
127 48 1 Ci
127 48 1 Ci
128 48 1 Ci
129 48 1 Ci
131 48 1 Ci
132 48 1 Ci
132 48 1 Ci
133 48 1 Ci
134 48 1 Ci
135 48 1 Ci
137 48 1 Ci
138 48 1 Ci
138 48 1 Ci
139 48 1 Ci
140 48 1 Ci
142 48 1 Ci
143 48 1 Ci
143 48 1 Ci
144 48 1 Ci
145 48 1 Ci
146 48 1 Ci
148 48 1 Ci
149 48 1 Ci
149 48 1 Ci
150 48 1 Ci
151 48 1 Ci
153 48 1 Ci
154 48 1 Ci
154 48 1 Ci
155 48 1 Ci
156 48 1 Ci
157 48 1 Ci
159 48 1 Ci
160 48 1 Ci
160 48 1 Ci
161 48 1 Ci
162 48 1 Ci
164 48 1 Ci
165 48 1 Ci
165 48 1 Ci
166 48 1 Ci
167 48 1 Ci
168 48 1 Ci
170 48 1 Ci
171 48 1 Ci
171 48 1 Ci
172 48 1 Ci
173 48 1 Ci
175 48 1 Ci
176 48 1 Ci
176 48 1 Ci
177 48 1 Ci
178 48 1 Ci
179 48 1 Ci
181 48 1 Ci
182 48 1 Ci
182 48 1 Ci
183 48 1 Ci
184 48 1 Ci
186 48 1 Ci
187 48 1 Ci
187 48 1 Ci
188 48 1 Ci
189 48 1 Ci
190 48 1 Ci
192 48 1 Ci
193 48 1 Ci
193 48 1 Ci
194 48 1 Ci
195 48 1 Ci
197 48 1 Ci
198 48 1 Ci
198 48 1 Ci
199 48 1 Ci
200 48 1 Ci
201 48 1 Ci
203 48 1 Ci
204 48 1 Ci
204 48 1 Ci
205 48 1 Ci
206 48 1 Ci
208 48 1 Ci
209 48 1 Ci
209 48 1 Ci
210 48 1 Ci
211 48 1 Ci
212 48 1 Ci
214 48 1 Ci
215 48 1 Ci
215 48 1 Ci
216 48 1 Ci
217 48 1 Ci
219 48 1 Ci
220 48 1 Ci
220 48 1 Ci
221 48 1 Ci
222 48 1 Ci
223 48 1 Ci
225 48 1 Ci
226 48 1 Ci
226 48 1 Ci
227 48 1 Ci
228 48 1 Ci
230 48 1 Ci
231 48 1 Ci
231 48 1 Ci
232 48 1 Ci
233 48 1 Ci
234 48 1 Ci
236 48 1 Ci
237 48 1 Ci
237 48 1 Ci
238 48 1 Ci
239 48 1 Ci
241 48 1 Ci
242 48 1 Ci
242 48 1 Ci
243 48 1 Ci
244 48 1 Ci
245 48 1 Ci
247 48 1 Ci
248 48 1 Ci
248 48 1 Ci
249 48 1 Ci
250 48 1 Ci
252 48 1 Ci
253 48 1 Ci
253 48 1 Ci
254 48 1 Ci
255 48 1 Ci
256 48 1 Ci
258 48 1 Ci
259 48 1 Ci
259 48 1 Ci
260 48 1 Ci
261 48 1 Ci
263 48 1 Ci
264 48 1 Ci
264 48 1 Ci
265 48 1 Ci
266 48 1 Ci
268 48 1 Ci
269 48 1 Ci
270 48 1 Ci
270 48 1 Ci
271 48 1 Ci
272 48 1 Ci
274 48 1 Ci
275 48 1 Ci
275 48 1 Ci
276 48 1 Ci
277 48 1 Ci
279 48 1 Ci
280 48 1 Ci
281 48 1 Ci
281 48 1 Ci
282 48 1 Ci
283 48 1 Ci
285 48 1 Ci
286 48 1 Ci
286 48 1 Ci
287 48 1 Ci
288 48 1 Ci
290 48 1 Ci
291 48 1 Ci
292 48 1 Ci
292 48 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 349 40 Box Fill

0 40 69 1 Box Fill

280 40 69 1 Box Fill

0 41 349 39 Box Fill

1 1 1 SetBgColor
68 40 212 1 Box Fill

279 38 1 3 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 42 moveto
68 38 lineto
281 38 lineto
279 40 lineto
70 40 lineto
70 40 lineto
68 42 lineto
68 42  lineto closepath Fill
72 17 0 174 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+4, +4\)) 72 0 13 DrawAdjText
EndText
9 17 0 78 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 117 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 156 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 194 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 233 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 272 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 46 272 46 LS
97 46 97 51 LS
78 46 78 56 LS
136 46 136 51 LS
117 46 117 56 LS
175 46 175 51 LS
156 46 156 56 LS
214 46 214 51 LS
194 46 194 56 LS
253 46 253 51 LS
233 46 233 56 LS
272 46 272 56 LS
9 17 0 45 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.001) 45 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.003) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.004) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 49 64 48 LS
64 49 59 49 LS
64 49 54 49 LS
64 49 59 49 LS
64 49 54 49 LS
64 48 59 48 LS
64 49 54 49 LS
64 48 59 48 LS
64 48 54 48 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 38 568 303 224
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:11 1999)
%%Title: (/tmp/3.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:11 1999) show
10 20 moveto
(File: /tmp/3.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
50 750 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 213 4 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 49 moveto
 78 49 lineto
 79 49 lineto
 80 49 lineto
 82 49 lineto
 83 49 lineto
 83 49 lineto
 84 49 lineto
 85 49 lineto
 87 49 lineto
 88 49 lineto
 88 49 lineto
 89 49 lineto
 90 49 lineto
 91 49 lineto
 93 49 lineto
 94 49 lineto
 94 49 lineto
 95 49 lineto
 96 49 lineto
 98 49 lineto
 99 49 lineto
 99 49 lineto
 100 49 lineto
 101 49 lineto
 102 49 lineto
 104 49 lineto
 105 49 lineto
 105 49 lineto
 106 49 lineto
 107 49 lineto
 109 49 lineto
 110 49 lineto
 110 49 lineto
 111 49 lineto
 112 49 lineto
 113 49 lineto
 115 49 lineto
 116 49 lineto
 116 49 lineto
 117 49 lineto
 118 49 lineto
 120 49 lineto
 121 49 lineto
 121 48 lineto
 122 48 lineto
 123 48 lineto
 124 48 lineto
 126 48 lineto
 127 48 lineto
 127 48 lineto
 128 48 lineto
 129 48 lineto
 130 48 lineto
 131 48 lineto
 132 48 lineto
 132 48 lineto
 133 48 lineto
 134 48 lineto
 135 48 lineto
 137 48 lineto
 138 48 lineto
 138 48 lineto
 139 48 lineto
 140 48 lineto
 142 48 lineto
 143 48 lineto
 143 48 lineto
 144 48 lineto
 145 48 lineto
 146 48 lineto
 148 48 lineto
 149 48 lineto
 149 48 lineto
 150 48 lineto
 151 48 lineto
 153 48 lineto
 154 48 lineto
 154 49 lineto
 155 49 lineto
 156 49 lineto
 157 49 lineto
 159 49 lineto
 160 49 lineto
 160 49 lineto
 161 49 lineto
 162 49 lineto
 164 49 lineto
 165 49 lineto
 165 49 lineto
 166 49 lineto
 167 49 lineto
 168 49 lineto
 170 49 lineto
 171 49 lineto
 171 49 lineto
 172 49 lineto
 173 49 lineto
 175 49 lineto
 176 49 lineto
 176 49 lineto
 177 49 lineto
 178 49 lineto
 179 49 lineto
 181 49 lineto
 182 49 lineto
 182 49 lineto
 183 49 lineto
 184 49 lineto
 186 49 lineto
 187 49 lineto
 187 49 lineto
 188 49 lineto
 189 49 lineto
 190 49 lineto
 192 49 lineto
 193 49 lineto
 193 49 lineto
 194 49 lineto
 195 49 lineto
 197 49 lineto
 198 49 lineto
 198 49 lineto
 199 49 lineto
 200 49 lineto
 201 49 lineto
 203 49 lineto
 204 49 lineto
 204 49 lineto
 205 49 lineto
 206 49 lineto
 208 49 lineto
 209 49 lineto
 209 49 lineto
 210 49 lineto
 211 49 lineto
 212 49 lineto
 214 49 lineto
 215 49 lineto
 215 49 lineto
 216 49 lineto
 217 49 lineto
 219 49 lineto
 220 49 lineto
 220 49 lineto
 221 49 lineto
 222 49 lineto
 223 49 lineto
 225 49 lineto
 226 49 lineto
 226 49 lineto
 227 49 lineto
 228 49 lineto
 230 49 lineto
 231 49 lineto
 231 49 lineto
 232 49 lineto
 233 49 lineto
 234 49 lineto
 236 49 lineto
 237 49 lineto
 237 49 lineto
 238 49 lineto
 239 49 lineto
 241 49 lineto
 242 49 lineto
 242 49 lineto
 243 49 lineto
 244 49 lineto
 245 49 lineto
 247 49 lineto
 248 49 lineto
 248 49 lineto
 249 49 lineto
 250 49 lineto
 252 49 lineto
 253 49 lineto
 253 49 lineto
 254 49 lineto
 255 49 lineto
 256 49 lineto
 258 49 lineto
 259 49 lineto
 259 49 lineto
 260 49 lineto
 261 49 lineto
 263 49 lineto
 264 49 lineto
 264 49 lineto
 265 49 lineto
 266 49 lineto
 268 49 lineto
 269 49 lineto
 270 49 lineto
 270 49 lineto
 271 49 lineto
 272 49 lineto
 274 49 lineto
 275 49 lineto
 275 49 lineto
 276 49 lineto
 277 49 lineto
 279 49 lineto
 280 49 lineto
 281 49 lineto
 281 49 lineto
 282 49 lineto
 283 49 lineto
 285 49 lineto
 286 49 lineto
 286 49 lineto
 287 49 lineto
 288 49 lineto
 290 49 lineto
 291 49 lineto
 292 49 lineto
 292 49 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 49 1 Ci
78 49 1 Ci
79 49 1 Ci
80 49 1 Ci
82 49 1 Ci
83 49 1 Ci
83 49 1 Ci
84 49 1 Ci
85 49 1 Ci
87 49 1 Ci
88 49 1 Ci
88 49 1 Ci
89 49 1 Ci
90 49 1 Ci
91 49 1 Ci
93 49 1 Ci
94 49 1 Ci
94 49 1 Ci
95 49 1 Ci
96 49 1 Ci
98 49 1 Ci
99 49 1 Ci
99 49 1 Ci
100 49 1 Ci
101 49 1 Ci
102 49 1 Ci
104 49 1 Ci
105 49 1 Ci
105 49 1 Ci
106 49 1 Ci
107 49 1 Ci
109 49 1 Ci
110 49 1 Ci
110 49 1 Ci
111 49 1 Ci
112 49 1 Ci
113 49 1 Ci
115 49 1 Ci
116 49 1 Ci
116 49 1 Ci
117 49 1 Ci
118 49 1 Ci
120 49 1 Ci
121 49 1 Ci
121 48 1 Ci
122 48 1 Ci
123 48 1 Ci
124 48 1 Ci
126 48 1 Ci
127 48 1 Ci
127 48 1 Ci
128 48 1 Ci
129 48 1 Ci
130 48 1 Ci
131 48 1 Ci
132 48 1 Ci
132 48 1 Ci
133 48 1 Ci
134 48 1 Ci
135 48 1 Ci
137 48 1 Ci
138 48 1 Ci
138 48 1 Ci
139 48 1 Ci
140 48 1 Ci
142 48 1 Ci
143 48 1 Ci
143 48 1 Ci
144 48 1 Ci
145 48 1 Ci
146 48 1 Ci
148 48 1 Ci
149 48 1 Ci
149 48 1 Ci
150 48 1 Ci
151 48 1 Ci
153 48 1 Ci
154 48 1 Ci
154 49 1 Ci
155 49 1 Ci
156 49 1 Ci
157 49 1 Ci
159 49 1 Ci
160 49 1 Ci
160 49 1 Ci
161 49 1 Ci
162 49 1 Ci
164 49 1 Ci
165 49 1 Ci
165 49 1 Ci
166 49 1 Ci
167 49 1 Ci
168 49 1 Ci
170 49 1 Ci
171 49 1 Ci
171 49 1 Ci
172 49 1 Ci
173 49 1 Ci
175 49 1 Ci
176 49 1 Ci
176 49 1 Ci
177 49 1 Ci
178 49 1 Ci
179 49 1 Ci
181 49 1 Ci
182 49 1 Ci
182 49 1 Ci
183 49 1 Ci
184 49 1 Ci
186 49 1 Ci
187 49 1 Ci
187 49 1 Ci
188 49 1 Ci
189 49 1 Ci
190 49 1 Ci
192 49 1 Ci
193 49 1 Ci
193 49 1 Ci
194 49 1 Ci
195 49 1 Ci
197 49 1 Ci
198 49 1 Ci
198 49 1 Ci
199 49 1 Ci
200 49 1 Ci
201 49 1 Ci
203 49 1 Ci
204 49 1 Ci
204 49 1 Ci
205 49 1 Ci
206 49 1 Ci
208 49 1 Ci
209 49 1 Ci
209 49 1 Ci
210 49 1 Ci
211 49 1 Ci
212 49 1 Ci
214 49 1 Ci
215 49 1 Ci
215 49 1 Ci
216 49 1 Ci
217 49 1 Ci
219 49 1 Ci
220 49 1 Ci
220 49 1 Ci
221 49 1 Ci
222 49 1 Ci
223 49 1 Ci
225 49 1 Ci
226 49 1 Ci
226 49 1 Ci
227 49 1 Ci
228 49 1 Ci
230 49 1 Ci
231 49 1 Ci
231 49 1 Ci
232 49 1 Ci
233 49 1 Ci
234 49 1 Ci
236 49 1 Ci
237 49 1 Ci
237 49 1 Ci
238 49 1 Ci
239 49 1 Ci
241 49 1 Ci
242 49 1 Ci
242 49 1 Ci
243 49 1 Ci
244 49 1 Ci
245 49 1 Ci
247 49 1 Ci
248 49 1 Ci
248 49 1 Ci
249 49 1 Ci
250 49 1 Ci
252 49 1 Ci
253 49 1 Ci
253 49 1 Ci
254 49 1 Ci
255 49 1 Ci
256 49 1 Ci
258 49 1 Ci
259 49 1 Ci
259 49 1 Ci
260 49 1 Ci
261 49 1 Ci
263 49 1 Ci
264 49 1 Ci
264 49 1 Ci
265 49 1 Ci
266 49 1 Ci
268 49 1 Ci
269 49 1 Ci
270 49 1 Ci
270 49 1 Ci
271 49 1 Ci
272 49 1 Ci
274 49 1 Ci
275 49 1 Ci
275 49 1 Ci
276 49 1 Ci
277 49 1 Ci
279 49 1 Ci
280 49 1 Ci
281 49 1 Ci
281 49 1 Ci
282 49 1 Ci
283 49 1 Ci
285 49 1 Ci
286 49 1 Ci
286 49 1 Ci
287 49 1 Ci
288 49 1 Ci
290 49 1 Ci
291 49 1 Ci
292 49 1 Ci
292 49 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 48 1 Ci
78 48 1 Ci
79 48 1 Ci
80 48 1 Ci
82 48 1 Ci
83 48 1 Ci
83 48 1 Ci
84 48 1 Ci
85 48 1 Ci
87 48 1 Ci
88 48 1 Ci
88 48 1 Ci
89 48 1 Ci
90 48 1 Ci
91 48 1 Ci
93 48 1 Ci
94 48 1 Ci
94 48 1 Ci
95 48 1 Ci
96 48 1 Ci
98 48 1 Ci
99 48 1 Ci
99 48 1 Ci
100 48 1 Ci
101 48 1 Ci
102 48 1 Ci
104 48 1 Ci
105 48 1 Ci
105 48 1 Ci
106 48 1 Ci
107 48 1 Ci
109 48 1 Ci
110 48 1 Ci
110 48 1 Ci
111 48 1 Ci
112 48 1 Ci
113 48 1 Ci
115 48 1 Ci
116 48 1 Ci
116 48 1 Ci
117 48 1 Ci
118 48 1 Ci
120 48 1 Ci
121 48 1 Ci
121 48 1 Ci
122 48 1 Ci
123 48 1 Ci
124 48 1 Ci
126 48 1 Ci
127 48 1 Ci
127 48 1 Ci
128 48 1 Ci
129 48 1 Ci
131 48 1 Ci
132 48 1 Ci
132 48 1 Ci
133 48 1 Ci
134 48 1 Ci
135 48 1 Ci
137 48 1 Ci
138 48 1 Ci
138 48 1 Ci
139 48 1 Ci
140 48 1 Ci
142 48 1 Ci
143 48 1 Ci
143 48 1 Ci
144 48 1 Ci
145 48 1 Ci
146 48 1 Ci
148 48 1 Ci
149 48 1 Ci
149 48 1 Ci
150 48 1 Ci
151 48 1 Ci
153 48 1 Ci
154 48 1 Ci
154 48 1 Ci
155 48 1 Ci
156 48 1 Ci
157 48 1 Ci
159 48 1 Ci
160 48 1 Ci
160 48 1 Ci
161 48 1 Ci
162 48 1 Ci
164 48 1 Ci
165 48 1 Ci
165 48 1 Ci
166 48 1 Ci
167 48 1 Ci
168 48 1 Ci
170 48 1 Ci
171 48 1 Ci
171 48 1 Ci
172 48 1 Ci
173 48 1 Ci
175 48 1 Ci
176 48 1 Ci
176 48 1 Ci
177 48 1 Ci
178 48 1 Ci
179 48 1 Ci
181 48 1 Ci
182 48 1 Ci
182 48 1 Ci
183 48 1 Ci
184 48 1 Ci
186 48 1 Ci
187 48 1 Ci
187 48 1 Ci
188 48 1 Ci
189 48 1 Ci
190 48 1 Ci
192 48 1 Ci
193 48 1 Ci
193 48 1 Ci
194 48 1 Ci
195 48 1 Ci
197 48 1 Ci
198 48 1 Ci
198 48 1 Ci
199 48 1 Ci
200 48 1 Ci
201 48 1 Ci
203 48 1 Ci
204 48 1 Ci
204 48 1 Ci
205 48 1 Ci
206 48 1 Ci
208 48 1 Ci
209 48 1 Ci
209 48 1 Ci
210 48 1 Ci
211 48 1 Ci
212 48 1 Ci
214 48 1 Ci
215 48 1 Ci
215 48 1 Ci
216 48 1 Ci
217 48 1 Ci
219 48 1 Ci
220 48 1 Ci
220 48 1 Ci
221 48 1 Ci
222 48 1 Ci
223 48 1 Ci
225 48 1 Ci
226 48 1 Ci
226 48 1 Ci
227 48 1 Ci
228 48 1 Ci
230 48 1 Ci
231 48 1 Ci
231 48 1 Ci
232 48 1 Ci
233 48 1 Ci
234 48 1 Ci
236 48 1 Ci
237 48 1 Ci
237 48 1 Ci
238 48 1 Ci
239 48 1 Ci
241 48 1 Ci
242 48 1 Ci
242 48 1 Ci
243 48 1 Ci
244 48 1 Ci
245 48 1 Ci
247 48 1 Ci
248 48 1 Ci
248 48 1 Ci
249 48 1 Ci
250 48 1 Ci
252 48 1 Ci
253 48 1 Ci
253 48 1 Ci
254 48 1 Ci
255 48 1 Ci
256 48 1 Ci
258 48 1 Ci
259 48 1 Ci
259 48 1 Ci
260 48 1 Ci
261 48 1 Ci
263 48 1 Ci
264 48 1 Ci
264 48 1 Ci
265 48 1 Ci
266 48 1 Ci
268 48 1 Ci
269 48 1 Ci
270 48 1 Ci
270 48 1 Ci
271 48 1 Ci
272 48 1 Ci
274 48 1 Ci
275 48 1 Ci
275 48 1 Ci
276 48 1 Ci
277 48 1 Ci
279 48 1 Ci
280 48 1 Ci
281 48 1 Ci
281 48 1 Ci
282 48 1 Ci
283 48 1 Ci
285 48 1 Ci
286 48 1 Ci
286 48 1 Ci
287 48 1 Ci
288 48 1 Ci
290 48 1 Ci
291 48 1 Ci
292 48 1 Ci
292 48 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 349 40 Box Fill

0 40 69 1 Box Fill

280 40 69 1 Box Fill

0 41 349 39 Box Fill

1 1 1 SetBgColor
68 40 212 1 Box Fill

279 38 1 3 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 42 moveto
68 38 lineto
281 38 lineto
279 40 lineto
70 40 lineto
70 40 lineto
68 42 lineto
68 42  lineto closepath Fill
72 17 0 174 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(-9, +5\)) 72 0 13 DrawAdjText
EndText
9 17 0 78 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 117 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 156 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 194 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 233 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 272 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 46 272 46 LS
97 46 97 51 LS
78 46 78 56 LS
136 46 136 51 LS
117 46 117 56 LS
175 46 175 51 LS
156 46 156 56 LS
214 46 214 51 LS
194 46 194 56 LS
253 46 253 51 LS
233 46 233 56 LS
272 46 272 56 LS
9 17 0 45 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.001) 45 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.003) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.004) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.005) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 49 64 48 LS
64 49 59 49 LS
64 49 54 49 LS
64 49 59 49 LS
64 49 54 49 LS
64 49 59 49 LS
64 49 54 49 LS
64 48 59 48 LS
64 48 54 48 LS
64 48 59 48 LS
64 48 54 48 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 303 0 309 152
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:11 1999)
%%Title: (/tmp/4.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:11 1999) show
10 20 moveto
(File: /tmp/4.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
400 0 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 4 123 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 152 moveto
 78 127 lineto
 78 120 lineto
 78 112 lineto
 78 104 lineto
 78 95 lineto
 78 87 lineto
 78 80 lineto
 78 74 lineto
 78 69 lineto
 78 65 lineto
 78 62 lineto
 78 60 lineto
 78 62 lineto
 78 64 lineto
 78 68 lineto
 78 73 lineto
 78 79 lineto
 78 86 lineto
 78 94 lineto
 78 102 lineto
 78 111 lineto
 78 119 lineto
 78 128 lineto
 78 136 lineto
 78 144 lineto
 78 149 lineto
 78 144 lineto
 78 138 lineto
 78 133 lineto
 78 129 lineto
 78 126 lineto
 78 124 lineto
 78 122 lineto
 78 121 lineto
 78 121 lineto
 78 119 lineto
 78 117 lineto
 78 115 lineto
 78 112 lineto
 78 109 lineto
 78 106 lineto
 78 103 lineto
 78 100 lineto
 78 97 lineto
 78 95 lineto
 78 94 lineto
 78 92 lineto
 78 92 lineto
 78 92 lineto
 78 93 lineto
 78 95 lineto
 78 96 lineto
 78 99 lineto
 78 101 lineto
 78 152 lineto
 78 152 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 152 1 Ci
78 127 1 Ci
78 120 1 Ci
78 112 1 Ci
78 104 1 Ci
78 95 1 Ci
78 87 1 Ci
78 80 1 Ci
78 74 1 Ci
78 69 1 Ci
78 65 1 Ci
78 62 1 Ci
78 60 1 Ci
78 62 1 Ci
78 64 1 Ci
78 68 1 Ci
78 73 1 Ci
78 79 1 Ci
78 86 1 Ci
78 94 1 Ci
78 102 1 Ci
78 111 1 Ci
78 119 1 Ci
78 128 1 Ci
78 136 1 Ci
78 144 1 Ci
78 149 1 Ci
78 144 1 Ci
78 138 1 Ci
78 133 1 Ci
78 129 1 Ci
78 126 1 Ci
78 124 1 Ci
78 122 1 Ci
78 121 1 Ci
78 121 1 Ci
78 119 1 Ci
78 117 1 Ci
78 115 1 Ci
78 112 1 Ci
78 109 1 Ci
78 106 1 Ci
78 103 1 Ci
78 100 1 Ci
78 97 1 Ci
78 95 1 Ci
78 94 1 Ci
78 92 1 Ci
78 92 1 Ci
78 92 1 Ci
78 93 1 Ci
78 95 1 Ci
78 96 1 Ci
78 99 1 Ci
78 101 1 Ci
78 152 1 Ci
78 152 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 144 1 Ci
78 67 1 Ci
78 63 1 Ci
78 61 1 Ci
78 60 1 Ci
78 59 1 Ci
78 58 1 Ci
78 57 1 Ci
78 57 1 Ci
78 58 1 Ci
78 59 1 Ci
78 62 1 Ci
78 80 1 Ci
78 95 1 Ci
78 97 1 Ci
78 98 1 Ci
78 98 1 Ci
78 96 1 Ci
78 95 1 Ci
78 94 1 Ci
78 93 1 Ci
78 91 1 Ci
78 89 1 Ci
78 87 1 Ci
78 86 1 Ci
78 84 1 Ci
78 83 1 Ci
78 82 1 Ci
78 81 1 Ci
78 81 1 Ci
78 82 1 Ci
78 83 1 Ci
78 84 1 Ci
78 85 1 Ci
78 144 1 Ci
78 144 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 7 40 Box Fill

0 40 69 120 Box Fill

71 40 69 120 Box Fill

0 160 7 39 Box Fill

1 1 1 SetBgColor
68 159 3 1 Box Fill

70 38 1 122 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 161 moveto
68 38 lineto
72 38 lineto
70 40 lineto
70 40 lineto
70 159 lineto
68 161 lineto
68 161  lineto closepath Fill
72 17 0 70 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+6, +6\)) 72 0 13 DrawAdjText
EndText
9 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 79 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 79 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 79 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 165 79 165 LS
78 165 78 170 LS
78 165 78 175 LS
78 165 78 170 LS
78 165 78 175 LS
79 165 79 170 LS
78 165 78 175 LS
79 165 79 170 LS
79 165 79 175 LS
79 165 79 170 LS
79 165 79 175 LS
79 165 79 175 LS
9 17 0 45 152 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 131 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.001) 45 0 13 DrawAdjText
EndText
45 17 0 27 110 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 90 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.003) 45 0 13 DrawAdjText
EndText
45 17 0 27 69 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.004) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.005) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 152 64 48 LS
64 142 59 142 LS
64 152 54 152 LS
64 121 59 121 LS
64 131 54 131 LS
64 100 59 100 LS
64 110 54 110 LS
64 79 59 79 LS
64 90 54 90 LS
64 58 59 58 LS
64 69 54 69 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 303 189 309 341
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:12 1999)
%%Title: (/tmp/5.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:12 1999) show
10 20 moveto
(File: /tmp/5.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
400 250 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 4 123 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 152 moveto
 78 99 lineto
 78 104 lineto
 78 109 lineto
 78 113 lineto
 78 116 lineto
 78 119 lineto
 78 120 lineto
 78 121 lineto
 78 120 lineto
 78 119 lineto
 78 117 lineto
 78 116 lineto
 78 114 lineto
 78 113 lineto
 78 112 lineto
 78 111 lineto
 78 112 lineto
 78 113 lineto
 78 114 lineto
 78 116 lineto
 78 118 lineto
 78 120 lineto
 78 122 lineto
 78 123 lineto
 78 123 lineto
 78 123 lineto
 78 122 lineto
 78 120 lineto
 78 117 lineto
 78 114 lineto
 78 111 lineto
 78 107 lineto
 78 103 lineto
 78 99 lineto
 78 94 lineto
 78 90 lineto
 78 85 lineto
 78 81 lineto
 78 77 lineto
 78 73 lineto
 78 69 lineto
 78 66 lineto
 78 152 lineto
 78 152 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 152 1 Ci
78 99 1 Ci
78 104 1 Ci
78 109 1 Ci
78 113 1 Ci
78 116 1 Ci
78 119 1 Ci
78 120 1 Ci
78 121 1 Ci
78 120 1 Ci
78 119 1 Ci
78 117 1 Ci
78 116 1 Ci
78 114 1 Ci
78 113 1 Ci
78 112 1 Ci
78 111 1 Ci
78 112 1 Ci
78 113 1 Ci
78 114 1 Ci
78 116 1 Ci
78 118 1 Ci
78 120 1 Ci
78 122 1 Ci
78 123 1 Ci
78 123 1 Ci
78 123 1 Ci
78 122 1 Ci
78 120 1 Ci
78 117 1 Ci
78 114 1 Ci
78 111 1 Ci
78 107 1 Ci
78 103 1 Ci
78 99 1 Ci
78 94 1 Ci
78 90 1 Ci
78 85 1 Ci
78 81 1 Ci
78 77 1 Ci
78 73 1 Ci
78 69 1 Ci
78 66 1 Ci
78 152 1 Ci
78 152 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 144 1 Ci
78 120 1 Ci
78 121 1 Ci
78 122 1 Ci
78 123 1 Ci
78 125 1 Ci
78 126 1 Ci
78 128 1 Ci
78 130 1 Ci
78 131 1 Ci
78 132 1 Ci
78 132 1 Ci
78 132 1 Ci
78 131 1 Ci
78 130 1 Ci
78 128 1 Ci
78 127 1 Ci
78 125 1 Ci
78 123 1 Ci
78 122 1 Ci
78 120 1 Ci
78 119 1 Ci
78 118 1 Ci
78 117 1 Ci
78 116 1 Ci
78 115 1 Ci
78 115 1 Ci
78 114 1 Ci
78 113 1 Ci
78 111 1 Ci
78 110 1 Ci
78 109 1 Ci
78 107 1 Ci
78 105 1 Ci
78 104 1 Ci
78 102 1 Ci
78 100 1 Ci
78 99 1 Ci
78 98 1 Ci
78 97 1 Ci
78 97 1 Ci
78 98 1 Ci
78 144 1 Ci
78 144 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 7 40 Box Fill

0 40 69 120 Box Fill

71 40 69 120 Box Fill

0 160 7 39 Box Fill

1 1 1 SetBgColor
68 159 3 1 Box Fill

70 38 1 122 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 161 moveto
68 38 lineto
72 38 lineto
70 40 lineto
70 40 lineto
70 159 lineto
68 161 lineto
68 161  lineto closepath Fill
72 17 0 70 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(-7, +7\)) 72 0 13 DrawAdjText
EndText
9 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 79 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 79 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 79 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 165 79 165 LS
78 165 78 170 LS
78 165 78 175 LS
78 165 78 170 LS
78 165 78 175 LS
79 165 79 170 LS
78 165 78 175 LS
79 165 79 170 LS
79 165 79 175 LS
79 165 79 170 LS
79 165 79 175 LS
79 165 79 175 LS
9 17 0 45 152 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 117 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.001) 45 0 13 DrawAdjText
EndText
45 17 0 27 83 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.003) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 152 64 48 LS
64 135 59 135 LS
64 152 54 152 LS
64 100 59 100 LS
64 117 54 117 LS
64 65 59 65 LS
64 83 54 83 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 303 379 309 414
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:12 1999)
%%Title: (/tmp/6.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:12 1999) show
10 20 moveto
(File: /tmp/6.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
400 500 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 4 4 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 49 moveto
 78 48 lineto
 78 48 lineto
 78 48 lineto
 78 48 lineto
 78 48 lineto
 78 49 lineto
 78 49 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 49 1 Ci
78 48 1 Ci
78 48 1 Ci
78 48 1 Ci
78 48 1 Ci
78 48 1 Ci
78 49 1 Ci
78 49 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 48 1 Ci
78 48 1 Ci
78 48 1 Ci
78 48 1 Ci
78 48 1 Ci
78 48 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 7 40 Box Fill

0 40 69 1 Box Fill

71 40 69 1 Box Fill

0 41 7 39 Box Fill

1 1 1 SetBgColor
68 40 3 1 Box Fill

70 38 1 3 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 42 moveto
68 38 lineto
72 38 lineto
70 40 lineto
70 40 lineto
70 40 lineto
68 42 lineto
68 42  lineto closepath Fill
72 17 0 70 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+8, +8\)) 72 0 13 DrawAdjText
EndText
9 17 0 78 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 78 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 78 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 79 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 79 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 79 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 46 79 46 LS
78 46 78 51 LS
78 46 78 56 LS
78 46 78 51 LS
78 46 78 56 LS
79 46 79 51 LS
78 46 78 56 LS
79 46 79 51 LS
79 46 79 56 LS
79 46 79 51 LS
79 46 79 56 LS
79 46 79 56 LS
9 17 0 45 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.001) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.003) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 49 64 48 LS
64 49 59 49 LS
64 49 54 49 LS
64 49 59 49 LS
64 49 54 49 LS
64 48 59 48 LS
64 48 54 48 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 303 568 309 224
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:12 1999)
%%Title: (/tmp/7.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:12 1999) show
10 20 moveto
(File: /tmp/7.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
400 750 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 4 4 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 49 moveto
 78 48 lineto
 78 48 lineto
 78 48 lineto
 78 48 lineto
 78 48 lineto
 78 48 lineto
 78 49 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 49 1 Ci
78 48 1 Ci
78 48 1 Ci
78 48 1 Ci
78 48 1 Ci
78 48 1 Ci
78 48 1 Ci
78 49 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 48 1 Ci
78 48 1 Ci
78 48 1 Ci
78 48 1 Ci
78 48 1 Ci
78 48 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 7 40 Box Fill

0 40 69 1 Box Fill

71 40 69 1 Box Fill

0 41 7 39 Box Fill

1 1 1 SetBgColor
68 40 3 1 Box Fill

70 38 1 3 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 42 moveto
68 38 lineto
72 38 lineto
70 40 lineto
70 40 lineto
70 40 lineto
68 42 lineto
68 42  lineto closepath Fill
72 17 0 70 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(-5, +9\)) 72 0 13 DrawAdjText
EndText
9 17 0 78 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 78 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 78 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 79 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 79 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 79 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 46 79 46 LS
78 46 78 51 LS
78 46 78 56 LS
78 46 78 51 LS
78 46 78 56 LS
79 46 79 51 LS
78 46 78 56 LS
79 46 79 51 LS
79 46 79 56 LS
79 46 79 51 LS
79 46 79 56 LS
79 46 79 56 LS
9 17 0 45 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.004) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.006) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.008) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 49 64 48 LS
64 49 59 49 LS
64 49 54 49 LS
64 49 59 49 LS
64 49 54 49 LS
64 48 59 48 LS
64 49 54 49 LS
64 48 59 48 LS
64 48 54 48 LS
64 48 54 48 LS
grestore
 grestore
showpage
%%EndPage:  0
%%Page:  1
gsave
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 38 0 303 152
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:12 1999)
%%Title: (/tmp/8.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:12 1999) show
10 20 moveto
(File: /tmp/8.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
50 0 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 213 123 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 152 moveto
 78 152 lineto
 79 152 lineto
 80 152 lineto
 82 152 lineto
 83 152 lineto
 83 152 lineto
 84 110 lineto
 85 107 lineto
 86 105 lineto
 87 104 lineto
 88 103 lineto
 88 102 lineto
 89 102 lineto
 90 103 lineto
 91 103 lineto
 93 102 lineto
 94 100 lineto
 94 98 lineto
 95 95 lineto
 96 92 lineto
 97 88 lineto
 98 84 lineto
 99 79 lineto
 99 75 lineto
 100 72 lineto
 101 68 lineto
 102 66 lineto
 103 64 lineto
 104 63 lineto
 105 64 lineto
 105 65 lineto
 106 67 lineto
 107 70 lineto
 108 74 lineto
 109 78 lineto
 110 84 lineto
 110 90 lineto
 111 96 lineto
 112 103 lineto
 113 109 lineto
 114 115 lineto
 115 120 lineto
 116 124 lineto
 116 126 lineto
 117 126 lineto
 118 125 lineto
 119 122 lineto
 120 120 lineto
 121 117 lineto
 121 115 lineto
 122 114 lineto
 123 113 lineto
 124 113 lineto
 125 114 lineto
 126 115 lineto
 127 117 lineto
 127 118 lineto
 128 120 lineto
 129 121 lineto
 130 122 lineto
 131 122 lineto
 132 122 lineto
 132 121 lineto
 133 119 lineto
 134 118 lineto
 135 116 lineto
 136 114 lineto
 137 113 lineto
 138 112 lineto
 138 112 lineto
 139 112 lineto
 140 112 lineto
 141 113 lineto
 142 115 lineto
 143 117 lineto
 143 119 lineto
 144 122 lineto
 145 124 lineto
 146 127 lineto
 147 130 lineto
 148 133 lineto
 149 136 lineto
 149 139 lineto
 150 152 lineto
 151 152 lineto
 153 152 lineto
 154 152 lineto
 154 152 lineto
 155 152 lineto
 156 152 lineto
 157 152 lineto
 159 152 lineto
 160 152 lineto
 160 152 lineto
 161 152 lineto
 162 152 lineto
 164 152 lineto
 165 152 lineto
 165 152 lineto
 166 152 lineto
 167 152 lineto
 168 152 lineto
 170 152 lineto
 171 152 lineto
 171 152 lineto
 172 152 lineto
 173 152 lineto
 175 152 lineto
 176 152 lineto
 176 152 lineto
 177 152 lineto
 178 152 lineto
 179 152 lineto
 181 152 lineto
 182 152 lineto
 182 152 lineto
 183 152 lineto
 184 152 lineto
 186 152 lineto
 187 152 lineto
 187 152 lineto
 188 152 lineto
 189 152 lineto
 190 152 lineto
 192 152 lineto
 193 152 lineto
 193 152 lineto
 194 152 lineto
 195 152 lineto
 197 152 lineto
 198 152 lineto
 198 152 lineto
 199 152 lineto
 200 152 lineto
 201 152 lineto
 203 152 lineto
 204 152 lineto
 204 152 lineto
 205 152 lineto
 206 152 lineto
 208 152 lineto
 209 152 lineto
 209 152 lineto
 210 152 lineto
 211 152 lineto
 212 152 lineto
 214 152 lineto
 215 152 lineto
 215 152 lineto
 216 152 lineto
 217 152 lineto
 219 152 lineto
 220 152 lineto
 220 152 lineto
 221 152 lineto
 222 152 lineto
 223 152 lineto
 225 152 lineto
 226 152 lineto
 226 152 lineto
 227 152 lineto
 228 152 lineto
 230 152 lineto
 231 152 lineto
 231 152 lineto
 232 152 lineto
 233 152 lineto
 234 152 lineto
 236 152 lineto
 237 152 lineto
 237 152 lineto
 238 152 lineto
 239 152 lineto
 241 152 lineto
 242 152 lineto
 242 152 lineto
 243 152 lineto
 244 152 lineto
 245 152 lineto
 247 152 lineto
 248 152 lineto
 248 152 lineto
 249 152 lineto
 250 152 lineto
 252 152 lineto
 253 152 lineto
 253 152 lineto
 254 152 lineto
 255 152 lineto
 256 152 lineto
 258 152 lineto
 259 152 lineto
 259 152 lineto
 260 152 lineto
 261 152 lineto
 263 152 lineto
 264 152 lineto
 264 152 lineto
 265 152 lineto
 266 152 lineto
 268 152 lineto
 269 152 lineto
 270 152 lineto
 270 152 lineto
 271 152 lineto
 272 152 lineto
 274 152 lineto
 275 152 lineto
 275 152 lineto
 276 152 lineto
 277 152 lineto
 279 152 lineto
 280 152 lineto
 281 152 lineto
 281 152 lineto
 282 152 lineto
 283 152 lineto
 285 152 lineto
 286 152 lineto
 286 152 lineto
 287 152 lineto
 288 152 lineto
 290 152 lineto
 291 152 lineto
 292 152 lineto
 292 152 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 152 1 Ci
78 152 1 Ci
79 152 1 Ci
80 152 1 Ci
82 152 1 Ci
83 152 1 Ci
83 152 1 Ci
84 110 1 Ci
85 107 1 Ci
86 105 1 Ci
87 104 1 Ci
88 103 1 Ci
88 102 1 Ci
89 102 1 Ci
90 103 1 Ci
91 103 1 Ci
93 102 1 Ci
94 100 1 Ci
94 98 1 Ci
95 95 1 Ci
96 92 1 Ci
97 88 1 Ci
98 84 1 Ci
99 79 1 Ci
99 75 1 Ci
100 72 1 Ci
101 68 1 Ci
102 66 1 Ci
103 64 1 Ci
104 63 1 Ci
105 64 1 Ci
105 65 1 Ci
106 67 1 Ci
107 70 1 Ci
108 74 1 Ci
109 78 1 Ci
110 84 1 Ci
110 90 1 Ci
111 96 1 Ci
112 103 1 Ci
113 109 1 Ci
114 115 1 Ci
115 120 1 Ci
116 124 1 Ci
116 126 1 Ci
117 126 1 Ci
118 125 1 Ci
119 122 1 Ci
120 120 1 Ci
121 117 1 Ci
121 115 1 Ci
122 114 1 Ci
123 113 1 Ci
124 113 1 Ci
125 114 1 Ci
126 115 1 Ci
127 117 1 Ci
127 118 1 Ci
128 120 1 Ci
129 121 1 Ci
130 122 1 Ci
131 122 1 Ci
132 122 1 Ci
132 121 1 Ci
133 119 1 Ci
134 118 1 Ci
135 116 1 Ci
136 114 1 Ci
137 113 1 Ci
138 112 1 Ci
138 112 1 Ci
139 112 1 Ci
140 112 1 Ci
141 113 1 Ci
142 115 1 Ci
143 117 1 Ci
143 119 1 Ci
144 122 1 Ci
145 124 1 Ci
146 127 1 Ci
147 130 1 Ci
148 133 1 Ci
149 136 1 Ci
149 139 1 Ci
150 152 1 Ci
151 152 1 Ci
153 152 1 Ci
154 152 1 Ci
154 152 1 Ci
155 152 1 Ci
156 152 1 Ci
157 152 1 Ci
159 152 1 Ci
160 152 1 Ci
160 152 1 Ci
161 152 1 Ci
162 152 1 Ci
164 152 1 Ci
165 152 1 Ci
165 152 1 Ci
166 152 1 Ci
167 152 1 Ci
168 152 1 Ci
170 152 1 Ci
171 152 1 Ci
171 152 1 Ci
172 152 1 Ci
173 152 1 Ci
175 152 1 Ci
176 152 1 Ci
176 152 1 Ci
177 152 1 Ci
178 152 1 Ci
179 152 1 Ci
181 152 1 Ci
182 152 1 Ci
182 152 1 Ci
183 152 1 Ci
184 152 1 Ci
186 152 1 Ci
187 152 1 Ci
187 152 1 Ci
188 152 1 Ci
189 152 1 Ci
190 152 1 Ci
192 152 1 Ci
193 152 1 Ci
193 152 1 Ci
194 152 1 Ci
195 152 1 Ci
197 152 1 Ci
198 152 1 Ci
198 152 1 Ci
199 152 1 Ci
200 152 1 Ci
201 152 1 Ci
203 152 1 Ci
204 152 1 Ci
204 152 1 Ci
205 152 1 Ci
206 152 1 Ci
208 152 1 Ci
209 152 1 Ci
209 152 1 Ci
210 152 1 Ci
211 152 1 Ci
212 152 1 Ci
214 152 1 Ci
215 152 1 Ci
215 152 1 Ci
216 152 1 Ci
217 152 1 Ci
219 152 1 Ci
220 152 1 Ci
220 152 1 Ci
221 152 1 Ci
222 152 1 Ci
223 152 1 Ci
225 152 1 Ci
226 152 1 Ci
226 152 1 Ci
227 152 1 Ci
228 152 1 Ci
230 152 1 Ci
231 152 1 Ci
231 152 1 Ci
232 152 1 Ci
233 152 1 Ci
234 152 1 Ci
236 152 1 Ci
237 152 1 Ci
237 152 1 Ci
238 152 1 Ci
239 152 1 Ci
241 152 1 Ci
242 152 1 Ci
242 152 1 Ci
243 152 1 Ci
244 152 1 Ci
245 152 1 Ci
247 152 1 Ci
248 152 1 Ci
248 152 1 Ci
249 152 1 Ci
250 152 1 Ci
252 152 1 Ci
253 152 1 Ci
253 152 1 Ci
254 152 1 Ci
255 152 1 Ci
256 152 1 Ci
258 152 1 Ci
259 152 1 Ci
259 152 1 Ci
260 152 1 Ci
261 152 1 Ci
263 152 1 Ci
264 152 1 Ci
264 152 1 Ci
265 152 1 Ci
266 152 1 Ci
268 152 1 Ci
269 152 1 Ci
270 152 1 Ci
270 152 1 Ci
271 152 1 Ci
272 152 1 Ci
274 152 1 Ci
275 152 1 Ci
275 152 1 Ci
276 152 1 Ci
277 152 1 Ci
279 152 1 Ci
280 152 1 Ci
281 152 1 Ci
281 152 1 Ci
282 152 1 Ci
283 152 1 Ci
285 152 1 Ci
286 152 1 Ci
286 152 1 Ci
287 152 1 Ci
288 152 1 Ci
290 152 1 Ci
291 152 1 Ci
292 152 1 Ci
292 152 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 144 3 Ci
78 144 3 Ci
79 144 3 Ci
80 144 3 Ci
82 144 3 Ci
83 144 3 Ci
83 144 3 Ci
84 83 3 Ci
85 82 3 Ci
86 81 3 Ci
87 80 3 Ci
88 79 3 Ci
88 78 3 Ci
89 77 3 Ci
90 75 3 Ci
91 73 3 Ci
92 71 3 Ci
93 69 3 Ci
94 67 3 Ci
94 65 3 Ci
95 63 3 Ci
96 61 3 Ci
97 59 3 Ci
98 58 3 Ci
99 56 3 Ci
99 55 3 Ci
100 143 3 Ci
101 142 3 Ci
102 141 3 Ci
103 140 3 Ci
104 140 3 Ci
105 139 3 Ci
105 138 3 Ci
106 137 3 Ci
107 137 3 Ci
109 135 3 Ci
110 134 3 Ci
110 133 3 Ci
111 132 3 Ci
112 131 3 Ci
113 129 3 Ci
114 127 3 Ci
115 125 3 Ci
116 121 3 Ci
116 117 3 Ci
117 113 3 Ci
118 110 3 Ci
119 107 3 Ci
120 105 3 Ci
121 104 3 Ci
121 103 3 Ci
122 103 3 Ci
123 103 3 Ci
124 103 3 Ci
126 104 3 Ci
127 104 3 Ci
127 106 3 Ci
128 107 3 Ci
129 109 3 Ci
130 111 3 Ci
131 114 3 Ci
132 116 3 Ci
132 118 3 Ci
133 120 3 Ci
134 122 3 Ci
135 123 3 Ci
136 125 3 Ci
137 126 3 Ci
138 126 3 Ci
138 127 3 Ci
139 128 3 Ci
140 128 3 Ci
141 129 3 Ci
142 130 3 Ci
143 130 3 Ci
143 131 3 Ci
144 131 3 Ci
145 132 3 Ci
146 132 3 Ci
148 133 3 Ci
149 134 3 Ci
149 135 3 Ci
150 144 3 Ci
151 144 3 Ci
153 144 3 Ci
154 144 3 Ci
154 144 3 Ci
155 144 3 Ci
156 144 3 Ci
157 144 3 Ci
159 144 3 Ci
160 144 3 Ci
160 144 3 Ci
161 144 3 Ci
162 144 3 Ci
164 144 3 Ci
165 144 3 Ci
165 144 3 Ci
166 144 3 Ci
167 144 3 Ci
168 144 3 Ci
170 144 3 Ci
171 144 3 Ci
171 144 3 Ci
172 144 3 Ci
173 144 3 Ci
175 144 3 Ci
176 144 3 Ci
176 144 3 Ci
177 144 3 Ci
178 144 3 Ci
179 144 3 Ci
181 144 3 Ci
182 144 3 Ci
182 144 3 Ci
183 144 3 Ci
184 144 3 Ci
186 144 3 Ci
187 144 3 Ci
187 144 3 Ci
188 144 3 Ci
189 144 3 Ci
190 144 3 Ci
192 144 3 Ci
193 144 3 Ci
193 144 3 Ci
194 144 3 Ci
195 144 3 Ci
197 144 3 Ci
198 144 3 Ci
198 144 3 Ci
199 144 3 Ci
200 144 3 Ci
201 144 3 Ci
203 144 3 Ci
204 144 3 Ci
204 144 3 Ci
205 144 3 Ci
206 144 3 Ci
208 144 3 Ci
209 144 3 Ci
209 144 3 Ci
210 144 3 Ci
211 144 3 Ci
212 144 3 Ci
214 144 3 Ci
215 144 3 Ci
215 144 3 Ci
216 144 3 Ci
217 144 3 Ci
219 144 3 Ci
220 144 3 Ci
220 144 3 Ci
221 144 3 Ci
222 144 3 Ci
223 144 3 Ci
225 144 3 Ci
226 144 3 Ci
226 144 3 Ci
227 144 3 Ci
228 144 3 Ci
230 144 3 Ci
231 144 3 Ci
231 144 3 Ci
232 144 3 Ci
233 144 3 Ci
234 144 3 Ci
236 144 3 Ci
237 144 3 Ci
237 144 3 Ci
238 144 3 Ci
239 144 3 Ci
241 144 3 Ci
242 144 3 Ci
242 144 3 Ci
243 144 3 Ci
244 144 3 Ci
245 144 3 Ci
247 144 3 Ci
248 144 3 Ci
248 144 3 Ci
249 144 3 Ci
250 144 3 Ci
252 144 3 Ci
253 144 3 Ci
253 144 3 Ci
254 144 3 Ci
255 144 3 Ci
256 144 3 Ci
258 144 3 Ci
259 144 3 Ci
259 144 3 Ci
260 144 3 Ci
261 144 3 Ci
263 144 3 Ci
264 144 3 Ci
264 144 3 Ci
265 144 3 Ci
266 144 3 Ci
268 144 3 Ci
269 144 3 Ci
270 144 3 Ci
270 144 3 Ci
271 144 3 Ci
272 144 3 Ci
274 144 3 Ci
275 144 3 Ci
275 144 3 Ci
276 144 3 Ci
277 144 3 Ci
279 144 3 Ci
280 144 3 Ci
281 144 3 Ci
281 144 3 Ci
282 144 3 Ci
283 144 3 Ci
285 144 3 Ci
286 144 3 Ci
286 144 3 Ci
287 144 3 Ci
288 144 3 Ci
290 144 3 Ci
291 144 3 Ci
292 144 3 Ci
292 144 3 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 349 40 Box Fill

0 40 69 120 Box Fill

280 40 69 120 Box Fill

0 160 349 39 Box Fill

1 1 1 SetBgColor
68 159 212 1 Box Fill

279 38 1 122 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 161 moveto
68 38 lineto
281 38 lineto
279 40 lineto
70 40 lineto
70 159 lineto
68 161 lineto
68 161  lineto closepath Fill
81 17 0 174 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(-3, +11\)) 81 0 13 DrawAdjText
EndText
9 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 117 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 156 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 194 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 233 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 272 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 165 272 165 LS
97 165 97 170 LS
78 165 78 175 LS
136 165 136 170 LS
117 165 117 175 LS
175 165 175 170 LS
156 165 156 175 LS
214 165 214 170 LS
194 165 194 175 LS
253 165 253 170 LS
233 165 233 175 LS
272 165 272 175 LS
9 17 0 45 152 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 117 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 83 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.004) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.006) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 152 64 48 LS
64 135 59 135 LS
64 152 54 152 LS
64 100 59 100 LS
64 117 54 117 LS
64 65 59 65 LS
64 83 54 83 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 38 189 303 341
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:12 1999)
%%Title: (/tmp/9.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:12 1999) show
10 20 moveto
(File: /tmp/9.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
50 250 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 213 123 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 152 moveto
 78 148 lineto
 79 145 lineto
 80 142 lineto
 81 139 lineto
 82 136 lineto
 83 133 lineto
 83 130 lineto
 84 127 lineto
 85 124 lineto
 86 121 lineto
 87 118 lineto
 88 116 lineto
 88 113 lineto
 89 110 lineto
 90 108 lineto
 91 105 lineto
 92 102 lineto
 93 99 lineto
 94 96 lineto
 94 93 lineto
 95 90 lineto
 96 86 lineto
 97 83 lineto
 98 80 lineto
 99 77 lineto
 99 74 lineto
 100 72 lineto
 101 70 lineto
 102 69 lineto
 104 68 lineto
 105 69 lineto
 105 70 lineto
 106 73 lineto
 107 76 lineto
 108 80 lineto
 109 84 lineto
 110 90 lineto
 110 96 lineto
 111 102 lineto
 112 109 lineto
 113 117 lineto
 114 124 lineto
 115 132 lineto
 116 139 lineto
 116 145 lineto
 117 147 lineto
 118 143 lineto
 119 138 lineto
 120 133 lineto
 121 129 lineto
 121 126 lineto
 122 124 lineto
 123 123 lineto
 124 122 lineto
 125 123 lineto
 126 125 lineto
 127 127 lineto
 127 130 lineto
 128 133 lineto
 129 137 lineto
 130 141 lineto
 131 146 lineto
 132 149 lineto
 132 148 lineto
 133 144 lineto
 134 140 lineto
 135 137 lineto
 136 134 lineto
 137 131 lineto
 138 130 lineto
 138 129 lineto
 139 128 lineto
 140 128 lineto
 142 130 lineto
 143 131 lineto
 143 133 lineto
 144 135 lineto
 145 137 lineto
 146 140 lineto
 147 142 lineto
 148 144 lineto
 149 152 lineto
 149 152 lineto
 150 152 lineto
 151 152 lineto
 153 152 lineto
 154 152 lineto
 154 152 lineto
 155 152 lineto
 156 152 lineto
 157 152 lineto
 159 152 lineto
 160 152 lineto
 160 152 lineto
 161 152 lineto
 162 152 lineto
 164 152 lineto
 165 152 lineto
 165 152 lineto
 166 152 lineto
 167 152 lineto
 168 152 lineto
 170 152 lineto
 171 152 lineto
 171 152 lineto
 172 152 lineto
 173 152 lineto
 175 152 lineto
 176 152 lineto
 176 152 lineto
 177 152 lineto
 178 152 lineto
 179 152 lineto
 181 152 lineto
 182 152 lineto
 182 152 lineto
 183 152 lineto
 184 152 lineto
 186 152 lineto
 187 152 lineto
 187 152 lineto
 188 152 lineto
 189 152 lineto
 190 152 lineto
 192 152 lineto
 193 152 lineto
 193 152 lineto
 194 152 lineto
 195 152 lineto
 197 152 lineto
 198 152 lineto
 198 152 lineto
 199 152 lineto
 200 152 lineto
 201 152 lineto
 203 152 lineto
 204 152 lineto
 204 152 lineto
 205 152 lineto
 206 152 lineto
 208 152 lineto
 209 152 lineto
 209 152 lineto
 210 152 lineto
 211 152 lineto
 212 152 lineto
 214 152 lineto
 215 152 lineto
 215 152 lineto
 216 152 lineto
 217 152 lineto
 219 152 lineto
 220 152 lineto
 220 152 lineto
 221 152 lineto
 222 152 lineto
 223 152 lineto
 225 152 lineto
 226 152 lineto
 226 152 lineto
 227 152 lineto
 228 152 lineto
 230 152 lineto
 231 152 lineto
 231 152 lineto
 232 152 lineto
 233 152 lineto
 234 152 lineto
 236 152 lineto
 237 152 lineto
 237 152 lineto
 238 152 lineto
 239 152 lineto
 241 152 lineto
 242 152 lineto
 242 152 lineto
 243 152 lineto
 244 152 lineto
 245 152 lineto
 247 152 lineto
 248 152 lineto
 248 152 lineto
 249 152 lineto
 250 152 lineto
 252 152 lineto
 253 152 lineto
 253 152 lineto
 254 152 lineto
 255 152 lineto
 256 152 lineto
 258 152 lineto
 259 152 lineto
 259 152 lineto
 260 152 lineto
 261 152 lineto
 263 152 lineto
 264 152 lineto
 264 152 lineto
 265 152 lineto
 266 152 lineto
 268 152 lineto
 269 152 lineto
 270 152 lineto
 270 152 lineto
 271 152 lineto
 272 152 lineto
 274 152 lineto
 275 152 lineto
 275 152 lineto
 276 152 lineto
 277 152 lineto
 279 152 lineto
 280 152 lineto
 281 152 lineto
 281 152 lineto
 282 152 lineto
 283 152 lineto
 285 152 lineto
 286 152 lineto
 286 152 lineto
 287 152 lineto
 288 152 lineto
 290 152 lineto
 291 152 lineto
 292 152 lineto
 292 152 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 152 1 Ci
78 148 1 Ci
79 145 1 Ci
80 142 1 Ci
81 139 1 Ci
82 136 1 Ci
83 133 1 Ci
83 130 1 Ci
84 127 1 Ci
85 124 1 Ci
86 121 1 Ci
87 118 1 Ci
88 116 1 Ci
88 113 1 Ci
89 110 1 Ci
90 108 1 Ci
91 105 1 Ci
92 102 1 Ci
93 99 1 Ci
94 96 1 Ci
94 93 1 Ci
95 90 1 Ci
96 86 1 Ci
97 83 1 Ci
98 80 1 Ci
99 77 1 Ci
99 74 1 Ci
100 72 1 Ci
101 70 1 Ci
102 69 1 Ci
104 68 1 Ci
105 69 1 Ci
105 70 1 Ci
106 73 1 Ci
107 76 1 Ci
108 80 1 Ci
109 84 1 Ci
110 90 1 Ci
110 96 1 Ci
111 102 1 Ci
112 109 1 Ci
113 117 1 Ci
114 124 1 Ci
115 132 1 Ci
116 139 1 Ci
116 145 1 Ci
117 147 1 Ci
118 143 1 Ci
119 138 1 Ci
120 133 1 Ci
121 129 1 Ci
121 126 1 Ci
122 124 1 Ci
123 123 1 Ci
124 122 1 Ci
125 123 1 Ci
126 125 1 Ci
127 127 1 Ci
127 130 1 Ci
128 133 1 Ci
129 137 1 Ci
130 141 1 Ci
131 146 1 Ci
132 149 1 Ci
132 148 1 Ci
133 144 1 Ci
134 140 1 Ci
135 137 1 Ci
136 134 1 Ci
137 131 1 Ci
138 130 1 Ci
138 129 1 Ci
139 128 1 Ci
140 128 1 Ci
142 130 1 Ci
143 131 1 Ci
143 133 1 Ci
144 135 1 Ci
145 137 1 Ci
146 140 1 Ci
147 142 1 Ci
148 144 1 Ci
149 152 1 Ci
149 152 1 Ci
150 152 1 Ci
151 152 1 Ci
153 152 1 Ci
154 152 1 Ci
154 152 1 Ci
155 152 1 Ci
156 152 1 Ci
157 152 1 Ci
159 152 1 Ci
160 152 1 Ci
160 152 1 Ci
161 152 1 Ci
162 152 1 Ci
164 152 1 Ci
165 152 1 Ci
165 152 1 Ci
166 152 1 Ci
167 152 1 Ci
168 152 1 Ci
170 152 1 Ci
171 152 1 Ci
171 152 1 Ci
172 152 1 Ci
173 152 1 Ci
175 152 1 Ci
176 152 1 Ci
176 152 1 Ci
177 152 1 Ci
178 152 1 Ci
179 152 1 Ci
181 152 1 Ci
182 152 1 Ci
182 152 1 Ci
183 152 1 Ci
184 152 1 Ci
186 152 1 Ci
187 152 1 Ci
187 152 1 Ci
188 152 1 Ci
189 152 1 Ci
190 152 1 Ci
192 152 1 Ci
193 152 1 Ci
193 152 1 Ci
194 152 1 Ci
195 152 1 Ci
197 152 1 Ci
198 152 1 Ci
198 152 1 Ci
199 152 1 Ci
200 152 1 Ci
201 152 1 Ci
203 152 1 Ci
204 152 1 Ci
204 152 1 Ci
205 152 1 Ci
206 152 1 Ci
208 152 1 Ci
209 152 1 Ci
209 152 1 Ci
210 152 1 Ci
211 152 1 Ci
212 152 1 Ci
214 152 1 Ci
215 152 1 Ci
215 152 1 Ci
216 152 1 Ci
217 152 1 Ci
219 152 1 Ci
220 152 1 Ci
220 152 1 Ci
221 152 1 Ci
222 152 1 Ci
223 152 1 Ci
225 152 1 Ci
226 152 1 Ci
226 152 1 Ci
227 152 1 Ci
228 152 1 Ci
230 152 1 Ci
231 152 1 Ci
231 152 1 Ci
232 152 1 Ci
233 152 1 Ci
234 152 1 Ci
236 152 1 Ci
237 152 1 Ci
237 152 1 Ci
238 152 1 Ci
239 152 1 Ci
241 152 1 Ci
242 152 1 Ci
242 152 1 Ci
243 152 1 Ci
244 152 1 Ci
245 152 1 Ci
247 152 1 Ci
248 152 1 Ci
248 152 1 Ci
249 152 1 Ci
250 152 1 Ci
252 152 1 Ci
253 152 1 Ci
253 152 1 Ci
254 152 1 Ci
255 152 1 Ci
256 152 1 Ci
258 152 1 Ci
259 152 1 Ci
259 152 1 Ci
260 152 1 Ci
261 152 1 Ci
263 152 1 Ci
264 152 1 Ci
264 152 1 Ci
265 152 1 Ci
266 152 1 Ci
268 152 1 Ci
269 152 1 Ci
270 152 1 Ci
270 152 1 Ci
271 152 1 Ci
272 152 1 Ci
274 152 1 Ci
275 152 1 Ci
275 152 1 Ci
276 152 1 Ci
277 152 1 Ci
279 152 1 Ci
280 152 1 Ci
281 152 1 Ci
281 152 1 Ci
282 152 1 Ci
283 152 1 Ci
285 152 1 Ci
286 152 1 Ci
286 152 1 Ci
287 152 1 Ci
288 152 1 Ci
290 152 1 Ci
291 152 1 Ci
292 152 1 Ci
292 152 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 74 3 Ci
78 111 3 Ci
79 111 3 Ci
80 111 3 Ci
82 112 3 Ci
83 112 3 Ci
83 113 3 Ci
84 113 3 Ci
85 114 3 Ci
86 114 3 Ci
87 115 3 Ci
88 116 3 Ci
88 117 3 Ci
89 118 3 Ci
90 119 3 Ci
91 120 3 Ci
92 121 3 Ci
93 122 3 Ci
94 122 3 Ci
94 123 3 Ci
95 124 3 Ci
96 125 3 Ci
97 126 3 Ci
98 127 3 Ci
99 128 3 Ci
99 128 3 Ci
100 129 3 Ci
101 129 3 Ci
102 130 3 Ci
104 131 3 Ci
105 131 3 Ci
105 132 3 Ci
106 132 3 Ci
107 132 3 Ci
109 133 3 Ci
110 133 3 Ci
110 133 3 Ci
111 133 3 Ci
112 133 3 Ci
113 133 3 Ci
114 133 3 Ci
115 132 3 Ci
116 131 3 Ci
116 126 3 Ci
117 108 3 Ci
118 98 3 Ci
119 95 3 Ci
120 94 3 Ci
121 94 3 Ci
121 94 3 Ci
122 93 3 Ci
123 93 3 Ci
124 93 3 Ci
126 94 3 Ci
127 94 3 Ci
127 94 3 Ci
128 94 3 Ci
129 95 3 Ci
130 96 3 Ci
131 98 3 Ci
132 107 3 Ci
132 130 3 Ci
133 134 3 Ci
134 135 3 Ci
135 136 3 Ci
136 136 3 Ci
137 137 3 Ci
138 137 3 Ci
138 137 3 Ci
139 137 3 Ci
140 137 3 Ci
142 138 3 Ci
143 138 3 Ci
143 138 3 Ci
144 139 3 Ci
145 139 3 Ci
146 140 3 Ci
147 141 3 Ci
148 142 3 Ci
149 144 3 Ci
149 144 3 Ci
150 144 3 Ci
151 144 3 Ci
153 144 3 Ci
154 144 3 Ci
154 144 3 Ci
155 144 3 Ci
156 144 3 Ci
157 144 3 Ci
159 144 3 Ci
160 144 3 Ci
160 144 3 Ci
161 144 3 Ci
162 144 3 Ci
164 144 3 Ci
165 144 3 Ci
165 144 3 Ci
166 144 3 Ci
167 144 3 Ci
168 144 3 Ci
170 144 3 Ci
171 144 3 Ci
171 144 3 Ci
172 144 3 Ci
173 144 3 Ci
175 144 3 Ci
176 144 3 Ci
176 144 3 Ci
177 144 3 Ci
178 144 3 Ci
179 144 3 Ci
181 144 3 Ci
182 144 3 Ci
182 144 3 Ci
183 144 3 Ci
184 144 3 Ci
186 144 3 Ci
187 144 3 Ci
187 144 3 Ci
188 144 3 Ci
189 144 3 Ci
190 144 3 Ci
192 144 3 Ci
193 144 3 Ci
193 144 3 Ci
194 144 3 Ci
195 144 3 Ci
197 144 3 Ci
198 144 3 Ci
198 144 3 Ci
199 144 3 Ci
200 144 3 Ci
201 144 3 Ci
203 144 3 Ci
204 144 3 Ci
204 144 3 Ci
205 144 3 Ci
206 144 3 Ci
208 144 3 Ci
209 144 3 Ci
209 144 3 Ci
210 144 3 Ci
211 144 3 Ci
212 144 3 Ci
214 144 3 Ci
215 144 3 Ci
215 144 3 Ci
216 144 3 Ci
217 144 3 Ci
219 144 3 Ci
220 144 3 Ci
220 144 3 Ci
221 144 3 Ci
222 144 3 Ci
223 144 3 Ci
225 144 3 Ci
226 144 3 Ci
226 144 3 Ci
227 144 3 Ci
228 144 3 Ci
230 144 3 Ci
231 144 3 Ci
231 144 3 Ci
232 144 3 Ci
233 144 3 Ci
234 144 3 Ci
236 144 3 Ci
237 144 3 Ci
237 144 3 Ci
238 144 3 Ci
239 144 3 Ci
241 144 3 Ci
242 144 3 Ci
242 144 3 Ci
243 144 3 Ci
244 144 3 Ci
245 144 3 Ci
247 144 3 Ci
248 144 3 Ci
248 144 3 Ci
249 144 3 Ci
250 144 3 Ci
252 144 3 Ci
253 144 3 Ci
253 144 3 Ci
254 144 3 Ci
255 144 3 Ci
256 144 3 Ci
258 144 3 Ci
259 144 3 Ci
259 144 3 Ci
260 144 3 Ci
261 144 3 Ci
263 144 3 Ci
264 144 3 Ci
264 144 3 Ci
265 144 3 Ci
266 144 3 Ci
268 144 3 Ci
269 144 3 Ci
270 144 3 Ci
270 144 3 Ci
271 144 3 Ci
272 144 3 Ci
274 144 3 Ci
275 144 3 Ci
275 144 3 Ci
276 144 3 Ci
277 144 3 Ci
279 144 3 Ci
280 144 3 Ci
281 144 3 Ci
281 144 3 Ci
282 144 3 Ci
283 144 3 Ci
285 144 3 Ci
286 144 3 Ci
286 144 3 Ci
287 144 3 Ci
288 144 3 Ci
290 144 3 Ci
291 144 3 Ci
292 144 3 Ci
292 144 3 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 349 40 Box Fill

0 40 69 120 Box Fill

280 40 69 120 Box Fill

0 160 349 39 Box Fill

1 1 1 SetBgColor
68 159 212 1 Box Fill

279 38 1 122 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 161 moveto
68 38 lineto
281 38 lineto
279 40 lineto
70 40 lineto
70 159 lineto
68 161 lineto
68 161  lineto closepath Fill
81 17 0 174 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(-1, +13\)) 81 0 13 DrawAdjText
EndText
9 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 117 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 156 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 194 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 233 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 272 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 165 272 165 LS
97 165 97 170 LS
78 165 78 175 LS
136 165 136 170 LS
117 165 117 175 LS
175 165 175 170 LS
156 165 156 175 LS
214 165 214 170 LS
194 165 194 175 LS
253 165 253 170 LS
233 165 233 175 LS
272 165 272 175 LS
9 17 0 45 152 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 126 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 100 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.004) 45 0 13 DrawAdjText
EndText
45 17 0 27 74 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.006) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.008) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 152 64 48 LS
64 139 59 139 LS
64 152 54 152 LS
64 113 59 113 LS
64 126 54 126 LS
64 87 59 87 LS
64 100 54 100 LS
64 61 59 61 LS
64 74 54 74 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 38 379 303 414
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:12 1999)
%%Title: (/tmp/10.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:12 1999) show
10 20 moveto
(File: /tmp/10.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
50 500 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 213 4 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 49 moveto
 78 48 lineto
 79 48 lineto
 80 48 lineto
 82 48 lineto
 83 48 lineto
 83 48 lineto
 84 48 lineto
 85 48 lineto
 87 48 lineto
 88 48 lineto
 88 48 lineto
 89 48 lineto
 90 48 lineto
 91 48 lineto
 93 48 lineto
 94 48 lineto
 94 48 lineto
 95 48 lineto
 96 48 lineto
 97 48 lineto
 98 48 lineto
 99 48 lineto
 99 48 lineto
 100 48 lineto
 101 48 lineto
 102 48 lineto
 104 48 lineto
 105 48 lineto
 105 48 lineto
 106 48 lineto
 107 48 lineto
 109 48 lineto
 110 48 lineto
 110 48 lineto
 111 48 lineto
 112 48 lineto
 113 48 lineto
 115 48 lineto
 116 48 lineto
 116 48 lineto
 117 48 lineto
 118 48 lineto
 120 48 lineto
 121 48 lineto
 121 48 lineto
 122 48 lineto
 123 48 lineto
 124 48 lineto
 126 48 lineto
 127 48 lineto
 127 48 lineto
 128 48 lineto
 129 48 lineto
 131 48 lineto
 132 48 lineto
 132 48 lineto
 133 48 lineto
 134 48 lineto
 135 48 lineto
 137 48 lineto
 138 48 lineto
 138 48 lineto
 139 48 lineto
 140 48 lineto
 142 48 lineto
 143 48 lineto
 143 48 lineto
 144 48 lineto
 145 49 lineto
 146 49 lineto
 148 49 lineto
 149 49 lineto
 149 49 lineto
 150 49 lineto
 151 49 lineto
 153 49 lineto
 154 49 lineto
 154 49 lineto
 155 49 lineto
 156 49 lineto
 157 49 lineto
 159 49 lineto
 160 49 lineto
 160 49 lineto
 161 49 lineto
 162 49 lineto
 164 49 lineto
 165 49 lineto
 165 49 lineto
 166 49 lineto
 167 49 lineto
 168 49 lineto
 170 49 lineto
 171 49 lineto
 171 49 lineto
 172 49 lineto
 173 49 lineto
 175 49 lineto
 176 49 lineto
 176 49 lineto
 177 49 lineto
 178 49 lineto
 179 49 lineto
 181 49 lineto
 182 49 lineto
 182 49 lineto
 183 49 lineto
 184 49 lineto
 186 49 lineto
 187 49 lineto
 187 49 lineto
 188 49 lineto
 189 49 lineto
 190 49 lineto
 192 49 lineto
 193 49 lineto
 193 49 lineto
 194 49 lineto
 195 49 lineto
 197 49 lineto
 198 49 lineto
 198 49 lineto
 199 49 lineto
 200 49 lineto
 201 49 lineto
 203 49 lineto
 204 49 lineto
 204 49 lineto
 205 49 lineto
 206 49 lineto
 208 49 lineto
 209 49 lineto
 209 49 lineto
 210 49 lineto
 211 49 lineto
 212 49 lineto
 214 49 lineto
 215 49 lineto
 215 49 lineto
 216 49 lineto
 217 49 lineto
 219 49 lineto
 220 49 lineto
 220 49 lineto
 221 49 lineto
 222 49 lineto
 223 49 lineto
 225 49 lineto
 226 49 lineto
 226 49 lineto
 227 49 lineto
 228 49 lineto
 230 49 lineto
 231 49 lineto
 231 49 lineto
 232 49 lineto
 233 49 lineto
 234 49 lineto
 236 49 lineto
 237 49 lineto
 237 49 lineto
 238 49 lineto
 239 49 lineto
 241 49 lineto
 242 49 lineto
 242 49 lineto
 243 49 lineto
 244 49 lineto
 245 49 lineto
 247 49 lineto
 248 49 lineto
 248 49 lineto
 249 49 lineto
 250 49 lineto
 252 49 lineto
 253 49 lineto
 253 49 lineto
 254 49 lineto
 255 49 lineto
 256 49 lineto
 258 49 lineto
 259 49 lineto
 259 49 lineto
 260 49 lineto
 261 49 lineto
 263 49 lineto
 264 49 lineto
 264 49 lineto
 265 49 lineto
 266 49 lineto
 268 49 lineto
 269 49 lineto
 270 49 lineto
 270 49 lineto
 271 49 lineto
 272 49 lineto
 274 49 lineto
 275 49 lineto
 275 49 lineto
 276 49 lineto
 277 49 lineto
 279 49 lineto
 280 49 lineto
 281 49 lineto
 281 49 lineto
 282 49 lineto
 283 49 lineto
 285 49 lineto
 286 49 lineto
 286 49 lineto
 287 49 lineto
 288 49 lineto
 290 49 lineto
 291 49 lineto
 292 49 lineto
 292 49 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 49 1 Ci
78 48 1 Ci
79 48 1 Ci
80 48 1 Ci
82 48 1 Ci
83 48 1 Ci
83 48 1 Ci
84 48 1 Ci
85 48 1 Ci
87 48 1 Ci
88 48 1 Ci
88 48 1 Ci
89 48 1 Ci
90 48 1 Ci
91 48 1 Ci
93 48 1 Ci
94 48 1 Ci
94 48 1 Ci
95 48 1 Ci
96 48 1 Ci
97 48 1 Ci
98 48 1 Ci
99 48 1 Ci
99 48 1 Ci
100 48 1 Ci
101 48 1 Ci
102 48 1 Ci
104 48 1 Ci
105 48 1 Ci
105 48 1 Ci
106 48 1 Ci
107 48 1 Ci
109 48 1 Ci
110 48 1 Ci
110 48 1 Ci
111 48 1 Ci
112 48 1 Ci
113 48 1 Ci
115 48 1 Ci
116 48 1 Ci
116 48 1 Ci
117 48 1 Ci
118 48 1 Ci
120 48 1 Ci
121 48 1 Ci
121 48 1 Ci
122 48 1 Ci
123 48 1 Ci
124 48 1 Ci
126 48 1 Ci
127 48 1 Ci
127 48 1 Ci
128 48 1 Ci
129 48 1 Ci
131 48 1 Ci
132 48 1 Ci
132 48 1 Ci
133 48 1 Ci
134 48 1 Ci
135 48 1 Ci
137 48 1 Ci
138 48 1 Ci
138 48 1 Ci
139 48 1 Ci
140 48 1 Ci
142 48 1 Ci
143 48 1 Ci
143 48 1 Ci
144 48 1 Ci
145 49 1 Ci
146 49 1 Ci
148 49 1 Ci
149 49 1 Ci
149 49 1 Ci
150 49 1 Ci
151 49 1 Ci
153 49 1 Ci
154 49 1 Ci
154 49 1 Ci
155 49 1 Ci
156 49 1 Ci
157 49 1 Ci
159 49 1 Ci
160 49 1 Ci
160 49 1 Ci
161 49 1 Ci
162 49 1 Ci
164 49 1 Ci
165 49 1 Ci
165 49 1 Ci
166 49 1 Ci
167 49 1 Ci
168 49 1 Ci
170 49 1 Ci
171 49 1 Ci
171 49 1 Ci
172 49 1 Ci
173 49 1 Ci
175 49 1 Ci
176 49 1 Ci
176 49 1 Ci
177 49 1 Ci
178 49 1 Ci
179 49 1 Ci
181 49 1 Ci
182 49 1 Ci
182 49 1 Ci
183 49 1 Ci
184 49 1 Ci
186 49 1 Ci
187 49 1 Ci
187 49 1 Ci
188 49 1 Ci
189 49 1 Ci
190 49 1 Ci
192 49 1 Ci
193 49 1 Ci
193 49 1 Ci
194 49 1 Ci
195 49 1 Ci
197 49 1 Ci
198 49 1 Ci
198 49 1 Ci
199 49 1 Ci
200 49 1 Ci
201 49 1 Ci
203 49 1 Ci
204 49 1 Ci
204 49 1 Ci
205 49 1 Ci
206 49 1 Ci
208 49 1 Ci
209 49 1 Ci
209 49 1 Ci
210 49 1 Ci
211 49 1 Ci
212 49 1 Ci
214 49 1 Ci
215 49 1 Ci
215 49 1 Ci
216 49 1 Ci
217 49 1 Ci
219 49 1 Ci
220 49 1 Ci
220 49 1 Ci
221 49 1 Ci
222 49 1 Ci
223 49 1 Ci
225 49 1 Ci
226 49 1 Ci
226 49 1 Ci
227 49 1 Ci
228 49 1 Ci
230 49 1 Ci
231 49 1 Ci
231 49 1 Ci
232 49 1 Ci
233 49 1 Ci
234 49 1 Ci
236 49 1 Ci
237 49 1 Ci
237 49 1 Ci
238 49 1 Ci
239 49 1 Ci
241 49 1 Ci
242 49 1 Ci
242 49 1 Ci
243 49 1 Ci
244 49 1 Ci
245 49 1 Ci
247 49 1 Ci
248 49 1 Ci
248 49 1 Ci
249 49 1 Ci
250 49 1 Ci
252 49 1 Ci
253 49 1 Ci
253 49 1 Ci
254 49 1 Ci
255 49 1 Ci
256 49 1 Ci
258 49 1 Ci
259 49 1 Ci
259 49 1 Ci
260 49 1 Ci
261 49 1 Ci
263 49 1 Ci
264 49 1 Ci
264 49 1 Ci
265 49 1 Ci
266 49 1 Ci
268 49 1 Ci
269 49 1 Ci
270 49 1 Ci
270 49 1 Ci
271 49 1 Ci
272 49 1 Ci
274 49 1 Ci
275 49 1 Ci
275 49 1 Ci
276 49 1 Ci
277 49 1 Ci
279 49 1 Ci
280 49 1 Ci
281 49 1 Ci
281 49 1 Ci
282 49 1 Ci
283 49 1 Ci
285 49 1 Ci
286 49 1 Ci
286 49 1 Ci
287 49 1 Ci
288 49 1 Ci
290 49 1 Ci
291 49 1 Ci
292 49 1 Ci
292 49 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 48 1 Ci
78 48 1 Ci
79 48 1 Ci
80 48 1 Ci
82 48 1 Ci
83 48 1 Ci
83 48 1 Ci
84 48 1 Ci
85 48 1 Ci
87 48 1 Ci
88 48 1 Ci
88 48 1 Ci
89 48 1 Ci
90 48 1 Ci
91 48 1 Ci
92 48 1 Ci
93 48 1 Ci
94 48 1 Ci
94 48 1 Ci
95 48 1 Ci
96 48 1 Ci
98 48 1 Ci
99 48 1 Ci
99 48 1 Ci
100 48 1 Ci
101 48 1 Ci
102 48 1 Ci
104 48 1 Ci
105 48 1 Ci
105 48 1 Ci
106 48 1 Ci
107 48 1 Ci
109 48 1 Ci
110 48 1 Ci
110 48 1 Ci
111 48 1 Ci
112 48 1 Ci
113 48 1 Ci
115 48 1 Ci
116 48 1 Ci
116 48 1 Ci
117 48 1 Ci
118 48 1 Ci
120 48 1 Ci
121 48 1 Ci
121 48 1 Ci
122 48 1 Ci
123 48 1 Ci
124 48 1 Ci
126 48 1 Ci
127 48 1 Ci
127 48 1 Ci
128 48 1 Ci
129 48 1 Ci
131 48 1 Ci
132 48 1 Ci
132 48 1 Ci
133 48 1 Ci
134 48 1 Ci
135 48 1 Ci
137 48 1 Ci
138 48 1 Ci
138 48 1 Ci
139 48 1 Ci
140 48 1 Ci
142 48 1 Ci
143 48 1 Ci
143 48 1 Ci
144 48 1 Ci
145 48 1 Ci
146 48 1 Ci
148 48 1 Ci
149 48 1 Ci
149 48 1 Ci
150 48 1 Ci
151 48 1 Ci
153 48 1 Ci
154 48 1 Ci
154 48 1 Ci
155 48 1 Ci
156 48 1 Ci
157 48 1 Ci
159 48 1 Ci
160 48 1 Ci
160 48 1 Ci
161 48 1 Ci
162 48 1 Ci
164 48 1 Ci
165 48 1 Ci
165 48 1 Ci
166 48 1 Ci
167 48 1 Ci
168 48 1 Ci
170 48 1 Ci
171 48 1 Ci
171 48 1 Ci
172 48 1 Ci
173 48 1 Ci
175 48 1 Ci
176 48 1 Ci
176 48 1 Ci
177 48 1 Ci
178 48 1 Ci
179 48 1 Ci
181 48 1 Ci
182 48 1 Ci
182 48 1 Ci
183 48 1 Ci
184 48 1 Ci
186 48 1 Ci
187 48 1 Ci
187 48 1 Ci
188 48 1 Ci
189 48 1 Ci
190 48 1 Ci
192 48 1 Ci
193 48 1 Ci
193 48 1 Ci
194 48 1 Ci
195 48 1 Ci
197 48 1 Ci
198 48 1 Ci
198 48 1 Ci
199 48 1 Ci
200 48 1 Ci
201 48 1 Ci
203 48 1 Ci
204 48 1 Ci
204 48 1 Ci
205 48 1 Ci
206 48 1 Ci
208 48 1 Ci
209 48 1 Ci
209 48 1 Ci
210 48 1 Ci
211 48 1 Ci
212 48 1 Ci
214 48 1 Ci
215 48 1 Ci
215 48 1 Ci
216 48 1 Ci
217 48 1 Ci
219 48 1 Ci
220 48 1 Ci
220 48 1 Ci
221 48 1 Ci
222 48 1 Ci
223 48 1 Ci
225 48 1 Ci
226 48 1 Ci
226 48 1 Ci
227 48 1 Ci
228 48 1 Ci
230 48 1 Ci
231 48 1 Ci
231 48 1 Ci
232 48 1 Ci
233 48 1 Ci
234 48 1 Ci
236 48 1 Ci
237 48 1 Ci
237 48 1 Ci
238 48 1 Ci
239 48 1 Ci
241 48 1 Ci
242 48 1 Ci
242 48 1 Ci
243 48 1 Ci
244 48 1 Ci
245 48 1 Ci
247 48 1 Ci
248 48 1 Ci
248 48 1 Ci
249 48 1 Ci
250 48 1 Ci
252 48 1 Ci
253 48 1 Ci
253 48 1 Ci
254 48 1 Ci
255 48 1 Ci
256 48 1 Ci
258 48 1 Ci
259 48 1 Ci
259 48 1 Ci
260 48 1 Ci
261 48 1 Ci
263 48 1 Ci
264 48 1 Ci
264 48 1 Ci
265 48 1 Ci
266 48 1 Ci
268 48 1 Ci
269 48 1 Ci
270 48 1 Ci
270 48 1 Ci
271 48 1 Ci
272 48 1 Ci
274 48 1 Ci
275 48 1 Ci
275 48 1 Ci
276 48 1 Ci
277 48 1 Ci
279 48 1 Ci
280 48 1 Ci
281 48 1 Ci
281 48 1 Ci
282 48 1 Ci
283 48 1 Ci
285 48 1 Ci
286 48 1 Ci
286 48 1 Ci
287 48 1 Ci
288 48 1 Ci
290 48 1 Ci
291 48 1 Ci
292 48 1 Ci
292 48 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 349 40 Box Fill

0 40 69 1 Box Fill

280 40 69 1 Box Fill

0 41 349 39 Box Fill

1 1 1 SetBgColor
68 40 212 1 Box Fill

279 38 1 3 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 42 moveto
68 38 lineto
281 38 lineto
279 40 lineto
70 40 lineto
70 40 lineto
68 42 lineto
68 42  lineto closepath Fill
81 17 0 174 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+1, +15\)) 81 0 13 DrawAdjText
EndText
9 17 0 78 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 117 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 156 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 194 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 233 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 272 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 46 272 46 LS
97 46 97 51 LS
78 46 78 56 LS
136 46 136 51 LS
117 46 117 56 LS
175 46 175 51 LS
156 46 156 56 LS
214 46 214 51 LS
194 46 194 56 LS
253 46 253 51 LS
233 46 233 56 LS
272 46 272 56 LS
9 17 0 45 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.001) 45 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.003) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.004) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.005) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 49 64 48 LS
64 49 59 49 LS
64 49 54 49 LS
64 49 59 49 LS
64 49 54 49 LS
64 49 59 49 LS
64 49 54 49 LS
64 48 59 48 LS
64 48 54 48 LS
64 48 59 48 LS
64 48 54 48 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 38 568 303 224
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:12 1999)
%%Title: (/tmp/11.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:12 1999) show
10 20 moveto
(File: /tmp/11.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
50 750 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 213 4 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 49 moveto
 78 49 lineto
 79 49 lineto
 80 49 lineto
 82 49 lineto
 83 49 lineto
 83 49 lineto
 84 48 lineto
 85 48 lineto
 87 48 lineto
 88 48 lineto
 88 48 lineto
 89 48 lineto
 90 48 lineto
 91 48 lineto
 93 48 lineto
 94 48 lineto
 94 48 lineto
 95 48 lineto
 96 48 lineto
 98 48 lineto
 99 48 lineto
 99 48 lineto
 100 48 lineto
 101 48 lineto
 102 48 lineto
 104 48 lineto
 105 48 lineto
 105 48 lineto
 106 48 lineto
 107 48 lineto
 109 48 lineto
 110 48 lineto
 110 48 lineto
 111 48 lineto
 112 48 lineto
 113 48 lineto
 115 48 lineto
 116 48 lineto
 116 48 lineto
 117 48 lineto
 118 48 lineto
 120 48 lineto
 121 48 lineto
 121 48 lineto
 122 48 lineto
 123 48 lineto
 124 48 lineto
 126 48 lineto
 127 48 lineto
 127 48 lineto
 128 48 lineto
 129 48 lineto
 131 48 lineto
 132 48 lineto
 132 48 lineto
 133 48 lineto
 134 48 lineto
 135 48 lineto
 137 48 lineto
 138 48 lineto
 138 48 lineto
 139 48 lineto
 140 48 lineto
 142 48 lineto
 143 49 lineto
 143 49 lineto
 144 49 lineto
 145 49 lineto
 146 49 lineto
 148 49 lineto
 149 49 lineto
 149 49 lineto
 150 49 lineto
 151 49 lineto
 153 49 lineto
 154 49 lineto
 154 49 lineto
 155 49 lineto
 156 49 lineto
 157 49 lineto
 159 49 lineto
 160 49 lineto
 160 49 lineto
 161 49 lineto
 162 49 lineto
 164 49 lineto
 165 49 lineto
 165 49 lineto
 166 49 lineto
 167 49 lineto
 168 49 lineto
 170 49 lineto
 171 49 lineto
 171 49 lineto
 172 49 lineto
 173 49 lineto
 175 49 lineto
 176 49 lineto
 176 49 lineto
 177 49 lineto
 178 49 lineto
 179 49 lineto
 181 49 lineto
 182 49 lineto
 182 49 lineto
 183 49 lineto
 184 49 lineto
 186 49 lineto
 187 49 lineto
 187 49 lineto
 188 49 lineto
 189 49 lineto
 190 49 lineto
 192 49 lineto
 193 49 lineto
 193 49 lineto
 194 49 lineto
 195 49 lineto
 197 49 lineto
 198 49 lineto
 198 49 lineto
 199 49 lineto
 200 49 lineto
 201 49 lineto
 203 49 lineto
 204 49 lineto
 204 49 lineto
 205 49 lineto
 206 49 lineto
 208 49 lineto
 209 49 lineto
 209 49 lineto
 210 49 lineto
 211 49 lineto
 212 49 lineto
 214 49 lineto
 215 49 lineto
 215 49 lineto
 216 49 lineto
 217 49 lineto
 219 49 lineto
 220 49 lineto
 220 49 lineto
 221 49 lineto
 222 49 lineto
 223 49 lineto
 225 49 lineto
 226 49 lineto
 226 49 lineto
 227 49 lineto
 228 49 lineto
 230 49 lineto
 231 49 lineto
 231 49 lineto
 232 49 lineto
 233 49 lineto
 234 49 lineto
 236 49 lineto
 237 49 lineto
 237 49 lineto
 238 49 lineto
 239 49 lineto
 241 49 lineto
 242 49 lineto
 242 49 lineto
 243 49 lineto
 244 49 lineto
 245 49 lineto
 247 49 lineto
 248 49 lineto
 248 49 lineto
 249 49 lineto
 250 49 lineto
 252 49 lineto
 253 49 lineto
 253 49 lineto
 254 49 lineto
 255 49 lineto
 256 49 lineto
 258 49 lineto
 259 49 lineto
 259 49 lineto
 260 49 lineto
 261 49 lineto
 263 49 lineto
 264 49 lineto
 264 49 lineto
 265 49 lineto
 266 49 lineto
 268 49 lineto
 269 49 lineto
 270 49 lineto
 270 49 lineto
 271 49 lineto
 272 49 lineto
 274 49 lineto
 275 49 lineto
 275 49 lineto
 276 49 lineto
 277 49 lineto
 279 49 lineto
 280 49 lineto
 281 49 lineto
 281 49 lineto
 282 49 lineto
 283 49 lineto
 285 49 lineto
 286 49 lineto
 286 49 lineto
 287 49 lineto
 288 49 lineto
 290 49 lineto
 291 49 lineto
 292 49 lineto
 292 49 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 49 1 Ci
78 49 1 Ci
79 49 1 Ci
80 49 1 Ci
82 49 1 Ci
83 49 1 Ci
83 49 1 Ci
84 48 1 Ci
85 48 1 Ci
87 48 1 Ci
88 48 1 Ci
88 48 1 Ci
89 48 1 Ci
90 48 1 Ci
91 48 1 Ci
93 48 1 Ci
94 48 1 Ci
94 48 1 Ci
95 48 1 Ci
96 48 1 Ci
98 48 1 Ci
99 48 1 Ci
99 48 1 Ci
100 48 1 Ci
101 48 1 Ci
102 48 1 Ci
104 48 1 Ci
105 48 1 Ci
105 48 1 Ci
106 48 1 Ci
107 48 1 Ci
109 48 1 Ci
110 48 1 Ci
110 48 1 Ci
111 48 1 Ci
112 48 1 Ci
113 48 1 Ci
115 48 1 Ci
116 48 1 Ci
116 48 1 Ci
117 48 1 Ci
118 48 1 Ci
120 48 1 Ci
121 48 1 Ci
121 48 1 Ci
122 48 1 Ci
123 48 1 Ci
124 48 1 Ci
126 48 1 Ci
127 48 1 Ci
127 48 1 Ci
128 48 1 Ci
129 48 1 Ci
131 48 1 Ci
132 48 1 Ci
132 48 1 Ci
133 48 1 Ci
134 48 1 Ci
135 48 1 Ci
137 48 1 Ci
138 48 1 Ci
138 48 1 Ci
139 48 1 Ci
140 48 1 Ci
142 48 1 Ci
143 49 1 Ci
143 49 1 Ci
144 49 1 Ci
145 49 1 Ci
146 49 1 Ci
148 49 1 Ci
149 49 1 Ci
149 49 1 Ci
150 49 1 Ci
151 49 1 Ci
153 49 1 Ci
154 49 1 Ci
154 49 1 Ci
155 49 1 Ci
156 49 1 Ci
157 49 1 Ci
159 49 1 Ci
160 49 1 Ci
160 49 1 Ci
161 49 1 Ci
162 49 1 Ci
164 49 1 Ci
165 49 1 Ci
165 49 1 Ci
166 49 1 Ci
167 49 1 Ci
168 49 1 Ci
170 49 1 Ci
171 49 1 Ci
171 49 1 Ci
172 49 1 Ci
173 49 1 Ci
175 49 1 Ci
176 49 1 Ci
176 49 1 Ci
177 49 1 Ci
178 49 1 Ci
179 49 1 Ci
181 49 1 Ci
182 49 1 Ci
182 49 1 Ci
183 49 1 Ci
184 49 1 Ci
186 49 1 Ci
187 49 1 Ci
187 49 1 Ci
188 49 1 Ci
189 49 1 Ci
190 49 1 Ci
192 49 1 Ci
193 49 1 Ci
193 49 1 Ci
194 49 1 Ci
195 49 1 Ci
197 49 1 Ci
198 49 1 Ci
198 49 1 Ci
199 49 1 Ci
200 49 1 Ci
201 49 1 Ci
203 49 1 Ci
204 49 1 Ci
204 49 1 Ci
205 49 1 Ci
206 49 1 Ci
208 49 1 Ci
209 49 1 Ci
209 49 1 Ci
210 49 1 Ci
211 49 1 Ci
212 49 1 Ci
214 49 1 Ci
215 49 1 Ci
215 49 1 Ci
216 49 1 Ci
217 49 1 Ci
219 49 1 Ci
220 49 1 Ci
220 49 1 Ci
221 49 1 Ci
222 49 1 Ci
223 49 1 Ci
225 49 1 Ci
226 49 1 Ci
226 49 1 Ci
227 49 1 Ci
228 49 1 Ci
230 49 1 Ci
231 49 1 Ci
231 49 1 Ci
232 49 1 Ci
233 49 1 Ci
234 49 1 Ci
236 49 1 Ci
237 49 1 Ci
237 49 1 Ci
238 49 1 Ci
239 49 1 Ci
241 49 1 Ci
242 49 1 Ci
242 49 1 Ci
243 49 1 Ci
244 49 1 Ci
245 49 1 Ci
247 49 1 Ci
248 49 1 Ci
248 49 1 Ci
249 49 1 Ci
250 49 1 Ci
252 49 1 Ci
253 49 1 Ci
253 49 1 Ci
254 49 1 Ci
255 49 1 Ci
256 49 1 Ci
258 49 1 Ci
259 49 1 Ci
259 49 1 Ci
260 49 1 Ci
261 49 1 Ci
263 49 1 Ci
264 49 1 Ci
264 49 1 Ci
265 49 1 Ci
266 49 1 Ci
268 49 1 Ci
269 49 1 Ci
270 49 1 Ci
270 49 1 Ci
271 49 1 Ci
272 49 1 Ci
274 49 1 Ci
275 49 1 Ci
275 49 1 Ci
276 49 1 Ci
277 49 1 Ci
279 49 1 Ci
280 49 1 Ci
281 49 1 Ci
281 49 1 Ci
282 49 1 Ci
283 49 1 Ci
285 49 1 Ci
286 49 1 Ci
286 49 1 Ci
287 49 1 Ci
288 49 1 Ci
290 49 1 Ci
291 49 1 Ci
292 49 1 Ci
292 49 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 48 1 Ci
78 48 1 Ci
79 48 1 Ci
80 48 1 Ci
82 48 1 Ci
83 48 1 Ci
83 48 1 Ci
84 48 1 Ci
85 48 1 Ci
87 48 1 Ci
88 48 1 Ci
88 48 1 Ci
89 48 1 Ci
90 48 1 Ci
91 48 1 Ci
93 48 1 Ci
94 48 1 Ci
94 48 1 Ci
95 48 1 Ci
96 48 1 Ci
98 48 1 Ci
99 48 1 Ci
99 48 1 Ci
100 48 1 Ci
101 48 1 Ci
102 48 1 Ci
104 48 1 Ci
105 48 1 Ci
105 48 1 Ci
106 48 1 Ci
107 48 1 Ci
109 48 1 Ci
110 48 1 Ci
110 48 1 Ci
111 48 1 Ci
112 48 1 Ci
113 48 1 Ci
115 48 1 Ci
116 48 1 Ci
116 48 1 Ci
117 48 1 Ci
118 48 1 Ci
120 48 1 Ci
121 48 1 Ci
121 48 1 Ci
122 48 1 Ci
123 48 1 Ci
124 48 1 Ci
126 48 1 Ci
127 48 1 Ci
127 48 1 Ci
128 48 1 Ci
129 48 1 Ci
131 48 1 Ci
132 48 1 Ci
132 48 1 Ci
133 48 1 Ci
134 48 1 Ci
135 48 1 Ci
137 48 1 Ci
138 48 1 Ci
138 48 1 Ci
139 48 1 Ci
140 48 1 Ci
142 48 1 Ci
143 48 1 Ci
143 48 1 Ci
144 48 1 Ci
145 48 1 Ci
146 48 1 Ci
148 48 1 Ci
149 48 1 Ci
149 48 1 Ci
150 48 1 Ci
151 48 1 Ci
153 48 1 Ci
154 48 1 Ci
154 48 1 Ci
155 48 1 Ci
156 48 1 Ci
157 48 1 Ci
159 48 1 Ci
160 48 1 Ci
160 48 1 Ci
161 48 1 Ci
162 48 1 Ci
164 48 1 Ci
165 48 1 Ci
165 48 1 Ci
166 48 1 Ci
167 48 1 Ci
168 48 1 Ci
170 48 1 Ci
171 48 1 Ci
171 48 1 Ci
172 48 1 Ci
173 48 1 Ci
175 48 1 Ci
176 48 1 Ci
176 48 1 Ci
177 48 1 Ci
178 48 1 Ci
179 48 1 Ci
181 48 1 Ci
182 48 1 Ci
182 48 1 Ci
183 48 1 Ci
184 48 1 Ci
186 48 1 Ci
187 48 1 Ci
187 48 1 Ci
188 48 1 Ci
189 48 1 Ci
190 48 1 Ci
192 48 1 Ci
193 48 1 Ci
193 48 1 Ci
194 48 1 Ci
195 48 1 Ci
197 48 1 Ci
198 48 1 Ci
198 48 1 Ci
199 48 1 Ci
200 48 1 Ci
201 48 1 Ci
203 48 1 Ci
204 48 1 Ci
204 48 1 Ci
205 48 1 Ci
206 48 1 Ci
208 48 1 Ci
209 48 1 Ci
209 48 1 Ci
210 48 1 Ci
211 48 1 Ci
212 48 1 Ci
214 48 1 Ci
215 48 1 Ci
215 48 1 Ci
216 48 1 Ci
217 48 1 Ci
219 48 1 Ci
220 48 1 Ci
220 48 1 Ci
221 48 1 Ci
222 48 1 Ci
223 48 1 Ci
225 48 1 Ci
226 48 1 Ci
226 48 1 Ci
227 48 1 Ci
228 48 1 Ci
230 48 1 Ci
231 48 1 Ci
231 48 1 Ci
232 48 1 Ci
233 48 1 Ci
234 48 1 Ci
236 48 1 Ci
237 48 1 Ci
237 48 1 Ci
238 48 1 Ci
239 48 1 Ci
241 48 1 Ci
242 48 1 Ci
242 48 1 Ci
243 48 1 Ci
244 48 1 Ci
245 48 1 Ci
247 48 1 Ci
248 48 1 Ci
248 48 1 Ci
249 48 1 Ci
250 48 1 Ci
252 48 1 Ci
253 48 1 Ci
253 48 1 Ci
254 48 1 Ci
255 48 1 Ci
256 48 1 Ci
258 48 1 Ci
259 48 1 Ci
259 48 1 Ci
260 48 1 Ci
261 48 1 Ci
263 48 1 Ci
264 48 1 Ci
264 48 1 Ci
265 48 1 Ci
266 48 1 Ci
268 48 1 Ci
269 48 1 Ci
270 48 1 Ci
270 48 1 Ci
271 48 1 Ci
272 48 1 Ci
274 48 1 Ci
275 48 1 Ci
275 48 1 Ci
276 48 1 Ci
277 48 1 Ci
279 48 1 Ci
280 48 1 Ci
281 48 1 Ci
281 48 1 Ci
282 48 1 Ci
283 48 1 Ci
285 48 1 Ci
286 48 1 Ci
286 48 1 Ci
287 48 1 Ci
288 48 1 Ci
290 48 1 Ci
291 48 1 Ci
292 48 1 Ci
292 48 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 349 40 Box Fill

0 40 69 1 Box Fill

280 40 69 1 Box Fill

0 41 349 39 Box Fill

1 1 1 SetBgColor
68 40 212 1 Box Fill

279 38 1 3 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 42 moveto
68 38 lineto
281 38 lineto
279 40 lineto
70 40 lineto
70 40 lineto
68 42 lineto
68 42  lineto closepath Fill
81 17 0 174 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+3, +17\)) 81 0 13 DrawAdjText
EndText
9 17 0 78 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 117 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 156 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 194 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 233 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 272 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 46 272 46 LS
97 46 97 51 LS
78 46 78 56 LS
136 46 136 51 LS
117 46 117 56 LS
175 46 175 51 LS
156 46 156 56 LS
214 46 214 51 LS
194 46 194 56 LS
253 46 253 51 LS
233 46 233 56 LS
272 46 272 56 LS
9 17 0 45 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.001) 45 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.003) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.004) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 49 64 48 LS
64 49 59 49 LS
64 49 54 49 LS
64 49 59 49 LS
64 49 54 49 LS
64 48 59 48 LS
64 49 54 49 LS
64 48 59 48 LS
64 48 54 48 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 303 0 309 152
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:12 1999)
%%Title: (/tmp/12.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:12 1999) show
10 20 moveto
(File: /tmp/12.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
400 0 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 4 123 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 152 moveto
 78 69 lineto
 78 66 lineto
 78 62 lineto
 78 59 lineto
 78 56 lineto
 78 53 lineto
 78 52 lineto
 78 51 lineto
 78 51 lineto
 78 53 lineto
 78 55 lineto
 78 58 lineto
 78 63 lineto
 78 68 lineto
 78 73 lineto
 78 80 lineto
 78 86 lineto
 78 93 lineto
 78 99 lineto
 78 105 lineto
 78 109 lineto
 78 111 lineto
 78 109 lineto
 78 106 lineto
 78 102 lineto
 78 98 lineto
 78 95 lineto
 78 91 lineto
 78 89 lineto
 78 87 lineto
 78 86 lineto
 78 87 lineto
 78 88 lineto
 78 90 lineto
 78 91 lineto
 78 93 lineto
 78 95 lineto
 78 97 lineto
 78 98 lineto
 78 100 lineto
 78 101 lineto
 78 102 lineto
 78 103 lineto
 78 103 lineto
 78 104 lineto
 78 152 lineto
 78 152 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 152 1 Ci
78 69 1 Ci
78 66 1 Ci
78 62 1 Ci
78 59 1 Ci
78 56 1 Ci
78 53 1 Ci
78 52 1 Ci
78 51 1 Ci
78 51 1 Ci
78 53 1 Ci
78 55 1 Ci
78 58 1 Ci
78 63 1 Ci
78 68 1 Ci
78 73 1 Ci
78 80 1 Ci
78 86 1 Ci
78 93 1 Ci
78 99 1 Ci
78 105 1 Ci
78 109 1 Ci
78 111 1 Ci
78 109 1 Ci
78 106 1 Ci
78 102 1 Ci
78 98 1 Ci
78 95 1 Ci
78 91 1 Ci
78 89 1 Ci
78 87 1 Ci
78 86 1 Ci
78 87 1 Ci
78 88 1 Ci
78 90 1 Ci
78 91 1 Ci
78 93 1 Ci
78 95 1 Ci
78 97 1 Ci
78 98 1 Ci
78 100 1 Ci
78 101 1 Ci
78 102 1 Ci
78 103 1 Ci
78 103 1 Ci
78 104 1 Ci
78 152 1 Ci
78 152 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 144 1 Ci
78 112 1 Ci
78 111 1 Ci
78 110 1 Ci
78 109 1 Ci
78 107 1 Ci
78 107 1 Ci
78 105 1 Ci
78 105 1 Ci
78 104 1 Ci
78 103 1 Ci
78 102 1 Ci
78 101 1 Ci
78 99 1 Ci
78 97 1 Ci
78 95 1 Ci
78 92 1 Ci
78 89 1 Ci
78 86 1 Ci
78 82 1 Ci
78 78 1 Ci
78 75 1 Ci
78 73 1 Ci
78 71 1 Ci
78 69 1 Ci
78 68 1 Ci
78 66 1 Ci
78 65 1 Ci
78 64 1 Ci
78 63 1 Ci
78 62 1 Ci
78 61 1 Ci
78 60 1 Ci
78 59 1 Ci
78 58 1 Ci
78 57 1 Ci
78 56 1 Ci
78 55 1 Ci
78 144 1 Ci
78 143 1 Ci
78 142 1 Ci
78 142 1 Ci
78 144 1 Ci
78 144 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 7 40 Box Fill

0 40 69 120 Box Fill

71 40 69 120 Box Fill

0 160 7 39 Box Fill

1 1 1 SetBgColor
68 159 3 1 Box Fill

70 38 1 122 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 161 moveto
68 38 lineto
72 38 lineto
70 40 lineto
70 40 lineto
70 159 lineto
68 161 lineto
68 161  lineto closepath Fill
81 17 0 70 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+5, +19\)) 81 0 13 DrawAdjText
EndText
9 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 79 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 79 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 79 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 165 79 165 LS
78 165 78 170 LS
78 165 78 175 LS
78 165 78 170 LS
78 165 78 175 LS
79 165 79 170 LS
78 165 78 175 LS
79 165 79 170 LS
79 165 79 175 LS
79 165 79 170 LS
79 165 79 175 LS
79 165 79 175 LS
9 17 0 45 152 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 117 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.001) 45 0 13 DrawAdjText
EndText
45 17 0 27 83 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.003) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 152 64 48 LS
64 135 59 135 LS
64 152 54 152 LS
64 100 59 100 LS
64 117 54 117 LS
64 65 59 65 LS
64 83 54 83 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 303 189 309 341
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:13 1999)
%%Title: (/tmp/13.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:13 1999) show
10 20 moveto
(File: /tmp/13.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
400 250 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
77 38 4 123 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 87 152 moveto
 87 88 lineto
 87 84 lineto
 87 80 lineto
 87 76 lineto
 87 74 lineto
 87 72 lineto
 87 71 lineto
 87 73 lineto
 87 75 lineto
 87 78 lineto
 87 82 lineto
 87 88 lineto
 87 94 lineto
 87 100 lineto
 87 107 lineto
 87 113 lineto
 87 119 lineto
 87 122 lineto
 87 118 lineto
 87 112 lineto
 87 106 lineto
 87 100 lineto
 87 94 lineto
 87 89 lineto
 87 152 lineto
 87 152 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

87 152 1 Ci
87 88 1 Ci
87 84 1 Ci
87 80 1 Ci
87 76 1 Ci
87 74 1 Ci
87 72 1 Ci
87 71 1 Ci
87 73 1 Ci
87 75 1 Ci
87 78 1 Ci
87 82 1 Ci
87 88 1 Ci
87 94 1 Ci
87 100 1 Ci
87 107 1 Ci
87 113 1 Ci
87 119 1 Ci
87 122 1 Ci
87 118 1 Ci
87 112 1 Ci
87 106 1 Ci
87 100 1 Ci
87 94 1 Ci
87 89 1 Ci
87 152 1 Ci
87 152 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

87 144 1 Ci
87 95 1 Ci
87 96 1 Ci
87 97 1 Ci
87 98 1 Ci
87 100 1 Ci
87 101 1 Ci
87 103 1 Ci
87 107 1 Ci
87 111 1 Ci
87 116 1 Ci
87 120 1 Ci
87 123 1 Ci
87 125 1 Ci
87 126 1 Ci
87 128 1 Ci
87 128 1 Ci
87 144 1 Ci
87 144 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 7 40 Box Fill

0 40 78 120 Box Fill

80 40 78 120 Box Fill

0 160 7 39 Box Fill

1 1 1 SetBgColor
77 159 3 1 Box Fill

79 38 1 122 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 77 161 moveto
77 38 lineto
81 38 lineto
79 40 lineto
79 40 lineto
79 159 lineto
77 161 lineto
77 161  lineto closepath Fill
81 17 0 79 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(-8, +20\)) 81 0 13 DrawAdjText
EndText
9 17 0 87 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 87 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 87 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 88 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 88 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 88 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
87 165 88 165 LS
87 165 87 170 LS
87 165 87 175 LS
87 165 87 170 LS
87 165 87 175 LS
88 165 88 170 LS
87 165 87 175 LS
88 165 88 170 LS
88 165 88 175 LS
88 165 88 170 LS
88 165 88 175 LS
88 165 88 175 LS
9 17 0 54 152 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
54 17 0 32 126 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.0005) 54 0 13 DrawAdjText
EndText
45 17 0 36 100 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.001) 45 0 13 DrawAdjText
EndText
54 17 0 32 74 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.0015) 54 0 13 DrawAdjText
EndText
45 17 0 36 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
73 152 73 48 LS
73 139 68 139 LS
73 152 63 152 LS
73 113 68 113 LS
73 126 63 126 LS
73 87 68 87 LS
73 100 63 100 LS
73 61 68 61 LS
73 74 63 74 LS
73 48 63 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 303 379 309 414
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:13 1999)
%%Title: (/tmp/14.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:13 1999) show
10 20 moveto
(File: /tmp/14.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
400 500 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 4 4 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 49 moveto
 78 48 lineto
 78 48 lineto
 78 49 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 49 1 Ci
78 48 1 Ci
78 48 1 Ci
78 49 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 48 1 Ci
78 48 1 Ci
78 48 1 Ci
78 48 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 7 40 Box Fill

0 40 69 1 Box Fill

71 40 69 1 Box Fill

0 41 7 39 Box Fill

1 1 1 SetBgColor
68 40 3 1 Box Fill

70 38 1 3 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 42 moveto
68 38 lineto
72 38 lineto
70 40 lineto
70 40 lineto
70 40 lineto
68 42 lineto
68 42  lineto closepath Fill
81 17 0 70 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+7, +21\)) 81 0 13 DrawAdjText
EndText
9 17 0 78 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 78 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 78 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 79 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 79 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 79 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 46 79 46 LS
78 46 78 51 LS
78 46 78 56 LS
78 46 78 51 LS
78 46 78 56 LS
79 46 79 51 LS
78 46 78 56 LS
79 46 79 51 LS
79 46 79 56 LS
79 46 79 51 LS
79 46 79 56 LS
79 46 79 56 LS
9 17 0 45 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.001) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.003) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 49 64 48 LS
64 49 59 49 LS
64 49 54 49 LS
64 49 59 49 LS
64 49 54 49 LS
64 48 59 48 LS
64 48 54 48 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 303 568 309 224
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:13 1999)
%%Title: (/tmp/15.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:13 1999) show
10 20 moveto
(File: /tmp/15.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
400 750 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
77 38 4 4 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 87 49 moveto
 87 48 lineto
 87 48 lineto
 87 48 lineto
 87 49 lineto
 87 49 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

87 49 1 Ci
87 48 1 Ci
87 48 1 Ci
87 48 1 Ci
87 49 1 Ci
87 49 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

87 48 1 Ci
87 48 1 Ci
87 48 1 Ci
87 48 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 7 40 Box Fill

0 40 78 1 Box Fill

80 40 78 1 Box Fill

0 41 7 39 Box Fill

1 1 1 SetBgColor
77 40 3 1 Box Fill

79 38 1 3 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 77 42 moveto
77 38 lineto
81 38 lineto
79 40 lineto
79 40 lineto
79 40 lineto
77 42 lineto
77 42  lineto closepath Fill
81 17 0 79 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(-6, +22\)) 81 0 13 DrawAdjText
EndText
9 17 0 87 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 87 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 87 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 88 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 88 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 88 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
87 46 88 46 LS
87 46 87 51 LS
87 46 87 56 LS
87 46 87 51 LS
87 46 87 56 LS
88 46 88 51 LS
87 46 87 56 LS
88 46 88 51 LS
88 46 88 56 LS
88 46 88 51 LS
88 46 88 56 LS
88 46 88 56 LS
9 17 0 54 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
54 17 0 32 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.0005) 54 0 13 DrawAdjText
EndText
45 17 0 36 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.001) 45 0 13 DrawAdjText
EndText
54 17 0 32 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.0015) 54 0 13 DrawAdjText
EndText
45 17 0 36 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
73 49 73 48 LS
73 49 68 49 LS
73 49 63 49 LS
73 49 68 49 LS
73 49 63 49 LS
73 48 68 48 LS
73 49 63 49 LS
73 48 68 48 LS
73 48 63 48 LS
73 48 63 48 LS
grestore
 grestore
showpage
%%EndPage:  1
%%Page:  2
gsave
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 38 0 303 152
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:13 1999)
%%Title: (/tmp/16.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:13 1999) show
10 20 moveto
(File: /tmp/16.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
50 0 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 213 123 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 152 moveto
 78 152 lineto
 79 152 lineto
 80 152 lineto
 82 152 lineto
 83 152 lineto
 83 152 lineto
 84 152 lineto
 85 152 lineto
 87 152 lineto
 88 152 lineto
 88 152 lineto
 89 152 lineto
 90 152 lineto
 91 152 lineto
 93 152 lineto
 94 152 lineto
 94 152 lineto
 95 152 lineto
 96 152 lineto
 98 152 lineto
 99 152 lineto
 99 152 lineto
 100 152 lineto
 101 152 lineto
 102 152 lineto
 104 152 lineto
 105 152 lineto
 105 152 lineto
 106 152 lineto
 107 152 lineto
 109 152 lineto
 110 152 lineto
 110 152 lineto
 111 152 lineto
 112 152 lineto
 113 152 lineto
 115 152 lineto
 116 152 lineto
 116 152 lineto
 117 152 lineto
 118 152 lineto
 120 152 lineto
 121 152 lineto
 121 108 lineto
 122 101 lineto
 123 94 lineto
 124 86 lineto
 125 78 lineto
 126 70 lineto
 127 64 lineto
 127 58 lineto
 128 53 lineto
 129 152 lineto
 131 152 lineto
 132 152 lineto
 132 152 lineto
 133 152 lineto
 134 152 lineto
 135 152 lineto
 137 152 lineto
 138 152 lineto
 138 152 lineto
 139 152 lineto
 140 152 lineto
 142 152 lineto
 143 152 lineto
 143 152 lineto
 144 152 lineto
 145 152 lineto
 146 152 lineto
 148 152 lineto
 149 152 lineto
 149 152 lineto
 150 152 lineto
 151 152 lineto
 153 152 lineto
 154 152 lineto
 154 152 lineto
 155 152 lineto
 156 152 lineto
 157 152 lineto
 159 152 lineto
 160 152 lineto
 160 152 lineto
 161 152 lineto
 162 152 lineto
 164 152 lineto
 165 152 lineto
 165 152 lineto
 166 152 lineto
 167 152 lineto
 168 152 lineto
 170 152 lineto
 171 152 lineto
 171 152 lineto
 172 152 lineto
 173 152 lineto
 175 152 lineto
 176 152 lineto
 176 152 lineto
 177 152 lineto
 178 152 lineto
 179 152 lineto
 181 152 lineto
 182 152 lineto
 182 152 lineto
 183 152 lineto
 184 152 lineto
 186 152 lineto
 187 152 lineto
 187 152 lineto
 188 152 lineto
 189 152 lineto
 190 152 lineto
 192 152 lineto
 193 152 lineto
 193 152 lineto
 194 152 lineto
 195 152 lineto
 197 152 lineto
 198 152 lineto
 198 152 lineto
 199 152 lineto
 200 152 lineto
 201 152 lineto
 203 152 lineto
 204 152 lineto
 204 152 lineto
 205 152 lineto
 206 152 lineto
 208 152 lineto
 209 152 lineto
 209 152 lineto
 210 152 lineto
 211 152 lineto
 212 152 lineto
 214 152 lineto
 215 152 lineto
 215 152 lineto
 216 152 lineto
 217 152 lineto
 219 152 lineto
 220 152 lineto
 220 152 lineto
 221 152 lineto
 222 152 lineto
 223 152 lineto
 225 152 lineto
 226 152 lineto
 226 152 lineto
 227 152 lineto
 228 152 lineto
 230 152 lineto
 231 152 lineto
 231 152 lineto
 232 152 lineto
 233 152 lineto
 234 152 lineto
 236 152 lineto
 237 152 lineto
 237 152 lineto
 238 152 lineto
 239 152 lineto
 241 152 lineto
 242 152 lineto
 242 152 lineto
 243 152 lineto
 244 152 lineto
 245 152 lineto
 247 152 lineto
 248 152 lineto
 248 152 lineto
 249 152 lineto
 250 152 lineto
 252 152 lineto
 253 152 lineto
 253 152 lineto
 254 152 lineto
 255 152 lineto
 256 152 lineto
 258 152 lineto
 259 152 lineto
 259 152 lineto
 260 152 lineto
 261 152 lineto
 263 152 lineto
 264 152 lineto
 264 152 lineto
 265 152 lineto
 266 152 lineto
 268 152 lineto
 269 152 lineto
 270 152 lineto
 270 152 lineto
 271 152 lineto
 272 152 lineto
 274 152 lineto
 275 152 lineto
 275 152 lineto
 276 152 lineto
 277 152 lineto
 279 152 lineto
 280 152 lineto
 281 152 lineto
 281 152 lineto
 282 152 lineto
 283 152 lineto
 285 152 lineto
 286 152 lineto
 286 152 lineto
 287 152 lineto
 288 152 lineto
 290 152 lineto
 291 152 lineto
 292 152 lineto
 292 152 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 152 1 Ci
78 152 1 Ci
79 152 1 Ci
80 152 1 Ci
82 152 1 Ci
83 152 1 Ci
83 152 1 Ci
84 152 1 Ci
85 152 1 Ci
87 152 1 Ci
88 152 1 Ci
88 152 1 Ci
89 152 1 Ci
90 152 1 Ci
91 152 1 Ci
93 152 1 Ci
94 152 1 Ci
94 152 1 Ci
95 152 1 Ci
96 152 1 Ci
98 152 1 Ci
99 152 1 Ci
99 152 1 Ci
100 152 1 Ci
101 152 1 Ci
102 152 1 Ci
104 152 1 Ci
105 152 1 Ci
105 152 1 Ci
106 152 1 Ci
107 152 1 Ci
109 152 1 Ci
110 152 1 Ci
110 152 1 Ci
111 152 1 Ci
112 152 1 Ci
113 152 1 Ci
115 152 1 Ci
116 152 1 Ci
116 152 1 Ci
117 152 1 Ci
118 152 1 Ci
120 152 1 Ci
121 152 1 Ci
121 108 1 Ci
122 101 1 Ci
123 94 1 Ci
124 86 1 Ci
125 78 1 Ci
126 70 1 Ci
127 64 1 Ci
127 58 1 Ci
128 53 1 Ci
129 152 1 Ci
131 152 1 Ci
132 152 1 Ci
132 152 1 Ci
133 152 1 Ci
134 152 1 Ci
135 152 1 Ci
137 152 1 Ci
138 152 1 Ci
138 152 1 Ci
139 152 1 Ci
140 152 1 Ci
142 152 1 Ci
143 152 1 Ci
143 152 1 Ci
144 152 1 Ci
145 152 1 Ci
146 152 1 Ci
148 152 1 Ci
149 152 1 Ci
149 152 1 Ci
150 152 1 Ci
151 152 1 Ci
153 152 1 Ci
154 152 1 Ci
154 152 1 Ci
155 152 1 Ci
156 152 1 Ci
157 152 1 Ci
159 152 1 Ci
160 152 1 Ci
160 152 1 Ci
161 152 1 Ci
162 152 1 Ci
164 152 1 Ci
165 152 1 Ci
165 152 1 Ci
166 152 1 Ci
167 152 1 Ci
168 152 1 Ci
170 152 1 Ci
171 152 1 Ci
171 152 1 Ci
172 152 1 Ci
173 152 1 Ci
175 152 1 Ci
176 152 1 Ci
176 152 1 Ci
177 152 1 Ci
178 152 1 Ci
179 152 1 Ci
181 152 1 Ci
182 152 1 Ci
182 152 1 Ci
183 152 1 Ci
184 152 1 Ci
186 152 1 Ci
187 152 1 Ci
187 152 1 Ci
188 152 1 Ci
189 152 1 Ci
190 152 1 Ci
192 152 1 Ci
193 152 1 Ci
193 152 1 Ci
194 152 1 Ci
195 152 1 Ci
197 152 1 Ci
198 152 1 Ci
198 152 1 Ci
199 152 1 Ci
200 152 1 Ci
201 152 1 Ci
203 152 1 Ci
204 152 1 Ci
204 152 1 Ci
205 152 1 Ci
206 152 1 Ci
208 152 1 Ci
209 152 1 Ci
209 152 1 Ci
210 152 1 Ci
211 152 1 Ci
212 152 1 Ci
214 152 1 Ci
215 152 1 Ci
215 152 1 Ci
216 152 1 Ci
217 152 1 Ci
219 152 1 Ci
220 152 1 Ci
220 152 1 Ci
221 152 1 Ci
222 152 1 Ci
223 152 1 Ci
225 152 1 Ci
226 152 1 Ci
226 152 1 Ci
227 152 1 Ci
228 152 1 Ci
230 152 1 Ci
231 152 1 Ci
231 152 1 Ci
232 152 1 Ci
233 152 1 Ci
234 152 1 Ci
236 152 1 Ci
237 152 1 Ci
237 152 1 Ci
238 152 1 Ci
239 152 1 Ci
241 152 1 Ci
242 152 1 Ci
242 152 1 Ci
243 152 1 Ci
244 152 1 Ci
245 152 1 Ci
247 152 1 Ci
248 152 1 Ci
248 152 1 Ci
249 152 1 Ci
250 152 1 Ci
252 152 1 Ci
253 152 1 Ci
253 152 1 Ci
254 152 1 Ci
255 152 1 Ci
256 152 1 Ci
258 152 1 Ci
259 152 1 Ci
259 152 1 Ci
260 152 1 Ci
261 152 1 Ci
263 152 1 Ci
264 152 1 Ci
264 152 1 Ci
265 152 1 Ci
266 152 1 Ci
268 152 1 Ci
269 152 1 Ci
270 152 1 Ci
270 152 1 Ci
271 152 1 Ci
272 152 1 Ci
274 152 1 Ci
275 152 1 Ci
275 152 1 Ci
276 152 1 Ci
277 152 1 Ci
279 152 1 Ci
280 152 1 Ci
281 152 1 Ci
281 152 1 Ci
282 152 1 Ci
283 152 1 Ci
285 152 1 Ci
286 152 1 Ci
286 152 1 Ci
287 152 1 Ci
288 152 1 Ci
290 152 1 Ci
291 152 1 Ci
292 152 1 Ci
292 152 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 144 3 Ci
78 144 3 Ci
79 144 3 Ci
80 144 3 Ci
82 144 3 Ci
83 144 3 Ci
83 144 3 Ci
84 144 3 Ci
85 144 3 Ci
87 144 3 Ci
88 144 3 Ci
88 144 3 Ci
89 144 3 Ci
90 144 3 Ci
91 144 3 Ci
93 144 3 Ci
94 144 3 Ci
94 144 3 Ci
95 144 3 Ci
96 144 3 Ci
98 144 3 Ci
99 144 3 Ci
99 144 3 Ci
100 144 3 Ci
101 144 3 Ci
102 144 3 Ci
104 144 3 Ci
105 144 3 Ci
105 144 3 Ci
106 144 3 Ci
107 144 3 Ci
109 144 3 Ci
110 144 3 Ci
110 144 3 Ci
111 144 3 Ci
112 144 3 Ci
113 144 3 Ci
115 144 3 Ci
116 144 3 Ci
116 144 3 Ci
117 144 3 Ci
118 144 3 Ci
120 144 3 Ci
121 144 3 Ci
121 94 3 Ci
122 92 3 Ci
123 90 3 Ci
124 88 3 Ci
125 87 3 Ci
126 87 3 Ci
127 86 3 Ci
127 86 3 Ci
128 86 3 Ci
129 144 3 Ci
131 144 3 Ci
132 144 3 Ci
132 144 3 Ci
133 144 3 Ci
134 144 3 Ci
135 144 3 Ci
137 144 3 Ci
138 144 3 Ci
138 144 3 Ci
139 144 3 Ci
140 144 3 Ci
142 144 3 Ci
143 144 3 Ci
143 144 3 Ci
144 144 3 Ci
145 144 3 Ci
146 144 3 Ci
148 144 3 Ci
149 144 3 Ci
149 144 3 Ci
150 144 3 Ci
151 144 3 Ci
153 144 3 Ci
154 144 3 Ci
154 144 3 Ci
155 144 3 Ci
156 144 3 Ci
157 144 3 Ci
159 144 3 Ci
160 144 3 Ci
160 144 3 Ci
161 144 3 Ci
162 144 3 Ci
164 144 3 Ci
165 144 3 Ci
165 144 3 Ci
166 144 3 Ci
167 144 3 Ci
168 144 3 Ci
170 144 3 Ci
171 144 3 Ci
171 144 3 Ci
172 144 3 Ci
173 144 3 Ci
175 144 3 Ci
176 144 3 Ci
176 144 3 Ci
177 144 3 Ci
178 144 3 Ci
179 144 3 Ci
181 144 3 Ci
182 144 3 Ci
182 144 3 Ci
183 144 3 Ci
184 144 3 Ci
186 144 3 Ci
187 144 3 Ci
187 144 3 Ci
188 144 3 Ci
189 144 3 Ci
190 144 3 Ci
192 144 3 Ci
193 144 3 Ci
193 144 3 Ci
194 144 3 Ci
195 144 3 Ci
197 144 3 Ci
198 144 3 Ci
198 144 3 Ci
199 144 3 Ci
200 144 3 Ci
201 144 3 Ci
203 144 3 Ci
204 144 3 Ci
204 144 3 Ci
205 144 3 Ci
206 144 3 Ci
208 144 3 Ci
209 144 3 Ci
209 144 3 Ci
210 144 3 Ci
211 144 3 Ci
212 144 3 Ci
214 144 3 Ci
215 144 3 Ci
215 144 3 Ci
216 144 3 Ci
217 144 3 Ci
219 144 3 Ci
220 144 3 Ci
220 144 3 Ci
221 144 3 Ci
222 144 3 Ci
223 144 3 Ci
225 144 3 Ci
226 144 3 Ci
226 144 3 Ci
227 144 3 Ci
228 144 3 Ci
230 144 3 Ci
231 144 3 Ci
231 144 3 Ci
232 144 3 Ci
233 144 3 Ci
234 144 3 Ci
236 144 3 Ci
237 144 3 Ci
237 144 3 Ci
238 144 3 Ci
239 144 3 Ci
241 144 3 Ci
242 144 3 Ci
242 144 3 Ci
243 144 3 Ci
244 144 3 Ci
245 144 3 Ci
247 144 3 Ci
248 144 3 Ci
248 144 3 Ci
249 144 3 Ci
250 144 3 Ci
252 144 3 Ci
253 144 3 Ci
253 144 3 Ci
254 144 3 Ci
255 144 3 Ci
256 144 3 Ci
258 144 3 Ci
259 144 3 Ci
259 144 3 Ci
260 144 3 Ci
261 144 3 Ci
263 144 3 Ci
264 144 3 Ci
264 144 3 Ci
265 144 3 Ci
266 144 3 Ci
268 144 3 Ci
269 144 3 Ci
270 144 3 Ci
270 144 3 Ci
271 144 3 Ci
272 144 3 Ci
274 144 3 Ci
275 144 3 Ci
275 144 3 Ci
276 144 3 Ci
277 144 3 Ci
279 144 3 Ci
280 144 3 Ci
281 144 3 Ci
281 144 3 Ci
282 144 3 Ci
283 144 3 Ci
285 144 3 Ci
286 144 3 Ci
286 144 3 Ci
287 144 3 Ci
288 144 3 Ci
290 144 3 Ci
291 144 3 Ci
292 144 3 Ci
292 144 3 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 349 40 Box Fill

0 40 69 120 Box Fill

280 40 69 120 Box Fill

0 160 349 39 Box Fill

1 1 1 SetBgColor
68 159 212 1 Box Fill

279 38 1 122 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 161 moveto
68 38 lineto
281 38 lineto
279 40 lineto
70 40 lineto
70 159 lineto
68 161 lineto
68 161  lineto closepath Fill
81 17 0 174 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+9, +23\)) 81 0 13 DrawAdjText
EndText
9 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 117 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 156 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 194 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 233 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 272 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 165 272 165 LS
97 165 97 170 LS
78 165 78 175 LS
136 165 136 170 LS
117 165 117 175 LS
175 165 175 170 LS
156 165 156 175 LS
214 165 214 170 LS
194 165 194 175 LS
253 165 253 170 LS
233 165 233 175 LS
272 165 272 175 LS
9 17 0 45 152 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 117 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.001) 45 0 13 DrawAdjText
EndText
45 17 0 27 83 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.003) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 152 64 48 LS
64 135 59 135 LS
64 152 54 152 LS
64 100 59 100 LS
64 117 54 117 LS
64 65 59 65 LS
64 83 54 83 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 38 189 303 341
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:13 1999)
%%Title: (/tmp/17.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:13 1999) show
10 20 moveto
(File: /tmp/17.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
50 250 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
77 38 195 123 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 87 152 moveto
 87 152 lineto
 88 152 lineto
 90 152 lineto
 90 152 lineto
 91 152 lineto
 93 152 lineto
 93 152 lineto
 94 152 lineto
 96 152 lineto
 96 152 lineto
 97 152 lineto
 98 77 lineto
 100 78 lineto
 100 78 lineto
 101 80 lineto
 102 82 lineto
 103 84 lineto
 103 87 lineto
 104 91 lineto
 105 94 lineto
 106 98 lineto
 106 102 lineto
 107 106 lineto
 108 110 lineto
 109 113 lineto
 110 115 lineto
 110 116 lineto
 111 116 lineto
 112 114 lineto
 113 113 lineto
 113 110 lineto
 114 108 lineto
 115 106 lineto
 116 104 lineto
 116 102 lineto
 117 101 lineto
 118 100 lineto
 119 100 lineto
 120 100 lineto
 120 100 lineto
 121 100 lineto
 122 99 lineto
 123 97 lineto
 123 95 lineto
 124 91 lineto
 125 86 lineto
 126 81 lineto
 126 76 lineto
 127 70 lineto
 128 64 lineto
 129 59 lineto
 129 54 lineto
 130 152 lineto
 131 152 lineto
 133 152 lineto
 133 152 lineto
 134 152 lineto
 136 152 lineto
 136 152 lineto
 137 152 lineto
 139 152 lineto
 139 152 lineto
 140 152 lineto
 142 152 lineto
 143 152 lineto
 143 152 lineto
 144 152 lineto
 146 152 lineto
 146 152 lineto
 147 152 lineto
 149 152 lineto
 149 152 lineto
 150 152 lineto
 152 152 lineto
 153 152 lineto
 153 152 lineto
 154 152 lineto
 156 152 lineto
 156 152 lineto
 157 152 lineto
 159 152 lineto
 159 152 lineto
 160 152 lineto
 162 152 lineto
 162 152 lineto
 163 152 lineto
 164 152 lineto
 166 152 lineto
 166 152 lineto
 167 152 lineto
 169 152 lineto
 169 152 lineto
 170 152 lineto
 172 152 lineto
 172 152 lineto
 173 152 lineto
 175 152 lineto
 176 152 lineto
 176 152 lineto
 177 152 lineto
 179 152 lineto
 179 152 lineto
 180 152 lineto
 182 152 lineto
 182 152 lineto
 183 152 lineto
 185 152 lineto
 186 152 lineto
 186 152 lineto
 187 152 lineto
 189 152 lineto
 189 152 lineto
 190 152 lineto
 192 152 lineto
 192 152 lineto
 193 152 lineto
 195 152 lineto
 195 152 lineto
 196 152 lineto
 197 152 lineto
 199 152 lineto
 199 152 lineto
 200 152 lineto
 202 152 lineto
 202 152 lineto
 203 152 lineto
 205 152 lineto
 205 152 lineto
 206 152 lineto
 208 152 lineto
 209 152 lineto
 209 152 lineto
 210 152 lineto
 212 152 lineto
 212 152 lineto
 213 152 lineto
 215 152 lineto
 215 152 lineto
 216 152 lineto
 218 152 lineto
 219 152 lineto
 219 152 lineto
 220 152 lineto
 222 152 lineto
 222 152 lineto
 223 152 lineto
 225 152 lineto
 225 152 lineto
 226 152 lineto
 228 152 lineto
 228 152 lineto
 229 152 lineto
 230 152 lineto
 232 152 lineto
 232 152 lineto
 233 152 lineto
 235 152 lineto
 235 152 lineto
 236 152 lineto
 238 152 lineto
 238 152 lineto
 239 152 lineto
 241 152 lineto
 242 152 lineto
 242 152 lineto
 243 152 lineto
 245 152 lineto
 245 152 lineto
 246 152 lineto
 248 152 lineto
 248 152 lineto
 249 152 lineto
 251 152 lineto
 252 152 lineto
 252 152 lineto
 253 152 lineto
 255 152 lineto
 255 152 lineto
 256 152 lineto
 258 152 lineto
 258 152 lineto
 259 152 lineto
 261 152 lineto
 261 152 lineto
 262 152 lineto
 263 152 lineto
 265 152 lineto
 265 152 lineto
 266 152 lineto
 268 152 lineto
 268 152 lineto
 269 152 lineto
 271 152 lineto
 271 152 lineto
 272 152 lineto
 274 152 lineto
 275 152 lineto
 275 152 lineto
 276 152 lineto
 278 152 lineto
 278 152 lineto
 279 152 lineto
 281 152 lineto
 281 152 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

87 152 1 Ci
87 152 1 Ci
88 152 1 Ci
90 152 1 Ci
90 152 1 Ci
91 152 1 Ci
93 152 1 Ci
93 152 1 Ci
94 152 1 Ci
96 152 1 Ci
96 152 1 Ci
97 152 1 Ci
98 77 1 Ci
100 78 1 Ci
100 78 1 Ci
101 80 1 Ci
102 82 1 Ci
103 84 1 Ci
103 87 1 Ci
104 91 1 Ci
105 94 1 Ci
106 98 1 Ci
106 102 1 Ci
107 106 1 Ci
108 110 1 Ci
109 113 1 Ci
110 115 1 Ci
110 116 1 Ci
111 116 1 Ci
112 114 1 Ci
113 113 1 Ci
113 110 1 Ci
114 108 1 Ci
115 106 1 Ci
116 104 1 Ci
116 102 1 Ci
117 101 1 Ci
118 100 1 Ci
119 100 1 Ci
120 100 1 Ci
120 100 1 Ci
121 100 1 Ci
122 99 1 Ci
123 97 1 Ci
123 95 1 Ci
124 91 1 Ci
125 86 1 Ci
126 81 1 Ci
126 76 1 Ci
127 70 1 Ci
128 64 1 Ci
129 59 1 Ci
129 54 1 Ci
130 152 1 Ci
131 152 1 Ci
133 152 1 Ci
133 152 1 Ci
134 152 1 Ci
136 152 1 Ci
136 152 1 Ci
137 152 1 Ci
139 152 1 Ci
139 152 1 Ci
140 152 1 Ci
142 152 1 Ci
143 152 1 Ci
143 152 1 Ci
144 152 1 Ci
146 152 1 Ci
146 152 1 Ci
147 152 1 Ci
149 152 1 Ci
149 152 1 Ci
150 152 1 Ci
152 152 1 Ci
153 152 1 Ci
153 152 1 Ci
154 152 1 Ci
156 152 1 Ci
156 152 1 Ci
157 152 1 Ci
159 152 1 Ci
159 152 1 Ci
160 152 1 Ci
162 152 1 Ci
162 152 1 Ci
163 152 1 Ci
164 152 1 Ci
166 152 1 Ci
166 152 1 Ci
167 152 1 Ci
169 152 1 Ci
169 152 1 Ci
170 152 1 Ci
172 152 1 Ci
172 152 1 Ci
173 152 1 Ci
175 152 1 Ci
176 152 1 Ci
176 152 1 Ci
177 152 1 Ci
179 152 1 Ci
179 152 1 Ci
180 152 1 Ci
182 152 1 Ci
182 152 1 Ci
183 152 1 Ci
185 152 1 Ci
186 152 1 Ci
186 152 1 Ci
187 152 1 Ci
189 152 1 Ci
189 152 1 Ci
190 152 1 Ci
192 152 1 Ci
192 152 1 Ci
193 152 1 Ci
195 152 1 Ci
195 152 1 Ci
196 152 1 Ci
197 152 1 Ci
199 152 1 Ci
199 152 1 Ci
200 152 1 Ci
202 152 1 Ci
202 152 1 Ci
203 152 1 Ci
205 152 1 Ci
205 152 1 Ci
206 152 1 Ci
208 152 1 Ci
209 152 1 Ci
209 152 1 Ci
210 152 1 Ci
212 152 1 Ci
212 152 1 Ci
213 152 1 Ci
215 152 1 Ci
215 152 1 Ci
216 152 1 Ci
218 152 1 Ci
219 152 1 Ci
219 152 1 Ci
220 152 1 Ci
222 152 1 Ci
222 152 1 Ci
223 152 1 Ci
225 152 1 Ci
225 152 1 Ci
226 152 1 Ci
228 152 1 Ci
228 152 1 Ci
229 152 1 Ci
230 152 1 Ci
232 152 1 Ci
232 152 1 Ci
233 152 1 Ci
235 152 1 Ci
235 152 1 Ci
236 152 1 Ci
238 152 1 Ci
238 152 1 Ci
239 152 1 Ci
241 152 1 Ci
242 152 1 Ci
242 152 1 Ci
243 152 1 Ci
245 152 1 Ci
245 152 1 Ci
246 152 1 Ci
248 152 1 Ci
248 152 1 Ci
249 152 1 Ci
251 152 1 Ci
252 152 1 Ci
252 152 1 Ci
253 152 1 Ci
255 152 1 Ci
255 152 1 Ci
256 152 1 Ci
258 152 1 Ci
258 152 1 Ci
259 152 1 Ci
261 152 1 Ci
261 152 1 Ci
262 152 1 Ci
263 152 1 Ci
265 152 1 Ci
265 152 1 Ci
266 152 1 Ci
268 152 1 Ci
268 152 1 Ci
269 152 1 Ci
271 152 1 Ci
271 152 1 Ci
272 152 1 Ci
274 152 1 Ci
275 152 1 Ci
275 152 1 Ci
276 152 1 Ci
278 152 1 Ci
278 152 1 Ci
279 152 1 Ci
281 152 1 Ci
281 152 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

87 144 3 Ci
87 144 3 Ci
88 144 3 Ci
90 144 3 Ci
90 144 3 Ci
91 144 3 Ci
93 144 3 Ci
93 144 3 Ci
94 144 3 Ci
96 144 3 Ci
96 144 3 Ci
97 144 3 Ci
98 128 3 Ci
100 128 3 Ci
100 129 3 Ci
101 129 3 Ci
102 129 3 Ci
103 130 3 Ci
103 130 3 Ci
104 131 3 Ci
105 132 3 Ci
106 133 3 Ci
106 134 3 Ci
107 135 3 Ci
108 137 3 Ci
109 139 3 Ci
110 141 3 Ci
110 144 3 Ci
111 57 3 Ci
112 59 3 Ci
113 61 3 Ci
113 63 3 Ci
114 64 3 Ci
115 65 3 Ci
116 65 3 Ci
116 65 3 Ci
117 65 3 Ci
118 65 3 Ci
119 64 3 Ci
120 63 3 Ci
120 62 3 Ci
121 60 3 Ci
122 59 3 Ci
123 57 3 Ci
123 55 3 Ci
124 143 3 Ci
125 141 3 Ci
126 140 3 Ci
126 139 3 Ci
127 138 3 Ci
128 137 3 Ci
129 137 3 Ci
129 136 3 Ci
130 144 3 Ci
131 144 3 Ci
133 144 3 Ci
133 144 3 Ci
134 144 3 Ci
136 144 3 Ci
136 144 3 Ci
137 144 3 Ci
139 144 3 Ci
139 144 3 Ci
140 144 3 Ci
142 144 3 Ci
143 144 3 Ci
143 144 3 Ci
144 144 3 Ci
146 144 3 Ci
146 144 3 Ci
147 144 3 Ci
149 144 3 Ci
149 144 3 Ci
150 144 3 Ci
152 144 3 Ci
153 144 3 Ci
153 144 3 Ci
154 144 3 Ci
156 144 3 Ci
156 144 3 Ci
157 144 3 Ci
159 144 3 Ci
159 144 3 Ci
160 144 3 Ci
162 144 3 Ci
162 144 3 Ci
163 144 3 Ci
164 144 3 Ci
166 144 3 Ci
166 144 3 Ci
167 144 3 Ci
169 144 3 Ci
169 144 3 Ci
170 144 3 Ci
172 144 3 Ci
172 144 3 Ci
173 144 3 Ci
175 144 3 Ci
176 144 3 Ci
176 144 3 Ci
177 144 3 Ci
179 144 3 Ci
179 144 3 Ci
180 144 3 Ci
182 144 3 Ci
182 144 3 Ci
183 144 3 Ci
185 144 3 Ci
186 144 3 Ci
186 144 3 Ci
187 144 3 Ci
189 144 3 Ci
189 144 3 Ci
190 144 3 Ci
192 144 3 Ci
192 144 3 Ci
193 144 3 Ci
195 144 3 Ci
195 144 3 Ci
196 144 3 Ci
197 144 3 Ci
199 144 3 Ci
199 144 3 Ci
200 144 3 Ci
202 144 3 Ci
202 144 3 Ci
203 144 3 Ci
205 144 3 Ci
205 144 3 Ci
206 144 3 Ci
208 144 3 Ci
209 144 3 Ci
209 144 3 Ci
210 144 3 Ci
212 144 3 Ci
212 144 3 Ci
213 144 3 Ci
215 144 3 Ci
215 144 3 Ci
216 144 3 Ci
218 144 3 Ci
219 144 3 Ci
219 144 3 Ci
220 144 3 Ci
222 144 3 Ci
222 144 3 Ci
223 144 3 Ci
225 144 3 Ci
225 144 3 Ci
226 144 3 Ci
228 144 3 Ci
228 144 3 Ci
229 144 3 Ci
230 144 3 Ci
232 144 3 Ci
232 144 3 Ci
233 144 3 Ci
235 144 3 Ci
235 144 3 Ci
236 144 3 Ci
238 144 3 Ci
238 144 3 Ci
239 144 3 Ci
241 144 3 Ci
242 144 3 Ci
242 144 3 Ci
243 144 3 Ci
245 144 3 Ci
245 144 3 Ci
246 144 3 Ci
248 144 3 Ci
248 144 3 Ci
249 144 3 Ci
251 144 3 Ci
252 144 3 Ci
252 144 3 Ci
253 144 3 Ci
255 144 3 Ci
255 144 3 Ci
256 144 3 Ci
258 144 3 Ci
258 144 3 Ci
259 144 3 Ci
261 144 3 Ci
261 144 3 Ci
262 144 3 Ci
263 144 3 Ci
265 144 3 Ci
265 144 3 Ci
266 144 3 Ci
268 144 3 Ci
268 144 3 Ci
269 144 3 Ci
271 144 3 Ci
271 144 3 Ci
272 144 3 Ci
274 144 3 Ci
275 144 3 Ci
275 144 3 Ci
276 144 3 Ci
278 144 3 Ci
278 144 3 Ci
279 144 3 Ci
281 144 3 Ci
281 144 3 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 349 40 Box Fill

0 40 78 120 Box Fill

271 40 78 120 Box Fill

0 160 349 39 Box Fill

1 1 1 SetBgColor
77 159 194 1 Box Fill

270 38 1 122 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 77 161 moveto
77 38 lineto
272 38 lineto
270 40 lineto
79 40 lineto
79 159 lineto
77 161 lineto
77 161  lineto closepath Fill
81 17 0 174 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(-4, +24\)) 81 0 13 DrawAdjText
EndText
9 17 0 87 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 122 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 157 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 193 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 228 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 263 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
87 165 263 165 LS
105 165 105 170 LS
87 165 87 175 LS
140 165 140 170 LS
122 165 122 175 LS
175 165 175 170 LS
157 165 157 175 LS
210 165 210 170 LS
193 165 193 175 LS
245 165 245 170 LS
228 165 228 175 LS
263 165 263 175 LS
9 17 0 54 152 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
54 17 0 32 126 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.0005) 54 0 13 DrawAdjText
EndText
45 17 0 36 100 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.001) 45 0 13 DrawAdjText
EndText
54 17 0 32 74 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.0015) 54 0 13 DrawAdjText
EndText
45 17 0 36 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
73 152 73 48 LS
73 139 68 139 LS
73 152 63 152 LS
73 113 68 113 LS
73 126 63 126 LS
73 87 68 87 LS
73 100 63 100 LS
73 61 68 61 LS
73 74 63 74 LS
73 48 63 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 38 379 303 414
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:13 1999)
%%Title: (/tmp/18.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:13 1999) show
10 20 moveto
(File: /tmp/18.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
50 500 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 213 4 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 48 moveto
 78 48 lineto
 79 48 lineto
 80 48 lineto
 82 48 lineto
 83 48 lineto
 83 48 lineto
 84 48 lineto
 85 48 lineto
 86 48 lineto
 87 48 lineto
 88 48 lineto
 88 48 lineto
 89 48 lineto
 90 48 lineto
 91 48 lineto
 93 48 lineto
 94 48 lineto
 94 48 lineto
 95 48 lineto
 96 48 lineto
 98 48 lineto
 99 48 lineto
 99 48 lineto
 100 48 lineto
 101 48 lineto
 102 48 lineto
 104 48 lineto
 105 48 lineto
 105 48 lineto
 106 48 lineto
 107 48 lineto
 108 48 lineto
 109 48 lineto
 110 48 lineto
 110 48 lineto
 111 48 lineto
 112 48 lineto
 113 48 lineto
 115 48 lineto
 116 48 lineto
 116 48 lineto
 117 48 lineto
 118 48 lineto
 120 49 lineto
 121 49 lineto
 121 49 lineto
 122 49 lineto
 123 49 lineto
 124 49 lineto
 126 49 lineto
 127 49 lineto
 127 49 lineto
 128 49 lineto
 129 49 lineto
 131 49 lineto
 132 49 lineto
 132 49 lineto
 133 49 lineto
 134 49 lineto
 135 49 lineto
 137 49 lineto
 138 49 lineto
 138 49 lineto
 139 49 lineto
 140 49 lineto
 142 49 lineto
 143 49 lineto
 143 49 lineto
 144 49 lineto
 145 49 lineto
 146 49 lineto
 148 49 lineto
 149 49 lineto
 149 49 lineto
 150 49 lineto
 151 49 lineto
 153 49 lineto
 154 49 lineto
 154 49 lineto
 155 49 lineto
 156 49 lineto
 157 49 lineto
 159 49 lineto
 160 49 lineto
 160 49 lineto
 161 49 lineto
 162 49 lineto
 164 49 lineto
 165 49 lineto
 165 49 lineto
 166 49 lineto
 167 49 lineto
 168 49 lineto
 170 49 lineto
 171 49 lineto
 171 49 lineto
 172 49 lineto
 173 49 lineto
 175 49 lineto
 176 49 lineto
 176 49 lineto
 177 49 lineto
 178 49 lineto
 179 49 lineto
 181 49 lineto
 182 49 lineto
 182 49 lineto
 183 49 lineto
 184 49 lineto
 186 49 lineto
 187 49 lineto
 187 49 lineto
 188 49 lineto
 189 49 lineto
 190 49 lineto
 192 49 lineto
 193 49 lineto
 193 49 lineto
 194 49 lineto
 195 49 lineto
 197 49 lineto
 198 49 lineto
 198 49 lineto
 199 49 lineto
 200 49 lineto
 201 49 lineto
 203 49 lineto
 204 49 lineto
 204 49 lineto
 205 49 lineto
 206 49 lineto
 208 49 lineto
 209 49 lineto
 209 49 lineto
 210 49 lineto
 211 49 lineto
 212 49 lineto
 214 49 lineto
 215 49 lineto
 215 49 lineto
 216 49 lineto
 217 49 lineto
 219 49 lineto
 220 49 lineto
 220 49 lineto
 221 49 lineto
 222 49 lineto
 223 49 lineto
 225 49 lineto
 226 49 lineto
 226 49 lineto
 227 49 lineto
 228 49 lineto
 230 49 lineto
 231 49 lineto
 231 49 lineto
 232 49 lineto
 233 49 lineto
 234 49 lineto
 236 49 lineto
 237 49 lineto
 237 49 lineto
 238 49 lineto
 239 49 lineto
 241 49 lineto
 242 49 lineto
 242 49 lineto
 243 49 lineto
 244 49 lineto
 245 49 lineto
 247 49 lineto
 248 49 lineto
 248 49 lineto
 249 49 lineto
 250 49 lineto
 252 49 lineto
 253 49 lineto
 253 49 lineto
 254 49 lineto
 255 49 lineto
 256 49 lineto
 258 49 lineto
 259 49 lineto
 259 49 lineto
 260 49 lineto
 261 49 lineto
 263 49 lineto
 264 49 lineto
 264 49 lineto
 265 49 lineto
 266 49 lineto
 268 49 lineto
 269 49 lineto
 270 49 lineto
 270 49 lineto
 271 49 lineto
 272 49 lineto
 274 49 lineto
 275 49 lineto
 275 49 lineto
 276 49 lineto
 277 49 lineto
 279 49 lineto
 280 49 lineto
 281 49 lineto
 281 49 lineto
 282 49 lineto
 283 49 lineto
 285 49 lineto
 286 49 lineto
 286 49 lineto
 287 49 lineto
 288 49 lineto
 290 49 lineto
 291 49 lineto
 292 49 lineto
 292 49 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 48 1 Ci
78 48 1 Ci
79 48 1 Ci
80 48 1 Ci
82 48 1 Ci
83 48 1 Ci
83 48 1 Ci
84 48 1 Ci
85 48 1 Ci
86 48 1 Ci
87 48 1 Ci
88 48 1 Ci
88 48 1 Ci
89 48 1 Ci
90 48 1 Ci
91 48 1 Ci
93 48 1 Ci
94 48 1 Ci
94 48 1 Ci
95 48 1 Ci
96 48 1 Ci
98 48 1 Ci
99 48 1 Ci
99 48 1 Ci
100 48 1 Ci
101 48 1 Ci
102 48 1 Ci
104 48 1 Ci
105 48 1 Ci
105 48 1 Ci
106 48 1 Ci
107 48 1 Ci
108 48 1 Ci
109 48 1 Ci
110 48 1 Ci
110 48 1 Ci
111 48 1 Ci
112 48 1 Ci
113 48 1 Ci
115 48 1 Ci
116 48 1 Ci
116 48 1 Ci
117 48 1 Ci
118 48 1 Ci
120 49 1 Ci
121 49 1 Ci
121 49 1 Ci
122 49 1 Ci
123 49 1 Ci
124 49 1 Ci
126 49 1 Ci
127 49 1 Ci
127 49 1 Ci
128 49 1 Ci
129 49 1 Ci
131 49 1 Ci
132 49 1 Ci
132 49 1 Ci
133 49 1 Ci
134 49 1 Ci
135 49 1 Ci
137 49 1 Ci
138 49 1 Ci
138 49 1 Ci
139 49 1 Ci
140 49 1 Ci
142 49 1 Ci
143 49 1 Ci
143 49 1 Ci
144 49 1 Ci
145 49 1 Ci
146 49 1 Ci
148 49 1 Ci
149 49 1 Ci
149 49 1 Ci
150 49 1 Ci
151 49 1 Ci
153 49 1 Ci
154 49 1 Ci
154 49 1 Ci
155 49 1 Ci
156 49 1 Ci
157 49 1 Ci
159 49 1 Ci
160 49 1 Ci
160 49 1 Ci
161 49 1 Ci
162 49 1 Ci
164 49 1 Ci
165 49 1 Ci
165 49 1 Ci
166 49 1 Ci
167 49 1 Ci
168 49 1 Ci
170 49 1 Ci
171 49 1 Ci
171 49 1 Ci
172 49 1 Ci
173 49 1 Ci
175 49 1 Ci
176 49 1 Ci
176 49 1 Ci
177 49 1 Ci
178 49 1 Ci
179 49 1 Ci
181 49 1 Ci
182 49 1 Ci
182 49 1 Ci
183 49 1 Ci
184 49 1 Ci
186 49 1 Ci
187 49 1 Ci
187 49 1 Ci
188 49 1 Ci
189 49 1 Ci
190 49 1 Ci
192 49 1 Ci
193 49 1 Ci
193 49 1 Ci
194 49 1 Ci
195 49 1 Ci
197 49 1 Ci
198 49 1 Ci
198 49 1 Ci
199 49 1 Ci
200 49 1 Ci
201 49 1 Ci
203 49 1 Ci
204 49 1 Ci
204 49 1 Ci
205 49 1 Ci
206 49 1 Ci
208 49 1 Ci
209 49 1 Ci
209 49 1 Ci
210 49 1 Ci
211 49 1 Ci
212 49 1 Ci
214 49 1 Ci
215 49 1 Ci
215 49 1 Ci
216 49 1 Ci
217 49 1 Ci
219 49 1 Ci
220 49 1 Ci
220 49 1 Ci
221 49 1 Ci
222 49 1 Ci
223 49 1 Ci
225 49 1 Ci
226 49 1 Ci
226 49 1 Ci
227 49 1 Ci
228 49 1 Ci
230 49 1 Ci
231 49 1 Ci
231 49 1 Ci
232 49 1 Ci
233 49 1 Ci
234 49 1 Ci
236 49 1 Ci
237 49 1 Ci
237 49 1 Ci
238 49 1 Ci
239 49 1 Ci
241 49 1 Ci
242 49 1 Ci
242 49 1 Ci
243 49 1 Ci
244 49 1 Ci
245 49 1 Ci
247 49 1 Ci
248 49 1 Ci
248 49 1 Ci
249 49 1 Ci
250 49 1 Ci
252 49 1 Ci
253 49 1 Ci
253 49 1 Ci
254 49 1 Ci
255 49 1 Ci
256 49 1 Ci
258 49 1 Ci
259 49 1 Ci
259 49 1 Ci
260 49 1 Ci
261 49 1 Ci
263 49 1 Ci
264 49 1 Ci
264 49 1 Ci
265 49 1 Ci
266 49 1 Ci
268 49 1 Ci
269 49 1 Ci
270 49 1 Ci
270 49 1 Ci
271 49 1 Ci
272 49 1 Ci
274 49 1 Ci
275 49 1 Ci
275 49 1 Ci
276 49 1 Ci
277 49 1 Ci
279 49 1 Ci
280 49 1 Ci
281 49 1 Ci
281 49 1 Ci
282 49 1 Ci
283 49 1 Ci
285 49 1 Ci
286 49 1 Ci
286 49 1 Ci
287 49 1 Ci
288 49 1 Ci
290 49 1 Ci
291 49 1 Ci
292 49 1 Ci
292 49 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 48 1 Ci
78 48 1 Ci
79 48 1 Ci
80 48 1 Ci
82 48 1 Ci
83 48 1 Ci
83 48 1 Ci
84 48 1 Ci
85 48 1 Ci
87 48 1 Ci
88 48 1 Ci
88 48 1 Ci
89 48 1 Ci
90 48 1 Ci
91 48 1 Ci
92 48 1 Ci
93 48 1 Ci
94 48 1 Ci
94 48 1 Ci
95 48 1 Ci
96 48 1 Ci
98 48 1 Ci
99 48 1 Ci
99 48 1 Ci
100 48 1 Ci
101 48 1 Ci
102 48 1 Ci
104 48 1 Ci
105 48 1 Ci
105 48 1 Ci
106 48 1 Ci
107 48 1 Ci
109 48 1 Ci
110 48 1 Ci
110 48 1 Ci
111 48 1 Ci
112 48 1 Ci
113 48 1 Ci
115 48 1 Ci
116 48 1 Ci
116 48 1 Ci
117 48 1 Ci
118 48 1 Ci
119 48 1 Ci
120 48 1 Ci
121 48 1 Ci
121 48 1 Ci
122 48 1 Ci
123 48 1 Ci
124 48 1 Ci
126 48 1 Ci
127 48 1 Ci
127 48 1 Ci
128 48 1 Ci
129 48 1 Ci
131 48 1 Ci
132 48 1 Ci
132 48 1 Ci
133 48 1 Ci
134 48 1 Ci
135 48 1 Ci
137 48 1 Ci
138 48 1 Ci
138 48 1 Ci
139 48 1 Ci
140 48 1 Ci
142 48 1 Ci
143 48 1 Ci
143 48 1 Ci
144 48 1 Ci
145 48 1 Ci
146 48 1 Ci
148 48 1 Ci
149 48 1 Ci
149 48 1 Ci
150 48 1 Ci
151 48 1 Ci
153 48 1 Ci
154 48 1 Ci
154 48 1 Ci
155 48 1 Ci
156 48 1 Ci
157 48 1 Ci
159 48 1 Ci
160 48 1 Ci
160 48 1 Ci
161 48 1 Ci
162 48 1 Ci
164 48 1 Ci
165 48 1 Ci
165 48 1 Ci
166 48 1 Ci
167 48 1 Ci
168 48 1 Ci
170 48 1 Ci
171 48 1 Ci
171 48 1 Ci
172 48 1 Ci
173 48 1 Ci
175 48 1 Ci
176 48 1 Ci
176 48 1 Ci
177 48 1 Ci
178 48 1 Ci
179 48 1 Ci
181 48 1 Ci
182 48 1 Ci
182 48 1 Ci
183 48 1 Ci
184 48 1 Ci
186 48 1 Ci
187 48 1 Ci
187 48 1 Ci
188 48 1 Ci
189 48 1 Ci
190 48 1 Ci
192 48 1 Ci
193 48 1 Ci
193 48 1 Ci
194 48 1 Ci
195 48 1 Ci
197 48 1 Ci
198 48 1 Ci
198 48 1 Ci
199 48 1 Ci
200 48 1 Ci
201 48 1 Ci
203 48 1 Ci
204 48 1 Ci
204 48 1 Ci
205 48 1 Ci
206 48 1 Ci
208 48 1 Ci
209 48 1 Ci
209 48 1 Ci
210 48 1 Ci
211 48 1 Ci
212 48 1 Ci
214 48 1 Ci
215 48 1 Ci
215 48 1 Ci
216 48 1 Ci
217 48 1 Ci
219 48 1 Ci
220 48 1 Ci
220 48 1 Ci
221 48 1 Ci
222 48 1 Ci
223 48 1 Ci
225 48 1 Ci
226 48 1 Ci
226 48 1 Ci
227 48 1 Ci
228 48 1 Ci
230 48 1 Ci
231 48 1 Ci
231 48 1 Ci
232 48 1 Ci
233 48 1 Ci
234 48 1 Ci
236 48 1 Ci
237 48 1 Ci
237 48 1 Ci
238 48 1 Ci
239 48 1 Ci
241 48 1 Ci
242 48 1 Ci
242 48 1 Ci
243 48 1 Ci
244 48 1 Ci
245 48 1 Ci
247 48 1 Ci
248 48 1 Ci
248 48 1 Ci
249 48 1 Ci
250 48 1 Ci
252 48 1 Ci
253 48 1 Ci
253 48 1 Ci
254 48 1 Ci
255 48 1 Ci
256 48 1 Ci
258 48 1 Ci
259 48 1 Ci
259 48 1 Ci
260 48 1 Ci
261 48 1 Ci
263 48 1 Ci
264 48 1 Ci
264 48 1 Ci
265 48 1 Ci
266 48 1 Ci
268 48 1 Ci
269 48 1 Ci
270 48 1 Ci
270 48 1 Ci
271 48 1 Ci
272 48 1 Ci
274 48 1 Ci
275 48 1 Ci
275 48 1 Ci
276 48 1 Ci
277 48 1 Ci
279 48 1 Ci
280 48 1 Ci
281 48 1 Ci
281 48 1 Ci
282 48 1 Ci
283 48 1 Ci
285 48 1 Ci
286 48 1 Ci
286 48 1 Ci
287 48 1 Ci
288 48 1 Ci
290 48 1 Ci
291 48 1 Ci
292 48 1 Ci
292 48 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 349 40 Box Fill

0 40 69 1 Box Fill

280 40 69 1 Box Fill

0 41 349 39 Box Fill

1 1 1 SetBgColor
68 40 212 1 Box Fill

279 38 1 3 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 42 moveto
68 38 lineto
281 38 lineto
279 40 lineto
70 40 lineto
70 40 lineto
68 42 lineto
68 42  lineto closepath Fill
81 17 0 174 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(-2, +26\)) 81 0 13 DrawAdjText
EndText
9 17 0 78 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 117 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 156 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 194 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 233 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 272 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 46 272 46 LS
97 46 97 51 LS
78 46 78 56 LS
136 46 136 51 LS
117 46 117 56 LS
175 46 175 51 LS
156 46 156 56 LS
214 46 214 51 LS
194 46 194 56 LS
253 46 253 51 LS
233 46 233 56 LS
272 46 272 56 LS
9 17 0 45 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.004) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.006) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.008) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 49 64 48 LS
64 49 59 49 LS
64 49 54 49 LS
64 49 59 49 LS
64 49 54 49 LS
64 48 59 48 LS
64 49 54 49 LS
64 48 59 48 LS
64 48 54 48 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 38 568 303 224
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:13 1999)
%%Title: (/tmp/19.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:13 1999) show
10 20 moveto
(File: /tmp/19.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
50 750 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 213 4 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 48 moveto
 78 48 lineto
 79 48 lineto
 80 48 lineto
 82 48 lineto
 83 48 lineto
 83 48 lineto
 84 48 lineto
 85 48 lineto
 87 48 lineto
 88 48 lineto
 88 48 lineto
 89 48 lineto
 90 48 lineto
 91 48 lineto
 93 48 lineto
 94 48 lineto
 94 48 lineto
 95 48 lineto
 96 48 lineto
 98 48 lineto
 99 48 lineto
 99 48 lineto
 100 48 lineto
 101 48 lineto
 102 48 lineto
 104 48 lineto
 105 48 lineto
 105 48 lineto
 106 48 lineto
 107 48 lineto
 109 49 lineto
 110 49 lineto
 110 49 lineto
 111 49 lineto
 112 49 lineto
 113 49 lineto
 115 49 lineto
 116 49 lineto
 116 49 lineto
 117 49 lineto
 118 49 lineto
 120 49 lineto
 121 49 lineto
 121 49 lineto
 122 49 lineto
 123 49 lineto
 124 49 lineto
 126 49 lineto
 127 49 lineto
 127 49 lineto
 128 49 lineto
 129 49 lineto
 131 49 lineto
 132 49 lineto
 132 49 lineto
 133 49 lineto
 134 49 lineto
 135 49 lineto
 137 49 lineto
 138 49 lineto
 138 49 lineto
 139 49 lineto
 140 49 lineto
 142 49 lineto
 143 49 lineto
 143 49 lineto
 144 49 lineto
 145 49 lineto
 146 49 lineto
 148 49 lineto
 149 49 lineto
 149 49 lineto
 150 49 lineto
 151 49 lineto
 153 49 lineto
 154 49 lineto
 154 49 lineto
 155 49 lineto
 156 49 lineto
 157 49 lineto
 159 49 lineto
 160 49 lineto
 160 49 lineto
 161 49 lineto
 162 49 lineto
 164 49 lineto
 165 49 lineto
 165 49 lineto
 166 49 lineto
 167 49 lineto
 168 49 lineto
 170 49 lineto
 171 49 lineto
 171 49 lineto
 172 49 lineto
 173 49 lineto
 175 49 lineto
 176 49 lineto
 176 49 lineto
 177 49 lineto
 178 49 lineto
 179 49 lineto
 181 49 lineto
 182 49 lineto
 182 49 lineto
 183 49 lineto
 184 49 lineto
 186 49 lineto
 187 49 lineto
 187 49 lineto
 188 49 lineto
 189 49 lineto
 190 49 lineto
 192 49 lineto
 193 49 lineto
 193 49 lineto
 194 49 lineto
 195 49 lineto
 197 49 lineto
 198 49 lineto
 198 49 lineto
 199 49 lineto
 200 49 lineto
 201 49 lineto
 203 49 lineto
 204 49 lineto
 204 49 lineto
 205 49 lineto
 206 49 lineto
 208 49 lineto
 209 49 lineto
 209 49 lineto
 210 49 lineto
 211 49 lineto
 212 49 lineto
 214 49 lineto
 215 49 lineto
 215 49 lineto
 216 49 lineto
 217 49 lineto
 219 49 lineto
 220 49 lineto
 220 49 lineto
 221 49 lineto
 222 49 lineto
 223 49 lineto
 225 49 lineto
 226 49 lineto
 226 49 lineto
 227 49 lineto
 228 49 lineto
 230 49 lineto
 231 49 lineto
 231 49 lineto
 232 49 lineto
 233 49 lineto
 234 49 lineto
 236 49 lineto
 237 49 lineto
 237 49 lineto
 238 49 lineto
 239 49 lineto
 241 49 lineto
 242 49 lineto
 242 49 lineto
 243 49 lineto
 244 49 lineto
 245 49 lineto
 247 49 lineto
 248 49 lineto
 248 49 lineto
 249 49 lineto
 250 49 lineto
 252 49 lineto
 253 49 lineto
 253 49 lineto
 254 49 lineto
 255 49 lineto
 256 49 lineto
 258 49 lineto
 259 49 lineto
 259 49 lineto
 260 49 lineto
 261 49 lineto
 263 49 lineto
 264 49 lineto
 264 49 lineto
 265 49 lineto
 266 49 lineto
 268 49 lineto
 269 49 lineto
 270 49 lineto
 270 49 lineto
 271 49 lineto
 272 49 lineto
 274 49 lineto
 275 49 lineto
 275 49 lineto
 276 49 lineto
 277 49 lineto
 279 49 lineto
 280 49 lineto
 281 49 lineto
 281 49 lineto
 282 49 lineto
 283 49 lineto
 285 49 lineto
 286 49 lineto
 286 49 lineto
 287 49 lineto
 288 49 lineto
 290 49 lineto
 291 49 lineto
 292 49 lineto
 292 49 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 48 1 Ci
78 48 1 Ci
79 48 1 Ci
80 48 1 Ci
82 48 1 Ci
83 48 1 Ci
83 48 1 Ci
84 48 1 Ci
85 48 1 Ci
87 48 1 Ci
88 48 1 Ci
88 48 1 Ci
89 48 1 Ci
90 48 1 Ci
91 48 1 Ci
93 48 1 Ci
94 48 1 Ci
94 48 1 Ci
95 48 1 Ci
96 48 1 Ci
98 48 1 Ci
99 48 1 Ci
99 48 1 Ci
100 48 1 Ci
101 48 1 Ci
102 48 1 Ci
104 48 1 Ci
105 48 1 Ci
105 48 1 Ci
106 48 1 Ci
107 48 1 Ci
109 49 1 Ci
110 49 1 Ci
110 49 1 Ci
111 49 1 Ci
112 49 1 Ci
113 49 1 Ci
115 49 1 Ci
116 49 1 Ci
116 49 1 Ci
117 49 1 Ci
118 49 1 Ci
120 49 1 Ci
121 49 1 Ci
121 49 1 Ci
122 49 1 Ci
123 49 1 Ci
124 49 1 Ci
126 49 1 Ci
127 49 1 Ci
127 49 1 Ci
128 49 1 Ci
129 49 1 Ci
131 49 1 Ci
132 49 1 Ci
132 49 1 Ci
133 49 1 Ci
134 49 1 Ci
135 49 1 Ci
137 49 1 Ci
138 49 1 Ci
138 49 1 Ci
139 49 1 Ci
140 49 1 Ci
142 49 1 Ci
143 49 1 Ci
143 49 1 Ci
144 49 1 Ci
145 49 1 Ci
146 49 1 Ci
148 49 1 Ci
149 49 1 Ci
149 49 1 Ci
150 49 1 Ci
151 49 1 Ci
153 49 1 Ci
154 49 1 Ci
154 49 1 Ci
155 49 1 Ci
156 49 1 Ci
157 49 1 Ci
159 49 1 Ci
160 49 1 Ci
160 49 1 Ci
161 49 1 Ci
162 49 1 Ci
164 49 1 Ci
165 49 1 Ci
165 49 1 Ci
166 49 1 Ci
167 49 1 Ci
168 49 1 Ci
170 49 1 Ci
171 49 1 Ci
171 49 1 Ci
172 49 1 Ci
173 49 1 Ci
175 49 1 Ci
176 49 1 Ci
176 49 1 Ci
177 49 1 Ci
178 49 1 Ci
179 49 1 Ci
181 49 1 Ci
182 49 1 Ci
182 49 1 Ci
183 49 1 Ci
184 49 1 Ci
186 49 1 Ci
187 49 1 Ci
187 49 1 Ci
188 49 1 Ci
189 49 1 Ci
190 49 1 Ci
192 49 1 Ci
193 49 1 Ci
193 49 1 Ci
194 49 1 Ci
195 49 1 Ci
197 49 1 Ci
198 49 1 Ci
198 49 1 Ci
199 49 1 Ci
200 49 1 Ci
201 49 1 Ci
203 49 1 Ci
204 49 1 Ci
204 49 1 Ci
205 49 1 Ci
206 49 1 Ci
208 49 1 Ci
209 49 1 Ci
209 49 1 Ci
210 49 1 Ci
211 49 1 Ci
212 49 1 Ci
214 49 1 Ci
215 49 1 Ci
215 49 1 Ci
216 49 1 Ci
217 49 1 Ci
219 49 1 Ci
220 49 1 Ci
220 49 1 Ci
221 49 1 Ci
222 49 1 Ci
223 49 1 Ci
225 49 1 Ci
226 49 1 Ci
226 49 1 Ci
227 49 1 Ci
228 49 1 Ci
230 49 1 Ci
231 49 1 Ci
231 49 1 Ci
232 49 1 Ci
233 49 1 Ci
234 49 1 Ci
236 49 1 Ci
237 49 1 Ci
237 49 1 Ci
238 49 1 Ci
239 49 1 Ci
241 49 1 Ci
242 49 1 Ci
242 49 1 Ci
243 49 1 Ci
244 49 1 Ci
245 49 1 Ci
247 49 1 Ci
248 49 1 Ci
248 49 1 Ci
249 49 1 Ci
250 49 1 Ci
252 49 1 Ci
253 49 1 Ci
253 49 1 Ci
254 49 1 Ci
255 49 1 Ci
256 49 1 Ci
258 49 1 Ci
259 49 1 Ci
259 49 1 Ci
260 49 1 Ci
261 49 1 Ci
263 49 1 Ci
264 49 1 Ci
264 49 1 Ci
265 49 1 Ci
266 49 1 Ci
268 49 1 Ci
269 49 1 Ci
270 49 1 Ci
270 49 1 Ci
271 49 1 Ci
272 49 1 Ci
274 49 1 Ci
275 49 1 Ci
275 49 1 Ci
276 49 1 Ci
277 49 1 Ci
279 49 1 Ci
280 49 1 Ci
281 49 1 Ci
281 49 1 Ci
282 49 1 Ci
283 49 1 Ci
285 49 1 Ci
286 49 1 Ci
286 49 1 Ci
287 49 1 Ci
288 49 1 Ci
290 49 1 Ci
291 49 1 Ci
292 49 1 Ci
292 49 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 48 1 Ci
78 48 1 Ci
79 48 1 Ci
80 48 1 Ci
82 48 1 Ci
83 48 1 Ci
83 48 1 Ci
84 48 1 Ci
85 48 1 Ci
87 48 1 Ci
88 48 1 Ci
88 48 1 Ci
89 48 1 Ci
90 48 1 Ci
91 48 1 Ci
93 48 1 Ci
94 48 1 Ci
94 48 1 Ci
95 48 1 Ci
96 48 1 Ci
98 48 1 Ci
99 48 1 Ci
99 48 1 Ci
100 48 1 Ci
101 48 1 Ci
102 48 1 Ci
104 48 1 Ci
105 48 1 Ci
105 48 1 Ci
106 48 1 Ci
107 48 1 Ci
109 48 1 Ci
110 48 1 Ci
110 48 1 Ci
111 48 1 Ci
112 48 1 Ci
113 48 1 Ci
115 48 1 Ci
116 48 1 Ci
116 48 1 Ci
117 48 1 Ci
118 48 1 Ci
120 48 1 Ci
121 48 1 Ci
121 48 1 Ci
122 48 1 Ci
123 48 1 Ci
124 48 1 Ci
126 48 1 Ci
127 48 1 Ci
127 48 1 Ci
128 48 1 Ci
129 48 1 Ci
131 48 1 Ci
132 48 1 Ci
132 48 1 Ci
133 48 1 Ci
134 48 1 Ci
135 48 1 Ci
137 48 1 Ci
138 48 1 Ci
138 48 1 Ci
139 48 1 Ci
140 48 1 Ci
142 48 1 Ci
143 48 1 Ci
143 48 1 Ci
144 48 1 Ci
145 48 1 Ci
146 48 1 Ci
148 48 1 Ci
149 48 1 Ci
149 48 1 Ci
150 48 1 Ci
151 48 1 Ci
153 48 1 Ci
154 48 1 Ci
154 48 1 Ci
155 48 1 Ci
156 48 1 Ci
157 48 1 Ci
159 48 1 Ci
160 48 1 Ci
160 48 1 Ci
161 48 1 Ci
162 48 1 Ci
164 48 1 Ci
165 48 1 Ci
165 48 1 Ci
166 48 1 Ci
167 48 1 Ci
168 48 1 Ci
170 48 1 Ci
171 48 1 Ci
171 48 1 Ci
172 48 1 Ci
173 48 1 Ci
175 48 1 Ci
176 48 1 Ci
176 48 1 Ci
177 48 1 Ci
178 48 1 Ci
179 48 1 Ci
181 48 1 Ci
182 48 1 Ci
182 48 1 Ci
183 48 1 Ci
184 48 1 Ci
186 48 1 Ci
187 48 1 Ci
187 48 1 Ci
188 48 1 Ci
189 48 1 Ci
190 48 1 Ci
192 48 1 Ci
193 48 1 Ci
193 48 1 Ci
194 48 1 Ci
195 48 1 Ci
197 48 1 Ci
198 48 1 Ci
198 48 1 Ci
199 48 1 Ci
200 48 1 Ci
201 48 1 Ci
203 48 1 Ci
204 48 1 Ci
204 48 1 Ci
205 48 1 Ci
206 48 1 Ci
208 48 1 Ci
209 48 1 Ci
209 48 1 Ci
210 48 1 Ci
211 48 1 Ci
212 48 1 Ci
214 48 1 Ci
215 48 1 Ci
215 48 1 Ci
216 48 1 Ci
217 48 1 Ci
219 48 1 Ci
220 48 1 Ci
220 48 1 Ci
221 48 1 Ci
222 48 1 Ci
223 48 1 Ci
225 48 1 Ci
226 48 1 Ci
226 48 1 Ci
227 48 1 Ci
228 48 1 Ci
230 48 1 Ci
231 48 1 Ci
231 48 1 Ci
232 48 1 Ci
233 48 1 Ci
234 48 1 Ci
236 48 1 Ci
237 48 1 Ci
237 48 1 Ci
238 48 1 Ci
239 48 1 Ci
241 48 1 Ci
242 48 1 Ci
242 48 1 Ci
243 48 1 Ci
244 48 1 Ci
245 48 1 Ci
247 48 1 Ci
248 48 1 Ci
248 48 1 Ci
249 48 1 Ci
250 48 1 Ci
252 48 1 Ci
253 48 1 Ci
253 48 1 Ci
254 48 1 Ci
255 48 1 Ci
256 48 1 Ci
258 48 1 Ci
259 48 1 Ci
259 48 1 Ci
260 48 1 Ci
261 48 1 Ci
263 48 1 Ci
264 48 1 Ci
264 48 1 Ci
265 48 1 Ci
266 48 1 Ci
268 48 1 Ci
269 48 1 Ci
270 48 1 Ci
270 48 1 Ci
271 48 1 Ci
272 48 1 Ci
274 48 1 Ci
275 48 1 Ci
275 48 1 Ci
276 48 1 Ci
277 48 1 Ci
279 48 1 Ci
280 48 1 Ci
281 48 1 Ci
281 48 1 Ci
282 48 1 Ci
283 48 1 Ci
285 48 1 Ci
286 48 1 Ci
286 48 1 Ci
287 48 1 Ci
288 48 1 Ci
290 48 1 Ci
291 48 1 Ci
292 48 1 Ci
292 48 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 349 40 Box Fill

0 40 69 1 Box Fill

280 40 69 1 Box Fill

0 41 349 39 Box Fill

1 1 1 SetBgColor
68 40 212 1 Box Fill

279 38 1 3 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 42 moveto
68 38 lineto
281 38 lineto
279 40 lineto
70 40 lineto
70 40 lineto
68 42 lineto
68 42  lineto closepath Fill
81 17 0 174 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+0, +28\)) 81 0 13 DrawAdjText
EndText
9 17 0 78 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 117 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 156 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 194 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 233 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 272 68 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 46 272 46 LS
97 46 97 51 LS
78 46 78 56 LS
136 46 136 51 LS
117 46 117 56 LS
175 46 175 51 LS
156 46 156 56 LS
214 46 214 51 LS
194 46 194 56 LS
253 46 253 51 LS
233 46 233 56 LS
272 46 272 56 LS
9 17 0 45 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 49 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.004) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.006) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.008) 45 0 13 DrawAdjText
EndText
36 17 0 32 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.01) 36 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 49 64 48 LS
64 49 59 49 LS
64 49 54 49 LS
64 49 59 49 LS
64 49 54 49 LS
64 49 59 49 LS
64 49 54 49 LS
64 48 59 48 LS
64 48 54 48 LS
64 48 59 48 LS
64 48 54 48 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 303 0 309 152
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:13 1999)
%%Title: (/tmp/20.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:13 1999) show
10 20 moveto
(File: /tmp/20.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
400 0 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 4 123 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 49 moveto
 78 51 lineto
 78 54 lineto
 78 57 lineto
 78 61 lineto
 78 65 lineto
 78 71 lineto
 78 77 lineto
 78 83 lineto
 78 90 lineto
 78 97 lineto
 78 104 lineto
 78 111 lineto
 78 118 lineto
 78 125 lineto
 78 131 lineto
 78 137 lineto
 78 152 lineto
 78 152 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 49 1 Ci
78 51 1 Ci
78 54 1 Ci
78 57 1 Ci
78 61 1 Ci
78 65 1 Ci
78 71 1 Ci
78 77 1 Ci
78 83 1 Ci
78 90 1 Ci
78 97 1 Ci
78 104 1 Ci
78 111 1 Ci
78 118 1 Ci
78 125 1 Ci
78 131 1 Ci
78 137 1 Ci
78 152 1 Ci
78 152 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 119 1 Ci
78 118 1 Ci
78 117 1 Ci
78 115 1 Ci
78 144 1 Ci
78 144 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 7 40 Box Fill

0 40 69 120 Box Fill

71 40 69 120 Box Fill

0 160 7 39 Box Fill

1 1 1 SetBgColor
68 159 3 1 Box Fill

70 38 1 122 Box Fill

0.6 0.6 0.6 SetBgColor
newpath 68 161 moveto
68 38 lineto
72 38 lineto
70 40 lineto
70 40 lineto
70 159 lineto
68 161 lineto
68 161  lineto closepath Fill
81 17 0 70 19 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(\(+2, +30\)) 81 0 13 DrawAdjText
EndText
9 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
36 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.02) 36 0 13 DrawAdjText
EndText
36 17 0 78 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.04) 36 0 13 DrawAdjText
EndText
36 17 0 79 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.06) 36 0 13 DrawAdjText
EndText
36 17 0 79 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.08) 36 0 13 DrawAdjText
EndText
27 17 0 79 187 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.1) 27 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
78 165 79 165 LS
78 165 78 170 LS
78 165 78 175 LS
78 165 78 170 LS
78 165 78 175 LS
79 165 79 170 LS
78 165 78 175 LS
79 165 79 170 LS
79 165 79 175 LS
79 165 79 170 LS
79 165 79 175 LS
79 165 79 175 LS
9 17 0 45 152 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0) 9 0 13 DrawAdjText
EndText
45 17 0 27 126 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.002) 45 0 13 DrawAdjText
EndText
45 17 0 27 100 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.004) 45 0 13 DrawAdjText
EndText
45 17 0 27 74 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.006) 45 0 13 DrawAdjText
EndText
45 17 0 27 48 BeginText
13 /Helvetica-9x17 SetFont
0 0 0 SetFgColor
(0.008) 45 0 13 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
64 152 64 48 LS
64 139 59 139 LS
64 152 54 152 LS
64 113 59 113 LS
64 126 54 126 LS
64 87 59 87 LS
64 100 54 100 LS
64 61 59 61 LS
64 74 54 74 LS
64 48 54 48 LS
grestore
 %!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 303 189 309 341
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Thu Nov  4 12:26:13 1999)
%%Title: (/tmp/21.llDataPrint)
%%DocumentNeededResources: font Helvetica Courier
%%EndComments

% including file "/home/people/tkys/Eos/util/HP/lib/blt2.4/bltGraph.pro"

%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
 
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It's typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
  % Turn the path into a clip region that we can then cover with
  % lots of images corresponding to the stipple pattern.  Warning:
  % some Postscript interpreters get errors during strokepath for
  % dashed lines.  If this happens, turn off dashes and try again.

  gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
      2 index 5 index 3 index {
	% Stack now: width height string y1 y2 x y

	gsave
	  1 index exch translate
	  5 index 5 index true matrix {3 index} imagemask
	grestore
      } for
      pop
    } for
    pop pop pop pop pop
  grestore
  newpath
} bind def

/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
}def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  3 copy pop
  moveto newpath
  2 div 0 360 arc
  closepath DrawSymbolProc
} def

% Square
/Sq {
  % Stack: x y symbolSize
  dup dup 2 div dup
  6 -1 roll exch sub exch
  5 -1 roll exch sub 4 -2 roll Box
  DrawSymbolProc
} def

% Line
/Li {
  % Stack: x y symbolSize
  3 1 roll exch 3 -1 roll 2 div 3 copy
  newpath
  sub exch moveto add exch lineto
  stroke
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def
% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def
    
%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

8 /Helvetica SetFont
10 30 moveto
(Date: Thu Nov  4 12:26:13 1999) show
10 20 moveto
(File: /tmp/21.llDataPrint) show
10 10 moveto
(Created by: mimeyu50@tkyemgh1.phys.s.u-tokyo.ac.jp) show
0 0 moveto
% Transform coordinate system to use X11 coordinates

% Flip the y-axis by changing the origin and reversing the scale,
% making the origin the upper left corner
0.757895 -0.757895 scale
0 -1046 translate

% User defined page layout

%% Set color level
/CL 2 def

% Set origin
400 250 translate


%%EndSetup

13 /Helvetica-9x17 SetFont
0.996078 0.996078 0.996078 SetBgColor
68 38 4 123 Box Fill

gsave clip


% Element "Amplitude"

0 setlinejoin
0 setlinecap
0 0 1 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
 newpath 78 100 moveto
 78 100 lineto
DashesProc stroke
1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    0 0 1 SetBgColor
    Fill
    0 0 1 SetFgColor
    stroke
  grestore
} def

78 100 1 Ci
78 100 1 Ci

% Element "Phase"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  gsave
    1 0 0 SetBgColor
    Fill
    1 0 0 SetFgColor
    stroke
  grestore
} def

78 144 1 Ci
78 144 1 Ci

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 7 40 Box Fill

0 40 69 120 Box Fill

71 40 69 120 Box Fill

0 160 7 39 Box Fill

1 1 1 SetBgColor
68 159 3 1 Box Fill

70 38 1 122 Box Fill

