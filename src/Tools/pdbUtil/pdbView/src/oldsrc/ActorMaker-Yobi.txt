
/*

void ActorMaker::SetColor(char* AtomName, int ResNum)
{

  switch(Prop->GetColorMode()){
    
  case Monochrome:
    actor->GetProperty()->SetColor(0.5, 0.5, 0.5);
    break;
    
  case CPK:
    switch(AtomName[strspn(AtomName," ")]){

    case 'C':
      actor->GetProperty()->SetColor((float*)CarbonColor);
      break;
      
    case 'H':
      actor->GetProperty()->SetColor((float*)HydrogenColor);
      break;
      
    case 'O':
      actor->GetProperty()->SetColor((float*)OxygenColor);
      break;
      
    case 'S':
      actor->GetProperty()->SetColor((float*)SulphurColor);
      break;
      
    case 'N':
      actor->GetProperty()->SetColor((float*)NitrogenColor);
      break;
      
    default:
      actor->GetProperty()->SetColor((float*)DefaultColor);
      break;
      
    }
    //actor->GetProperty()->SetColor(color);
    //break;
    /*

    case 'C':
      //lightgray
      color[0]=0.5; color[1]=0.5; color[2]=0.5;
      break;
      
    case 'H':
      //white
      color[0]=1.0; color[1]=1.0; color[2]=1.0;
      break;
      
    case 'O':
      //red
      color[0]=0.9; color[1]=0.2; color[2]=0.0;
      break;
      
    case 'S':
      //yellow
      color[0]=0.9; color[1]=0.85; color[2]=0.1;
      break;
      
    case 'N':
      //lightblue
      color[0]=0.5; color[1]=0.5; color[2]=0.8;
      break;
      
    default:
      //darkgray
      color[0]=0.3; color[1]=0.3; color[2]=0.3;
      break;
      
    }
    actor->GetProperty()->SetColor(color);
    break;
    */
    break;
    
  case Group:
    float x;
    x = (float)(ResNum - Prop->GetResNumMin())/(float)(Prop->GetResNumMax() - Prop->GetResNumMin());

    printf("ResNum %d ::: x = %f\n",ResNum,x);

    color[0] = (float)-4*fabs(x)+2;
    color[1] = (float)-4*fabs(x-0.5)+2;
    color[2] = (float)-4*fabs(x-1)+2;

    if(color[0]>1){color[0] = 1;}
    if(color[1]>1){color[1] = 1;}
    if(color[2]>1){color[2] = 1;}

    if(color[0]<0){color[0] = 0;}
    if(color[1]<0){color[1] = 0;}
    if(color[2]<0){color[2] = 0;}


    printf("R %f  G %f  B %f\n",color[0],color[1],color[2]);
   
    actor->GetProperty()->SetColor(color);
    break;
  }

  //actor->GetProperty()->SetInterpolationToFlat();

}

*/


/*

void ActorMaker::SetColor(char* AtomName, int ResNum, char* ResName)
{

  switch(Prop->GetColorMode()){
    
  case Monochrome:
    actor->GetProperty()->SetColor(0.5, 0.5, 0.5);
    break;
    
  case CPK:
    CPKcolor(AtomName);
    break;
    
  case Group:
    RedToBlue( (double)(ResNum - Prop->GetResNumMin())/(float)(Prop->GetResNumMax() - Prop->GetResNumMin()) );
    break;

  case Temperature:


    break;
    
  case HomoColor:
    if(ResNum==0){
      printf("ResNum==NULL! Error---Color change to Gray");
      actor->GetProperty()->SetColor(0.5, 0.5, 0.5);
    }else if(Conect!=7){
      ConectDataBase();
      Conect = 7;
      RedToBlue(homoStore->GetPercent(ResNum,dataStore->GetOneCharacter(ResName))/100);
    }else{
      RedToBlue(homoStore->GetPercent(ResNum,dataStore->GetOneCharacter(ResName))/100);
     }
  }
}

*/


/*
void ActorMaker::SetColor(char* AtomName)
{
    switch(property->GetColorMode()){
      
      case Monochrome:
      actor->GetProperty()->SetColor(0.5, 0.5, 0.5);
      break;
      
      case CPK:
      if(strchr(AtomName,'C')!=NULL){
	//lightgray
	color[0]=0.8; color[1]=0.8; color[2]=0.8;
      }else if(strchr(AtomName,'H')!=NULL){
	//white
	color[0]=1.0; color[1]=1.0; color[2]=1.0;
      }else if(strchr(AtomName,'O')!=NULL){
	//red
	color[0]=0.9; color[1]=0.2; color[2]=0.0;
      }else if(strchr(AtomName,'S')!=NULL){
	//yellow
	color[0]=0.9; color[1]=0.85; color[2]=0.1;
      }else if(strchr(AtomName,'N')!=NULL){
	//lightblue
	color[0]=0.5; color[1]=0.5; color[2]=0.8;
      }else{
	//darkgray
	color[0]=0.3; color[1]=0.3; color[2]=0.3;
      }
      actor->GetProperty()->SetColor(color);
      break;
    }
}

*/


/*
void ActorMaker::SetColor(char* AtomName)
{
    switch(Prop->GetColorMode()){
      
      case Monochrome:
      actor->GetProperty()->SetColor(0.5, 0.5, 0.5);
      break;
      
      case CPK:
	switch(AtomName[strspn(AtomName," ")]){
	case 'C':
	//lightgray
	color[0]=0.5; color[1]=0.5; color[2]=0.5;
	break;

	case 'H':
	//white
	color[0]=1.0; color[1]=1.0; color[2]=1.0;
	break;

	case 'O':
	//red
	color[0]=0.9; color[1]=0.2; color[2]=0.0;
	break;

	case 'S':
	//yellow
	color[0]=0.9; color[1]=0.85; color[2]=0.1;
	break;

	case 'N':
	//lightblue
	color[0]=0.5; color[1]=0.5; color[2]=0.8;
	break;

	default:
	//darkgray
	color[0]=0.3; color[1]=0.3; color[2]=0.3;
	break;

	}
	actor->GetProperty()->SetColor(color);
	break;

    case Group:
      break;
      
    }
}

*/
