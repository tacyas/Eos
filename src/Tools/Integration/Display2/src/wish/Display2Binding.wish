#!../Display2.HP 
proc display2BindingSet { c } {
	global Roi
	global mousePressed

	bind . <Any-FocusIn> {
		if {("%d" == "NotifyVirtual") && ("%m"=="NotifyNormal")} {
			focus .menu
		}
	}

	#
	# Popup Menu
	#
	bind $c <ButtonPress-2> {
		switch $Roi(Action) {
			Create {
				tk_popup .menu.roi.m  %X %Y
			}
			Creating {
				tk_popup .menu.edit.m %X %Y
			}
			Select {
				tk_popup .menu.roi.m %X %Y
			}
			Selecting {
				tk_popup .menu.edit.m %X %Y
			}
			default {
				tk_popup .menu.edit.m %X %Y
			}
		}
	}
	bind $c <Alt-ButtonPress-1> {
		switch $Roi(Action) {
			Create {
				tk_popup .menu.roi.m  %X %Y
			}
			Creating {
				tk_popup .menu.edit.m %X %Y
			}
			Select {
				tk_popup .menu.roi.m %X %Y
			}
			Selecting {
				tk_popup .menu.edit.m %X %Y
			}
			default {
				tk_popup .menu.edit.m %X %Y
			}
		}
	}
	bind $c <Double-ButtonPress-1> {
		switch $Roi(Action) {
			Create {
				tk_popup .menu.roi.m  %X %Y
			}
			Creating {
				tk_popup .menu.edit.m %X %Y
			}
			Select {
				tk_popup .menu.roi.m %X %Y
			}
			Selecting {
				tk_popup .menu.edit.m %X %Y
			}
			default {
				tk_popup .menu.edit.m %X %Y
			}
		}
	}

	#
	# Popup Menu
	#
	bind $c <ButtonPress-3> {
		tk_popup .menu.info.m  %X %Y
	}

	bind $c <ButtonPress-1> {
		global Point
	
		pointSet %W %x %y
	
		switch $Roi(Action) {
			Create {
				roiAreaCreateStart %W $Point(x) $Point(y)
			}
			Creating {
				roiAreaCreateStart %W $Point(x) $Point(y)
			}
			Select {
				roiAreaSelectStart %W $Point(x) $Point(y)
			}
			Move {
				roiAreaMoveStart %W $Point(x) $Point(y)
			}
			Resize {
				roiAreaResizeStart %W $Point(x) $Point(y)
			}
			Rotate {
				roiAreaRotateStart %W $Point(x) $Point(y)
			}
		}
	}
	
	bind $c <Enter> {
	
	}
	
	bind $c <Leave> {
	
	}
	
	bind $c <Motion> {
		global Point

		if { $mousePressed(mode) == 1 } {
			pointSet %W %x %y
	
			switch $Roi(Action) {
				Create {
					roiAreaCreateMotion %W $Point(x) $Point(y)
				}
				Creating {
					roiAreaCreateMotion %W $Point(x) $Point(y)
				}
				Select {
					roiAreaSelectMotion %W $Point(x) $Point(y)
				}
				Selecting {
					roiAreaSelectMotion %W $Point(x) $Point(y)
				}
				Move {
					roiAreaMoveMotion %W $Point(x) $Point(y)
				}
				Resize {
					roiAreaResizeMotion %W $Point(x) $Point(y)
				}
				Rotate {
					roiAreaRotateMotion %W $Point(x) $Point(y)
				}
			}
		}
	}
	
	bind $c <ButtonRelease-1> {
		global Point
		
		pointSet %W %x %y
	
		switch $Roi(Action) {
			Create {
				roiAreaCreateEnd %W $Point(x) $Point(y)
				switch $Roi(Shape) {
					Spline {
						set Roi(Action) Creating
					}
					default {
						set Roi(Action) Move
					}
				}
			}
			Creating {
				roiAreaCreateEnd %W $Point(x) $Point(y)
				switch $Roi(Shape) {
					Spline {
						set Roi(Action) Creating
					}
					default {
						set Roi(Action) Move
					}
				}
			}
			Select {
				roiAreaSelectEnd %W $Point(x) $Point(y)
				set Roi(Action) Move
			}
			Selecting {
				roiAreaSelectEnd %W $Point(x) $Point(y)
				set Roi(Action) Move
			}
			Move {
				roiAreaMoveEnd   %W $Point(x) $Point(y)
			}
			Resize {
				roiAreaResizeEnd %W $Point(x) $Point(y)
			}
			Rotate {
				roiAreaRotateEnd %W $Point(x) $Point(y)
			}
		}
	}

	bind $c <KeyPress-l> {
		global Point
		
		puts "l"
		pointSet %W [expr %x + 1] %y
	}

	bind $c <KeyPress-h> {
		global Point
		
		pointSet %W [expr %x - 1] %y
	}

	bind $c <KeyPress-k> {
		global Point

		pointSet %W %x [expr %y - 1] 
	}

	bind $c <KeyPress-j> {
		global Point

		pointSet %W %x [expr %y + 1 ]
	}

	bind $c <KeyPress-Right> {
		global Point

		pointSet %W [expr %x + 1] %y
	}

	bind $c <KeyPress-Left> {
		global Point

		pointSet %W [expr %x - 1] %y
	}

	bind $c <KeyPress-Up> {
		global Point

		pointSet %W %x [expr %y - 1] 
	}

	bind $c <KeyPress-Down> {
		global Point

		pointSet %W %x [expr %y + 1 ]
	}
}
